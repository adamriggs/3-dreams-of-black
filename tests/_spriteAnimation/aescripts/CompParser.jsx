function CompParser(comp) {    this.comp = comp;        Log.info("Composition has "+ comp.layers.length + " layers");            this.flatLayers = [];    this.exportedLayers = [];    for(var i = 1; i <= comp.layers.length; i++) {        this.recurseLayer(comp.layers[i]);    }    for(var i = 0; i < this.flatLayers.length; i++) {        var layer = this.flatLayers[i].layer;        if(layer.parent) {            for(var j = 0; j < this.flatLayers.length; j++) {                if(this.flatLayers[j].layer == layer.parent)                     this.flatLayers[i].parent = this.flatLayers[j];            }        }    }    Log.info("Found "+ this.flatLayers.length + " layers (incl nested)");        //for(var i = 0; i < this.flatLayers.length; i++) {        //if(this.flatLayers[i].isVisible())             //Log.info(this.flatLayers[i].toString());    //}}CompParser.prototype.recurseLayer = function(layer) {    var lex = new LayerExportData(layer);        if(lex.isComposition()) {        for(var i = 1; i <= layer.source.layers.length; i++) {           var nlex = this.recurseLayer(layer.source.layers[i]);           nlex.nestedComp = lex;        }    } else {        this.flatLayers.push(lex);    }    return lex;}CompParser.prototype.createExportObject = function() {    var exportLayers = {};        exportLayers.duration = ExportSettings.duration;        exportLayers.cameras = [];    exportLayers.planes = {};        for(var i = 0; i < this.flatLayers.length; i++) {        var fl = this.flatLayers[i];        if(fl.isVisible() && fl.isCamera())            exportLayers.cameras.push(fl.toObject());    }    for(var i = 0; i < this.flatLayers.length; i++) {        var fl = this.flatLayers[i];        if(fl.isVisible() && fl.isAsset()) {            while(exportLayers.planes[fl.uniqueName()] != null) fl.suffix++;            exportLayers.planes[fl.uniqueName()] = fl.toObject();        }    }    return exportLayers;}