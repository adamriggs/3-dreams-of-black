// ThreeExtras.js r32 - http://github.com/mrdoob/three.js
var THREE=THREE||{};THREE.Color=function(a){this.autoUpdate=true;this.setHex(a)};
THREE.Color.prototype={setRGB:function(a,c,d){this.r=a;this.g=c;this.b=d;if(this.autoUpdate){this.updateHex();this.updateStyleString()}},setHex:function(a){this.hex=~~a&16777215;if(this.autoUpdate){this.updateRGBA();this.updateStyleString()}},updateHex:function(){this.hex=~~(this.r*255)<<16^~~(this.g*255)<<8^~~(this.b*255)},updateRGBA:function(){this.r=(this.hex>>16&255)/255;this.g=(this.hex>>8&255)/255;this.b=(this.hex&255)/255},updateStyleString:function(){this.__styleString="rgb("+~~(this.r*255)+
","+~~(this.g*255)+","+~~(this.b*255)+")"},clone:function(){return new THREE.Color(this.hex)},toString:function(){return"THREE.Color ( r: "+this.r+", g: "+this.g+", b: "+this.b+", hex: "+this.hex+" )"}};THREE.Vector2=function(a,c){this.x=a||0;this.y=c||0};
THREE.Vector2.prototype={set:function(a,c){this.x=a;this.y=c;return this},copy:function(a){this.x=a.x;this.y=a.y;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;return this},add:function(a,c){this.x=a.x+c.x;this.y=a.y+c.y;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;return this},sub:function(a,c){this.x=a.x-c.x;this.y=a.y-c.y;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;return this},unit:function(){this.multiplyScalar(1/this.length());return this},length:function(){return Math.sqrt(this.x*
this.x+this.y*this.y)},lengthSq:function(){return this.x*this.x+this.y*this.y},negate:function(){this.x=-this.x;this.y=-this.y;return this},clone:function(){return new THREE.Vector2(this.x,this.y)},toString:function(){return"THREE.Vector2 ("+this.x+", "+this.y+")"}};THREE.Vector3=function(a,c,d){this.x=a||0;this.y=c||0;this.z=d||0};
THREE.Vector3.prototype={set:function(a,c,d){this.x=a;this.y=c;this.z=d;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},add:function(a,c){this.x=a.x+c.x;this.y=a.y+c.y;this.z=a.z+c.z;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},sub:function(a,c){this.x=a.x-c.x;this.y=a.y-c.y;this.z=a.z-c.z;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},
cross:function(a,c){this.x=a.y*c.z-a.z*c.y;this.y=a.z*c.x-a.x*c.z;this.z=a.x*c.y-a.y*c.x;return this},crossSelf:function(a){var c=this.x,d=this.y,e=this.z;this.x=d*a.z-e*a.y;this.y=e*a.x-c*a.z;this.z=c*a.y-d*a.x;return this},multiply:function(a,c){this.x=a.x*c.x;this.y=a.y*c.y;this.z=a.z*c.z;return this},multiplySelf:function(a){this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;return this},divideSelf:function(a){this.x/=a.x;this.y/=a.y;this.z/=
a.z;return this},divideScalar:function(a){this.x/=a;this.y/=a;this.z/=a;return this},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},distanceTo:function(a){var c=this.x-a.x,d=this.y-a.y;a=this.z-a.z;return Math.sqrt(c*c+d*d+a*a)},distanceToSquared:function(a){var c=this.x-a.x,d=this.y-a.y;a=this.z-a.z;return c*c+d*d+a*a},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},negate:function(){this.x=
-this.x;this.y=-this.y;this.z=-this.z;return this},normalize:function(){var a=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z);a>0?this.multiplyScalar(1/a):this.set(0,0,0);return this},setLength:function(a){return this.normalize().multiplyScalar(a)},isZero:function(){return Math.abs(this.x)<1.0E-4&&Math.abs(this.y)<1.0E-4&&Math.abs(this.z)<1.0E-4},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)},toString:function(){return"THREE.Vector3 ( "+this.x+", "+this.y+", "+this.z+" )"}};
THREE.Vector4=function(a,c,d,e){this.x=a||0;this.y=c||0;this.z=d||0;this.w=e||1};
THREE.Vector4.prototype={set:function(a,c,d,e){this.x=a;this.y=c;this.z=d;this.w=e;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=a.w||1;return this},add:function(a,c){this.x=a.x+c.x;this.y=a.y+c.y;this.z=a.z+c.z;this.w=a.w+c.w;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},sub:function(a,c){this.x=a.x-c.x;this.y=a.y-c.y;this.z=a.z-c.z;this.w=a.w-c.w;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;
return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;this.w*=a;return this},divideScalar:function(a){this.x/=a;this.y/=a;this.z/=a;this.w/=a;return this},lerpSelf:function(a,c){this.x+=(a.x-this.x)*c;this.y+=(a.y-this.y)*c;this.z+=(a.z-this.z)*c;this.w+=(a.w-this.w)*c},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)},toString:function(){return"THREE.Vector4 ("+this.x+", "+this.y+", "+this.z+", "+this.w+")"}};
THREE.Ray=function(a,c){this.origin=a||new THREE.Vector3;this.direction=c||new THREE.Vector3};
THREE.Ray.prototype={intersectScene:function(a){var c,d,e=a.objects,f=[];a=0;for(c=e.length;a<c;a++){d=e[a];if(d instanceof THREE.Mesh)f=f.concat(this.intersectObject(d))}f.sort(function(g,k){return g.distance-k.distance});return f},intersectObject:function(a){function c(H,t,J,m){m=m.clone().subSelf(t);J=J.clone().subSelf(t);var h=H.clone().subSelf(t);H=m.dot(m);t=m.dot(J);m=m.dot(h);var o=J.dot(J);J=J.dot(h);h=1/(H*o-t*t);o=(o*m-t*J)*h;H=(H*J-t*m)*h;return o>0&&H>0&&o+H<1}var d,e,f,g,k,b,j,l,u,A,
n,x=a.geometry,z=x.vertices,C=[];d=0;for(e=x.faces.length;d<e;d++){f=x.faces[d];A=this.origin.clone();n=this.direction.clone();g=a.matrix.multiplyVector3(z[f.a].position.clone());k=a.matrix.multiplyVector3(z[f.b].position.clone());b=a.matrix.multiplyVector3(z[f.c].position.clone());j=f instanceof THREE.Face4?a.matrix.multiplyVector3(z[f.d].position.clone()):null;l=a.rotationMatrix.multiplyVector3(f.normal.clone());u=n.dot(l);if(u<0){l=l.dot((new THREE.Vector3).sub(g,A))/u;A=A.addSelf(n.multiplyScalar(l));
if(f instanceof THREE.Face3){if(c(A,g,k,b)){f={distance:this.origin.distanceTo(A),point:A,face:f,object:a};C.push(f)}}else if(f instanceof THREE.Face4)if(c(A,g,k,j)||c(A,k,b,j)){f={distance:this.origin.distanceTo(A),point:A,face:f,object:a};C.push(f)}}}return C}};
THREE.Rectangle=function(){function a(){g=e-c;k=f-d}var c,d,e,f,g,k,b=true;this.getX=function(){return c};this.getY=function(){return d};this.getWidth=function(){return g};this.getHeight=function(){return k};this.getLeft=function(){return c};this.getTop=function(){return d};this.getRight=function(){return e};this.getBottom=function(){return f};this.set=function(j,l,u,A){b=false;c=j;d=l;e=u;f=A;a()};this.addPoint=function(j,l){if(b){b=false;c=j;d=l;e=j;f=l}else{c=c<j?c:j;d=d<l?d:l;e=e>j?e:j;f=f>l?
f:l}a()};this.add3Points=function(j,l,u,A,n,x){if(b){b=false;c=j<u?j<n?j:n:u<n?u:n;d=l<A?l<x?l:x:A<x?A:x;e=j>u?j>n?j:n:u>n?u:n;f=l>A?l>x?l:x:A>x?A:x}else{c=j<u?j<n?j<c?j:c:n<c?n:c:u<n?u<c?u:c:n<c?n:c;d=l<A?l<x?l<d?l:d:x<d?x:d:A<x?A<d?A:d:x<d?x:d;e=j>u?j>n?j>e?j:e:n>e?n:e:u>n?u>e?u:e:n>e?n:e;f=l>A?l>x?l>f?l:f:x>f?x:f:A>x?A>f?A:f:x>f?x:f}a()};this.addRectangle=function(j){if(b){b=false;c=j.getLeft();d=j.getTop();e=j.getRight();f=j.getBottom()}else{c=c<j.getLeft()?c:j.getLeft();d=d<j.getTop()?d:j.getTop();
e=e>j.getRight()?e:j.getRight();f=f>j.getBottom()?f:j.getBottom()}a()};this.inflate=function(j){c-=j;d-=j;e+=j;f+=j;a()};this.minSelf=function(j){c=c>j.getLeft()?c:j.getLeft();d=d>j.getTop()?d:j.getTop();e=e<j.getRight()?e:j.getRight();f=f<j.getBottom()?f:j.getBottom();a()};this.instersects=function(j){return Math.min(e,j.getRight())-Math.max(c,j.getLeft())>=0&&Math.min(f,j.getBottom())-Math.max(d,j.getTop())>=0};this.empty=function(){b=true;f=e=d=c=0;a()};this.isEmpty=function(){return b};this.toString=
function(){return"THREE.Rectangle ( left: "+c+", right: "+e+", top: "+d+", bottom: "+f+", width: "+g+", height: "+k+" )"}};THREE.Matrix3=function(){this.m=[]};THREE.Matrix3.prototype={transpose:function(){var a,c=this.m;a=c[1];c[1]=c[3];c[3]=a;a=c[2];c[2]=c[6];c[6]=a;a=c[5];c[5]=c[7];c[7]=a;return this}};
THREE.Matrix4=function(a,c,d,e,f,g,k,b,j,l,u,A,n,x,z,C){this.n11=a||1;this.n12=c||0;this.n13=d||0;this.n14=e||0;this.n21=f||0;this.n22=g||1;this.n23=k||0;this.n24=b||0;this.n31=j||0;this.n32=l||0;this.n33=u||1;this.n34=A||0;this.n41=n||0;this.n42=x||0;this.n43=z||0;this.n44=C||1;this.flat=Array(16);this.m33=new THREE.Matrix3};
THREE.Matrix4.prototype={identity:function(){this.n11=1;this.n21=this.n14=this.n13=this.n12=0;this.n22=1;this.n32=this.n31=this.n24=this.n23=0;this.n33=1;this.n43=this.n42=this.n41=this.n34=0;this.n44=1;return this},set:function(a,c,d,e,f,g,k,b,j,l,u,A,n,x,z,C){this.n11=a;this.n12=c;this.n13=d;this.n14=e;this.n21=f;this.n22=g;this.n23=k;this.n24=b;this.n31=j;this.n32=l;this.n33=u;this.n34=A;this.n41=n;this.n42=x;this.n43=z;this.n44=C;return this},copy:function(a){this.n11=a.n11;this.n12=a.n12;this.n13=
a.n13;this.n14=a.n14;this.n21=a.n21;this.n22=a.n22;this.n23=a.n23;this.n24=a.n24;this.n31=a.n31;this.n32=a.n32;this.n33=a.n33;this.n34=a.n34;this.n41=a.n41;this.n42=a.n42;this.n43=a.n43;this.n44=a.n44;return this},lookAt:function(a,c,d){var e=THREE.Matrix4.__tmpVec1,f=THREE.Matrix4.__tmpVec2,g=THREE.Matrix4.__tmpVec3;g.sub(a,c).normalize();e.cross(d,g).normalize();f.cross(g,e).normalize();this.n11=e.x;this.n12=e.y;this.n13=e.z;this.n14=-e.dot(a);this.n21=f.x;this.n22=f.y;this.n23=f.z;this.n24=-f.dot(a);
this.n31=g.x;this.n32=g.y;this.n33=g.z;this.n34=-g.dot(a);this.n43=this.n42=this.n41=0;this.n44=1;return this},multiplyVector3:function(a){var c=a.x,d=a.y,e=a.z,f=1/(this.n41*c+this.n42*d+this.n43*e+this.n44);a.x=(this.n11*c+this.n12*d+this.n13*e+this.n14)*f;a.y=(this.n21*c+this.n22*d+this.n23*e+this.n24)*f;a.z=(this.n31*c+this.n32*d+this.n33*e+this.n34)*f;return a},multiplyVector4:function(a){var c=a.x,d=a.y,e=a.z,f=a.w;a.x=this.n11*c+this.n12*d+this.n13*e+this.n14*f;a.y=this.n21*c+this.n22*d+this.n23*
e+this.n24*f;a.z=this.n31*c+this.n32*d+this.n33*e+this.n34*f;a.w=this.n41*c+this.n42*d+this.n43*e+this.n44*f;return a},crossVector:function(a){var c=new THREE.Vector4;c.x=this.n11*a.x+this.n12*a.y+this.n13*a.z+this.n14*a.w;c.y=this.n21*a.x+this.n22*a.y+this.n23*a.z+this.n24*a.w;c.z=this.n31*a.x+this.n32*a.y+this.n33*a.z+this.n34*a.w;c.w=a.w?this.n41*a.x+this.n42*a.y+this.n43*a.z+this.n44*a.w:1;return c},multiply:function(a,c){var d=a.n11,e=a.n12,f=a.n13,g=a.n14,k=a.n21,b=a.n22,j=a.n23,l=a.n24,u=a.n31,
A=a.n32,n=a.n33,x=a.n34,z=a.n41,C=a.n42,H=a.n43,t=a.n44,J=c.n11,m=c.n12,h=c.n13,o=c.n14,B=c.n21,p=c.n22,q=c.n23,M=c.n24,v=c.n31,D=c.n32,F=c.n33,E=c.n34,y=c.n41,O=c.n42,K=c.n43,U=c.n44;this.n11=d*J+e*B+f*v+g*y;this.n12=d*m+e*p+f*D+g*O;this.n13=d*h+e*q+f*F+g*K;this.n14=d*o+e*M+f*E+g*U;this.n21=k*J+b*B+j*v+l*y;this.n22=k*m+b*p+j*D+l*O;this.n23=k*h+b*q+j*F+l*K;this.n24=k*o+b*M+j*E+l*U;this.n31=u*J+A*B+n*v+x*y;this.n32=u*m+A*p+n*D+x*O;this.n33=u*h+A*q+n*F+x*K;this.n34=u*o+A*M+n*E+x*U;this.n41=z*J+C*B+
H*v+t*y;this.n42=z*m+C*p+H*D+t*O;this.n43=z*h+C*q+H*F+t*K;this.n44=z*o+C*M+H*E+t*U;return this},multiplySelf:function(a){var c=this.n11,d=this.n12,e=this.n13,f=this.n14,g=this.n21,k=this.n22,b=this.n23,j=this.n24,l=this.n31,u=this.n32,A=this.n33,n=this.n34,x=this.n41,z=this.n42,C=this.n43,H=this.n44,t=a.n11,J=a.n21,m=a.n31,h=a.n41,o=a.n12,B=a.n22,p=a.n32,q=a.n42,M=a.n13,v=a.n23,D=a.n33,F=a.n43,E=a.n14,y=a.n24,O=a.n34;a=a.n44;this.n11=c*t+d*J+e*m+f*h;this.n12=c*o+d*B+e*p+f*q;this.n13=c*M+d*v+e*D+f*
F;this.n14=c*E+d*y+e*O+f*a;this.n21=g*t+k*J+b*m+j*h;this.n22=g*o+k*B+b*p+j*q;this.n23=g*M+k*v+b*D+j*F;this.n24=g*E+k*y+b*O+j*a;this.n31=l*t+u*J+A*m+n*h;this.n32=l*o+u*B+A*p+n*q;this.n33=l*M+u*v+A*D+n*F;this.n34=l*E+u*y+A*O+n*a;this.n41=x*t+z*J+C*m+H*h;this.n42=x*o+z*B+C*p+H*q;this.n43=x*M+z*v+C*D+H*F;this.n44=x*E+z*y+C*O+H*a;return this},multiplyScalar:function(a){this.n11*=a;this.n12*=a;this.n13*=a;this.n14*=a;this.n21*=a;this.n22*=a;this.n23*=a;this.n24*=a;this.n31*=a;this.n32*=a;this.n33*=a;this.n34*=
a;this.n41*=a;this.n42*=a;this.n43*=a;this.n44*=a;return this},determinant:function(){var a=this.n11,c=this.n12,d=this.n13,e=this.n14,f=this.n21,g=this.n22,k=this.n23,b=this.n24,j=this.n31,l=this.n32,u=this.n33,A=this.n34,n=this.n41,x=this.n42,z=this.n43,C=this.n44;return e*k*l*n-d*b*l*n-e*g*u*n+c*b*u*n+d*g*A*n-c*k*A*n-e*k*j*x+d*b*j*x+e*f*u*x-a*b*u*x-d*f*A*x+a*k*A*x+e*g*j*z-c*b*j*z-e*f*l*z+a*b*l*z+c*f*A*z-a*g*A*z-d*g*j*C+c*k*j*C+d*f*l*C-a*k*l*C-c*f*u*C+a*g*u*C},transpose:function(){function a(c,d,
e){var f=c[d];c[d]=c[e];c[e]=f}a(this,"n21","n12");a(this,"n31","n13");a(this,"n32","n23");a(this,"n41","n14");a(this,"n42","n24");a(this,"n43","n34");return this},clone:function(){var a=new THREE.Matrix4;a.n11=this.n11;a.n12=this.n12;a.n13=this.n13;a.n14=this.n14;a.n21=this.n21;a.n22=this.n22;a.n23=this.n23;a.n24=this.n24;a.n31=this.n31;a.n32=this.n32;a.n33=this.n33;a.n34=this.n34;a.n41=this.n41;a.n42=this.n42;a.n43=this.n43;a.n44=this.n44;return a},flatten:function(){var a=this.flat;a[0]=this.n11;
a[1]=this.n21;a[2]=this.n31;a[3]=this.n41;a[4]=this.n12;a[5]=this.n22;a[6]=this.n32;a[7]=this.n42;a[8]=this.n13;a[9]=this.n23;a[10]=this.n33;a[11]=this.n43;a[12]=this.n14;a[13]=this.n24;a[14]=this.n34;a[15]=this.n44;return a},setTranslation:function(a,c,d){this.set(1,0,0,a,0,1,0,c,0,0,1,d,0,0,0,1);return this},setScale:function(a,c,d){this.set(a,0,0,0,0,c,0,0,0,0,d,0,0,0,0,1);return this},setRotX:function(a){var c=Math.cos(a);a=Math.sin(a);this.set(1,0,0,0,0,c,-a,0,0,a,c,0,0,0,0,1);return this},setRotY:function(a){var c=
Math.cos(a);a=Math.sin(a);this.set(c,0,a,0,0,1,0,0,-a,0,c,0,0,0,0,1);return this},setRotZ:function(a){var c=Math.cos(a);a=Math.sin(a);this.set(c,-a,0,0,a,c,0,0,0,0,1,0,0,0,0,1);return this},setRotAxis:function(a,c){var d=Math.cos(c),e=Math.sin(c),f=1-d,g=a.x,k=a.y,b=a.z,j=f*g,l=f*k;this.set(j*g+d,j*k-e*b,j*b+e*k,0,j*k+e*b,l*k+d,l*b-e*g,0,j*b-e*k,l*b+e*g,f*b*b+d,0,0,0,0,1);return this},toString:function(){return"| "+this.n11+" "+this.n12+" "+this.n13+" "+this.n14+" |\n| "+this.n21+" "+this.n22+" "+
this.n23+" "+this.n24+" |\n| "+this.n31+" "+this.n32+" "+this.n33+" "+this.n34+" |\n| "+this.n41+" "+this.n42+" "+this.n43+" "+this.n44+" |"}};THREE.Matrix4.translationMatrix=function(a,c,d){var e=new THREE.Matrix4;e.setTranslation(a,c,d);return e};THREE.Matrix4.scaleMatrix=function(a,c,d){var e=new THREE.Matrix4;e.setScale(a,c,d);return e};THREE.Matrix4.rotationXMatrix=function(a){var c=new THREE.Matrix4;c.setRotX(a);return c};
THREE.Matrix4.rotationYMatrix=function(a){var c=new THREE.Matrix4;c.setRotY(a);return c};THREE.Matrix4.rotationZMatrix=function(a){var c=new THREE.Matrix4;c.setRotZ(a);return c};THREE.Matrix4.rotationAxisAngleMatrix=function(a,c){var d=new THREE.Matrix4;d.setRotAxis(a,c);return d};
THREE.Matrix4.makeInvert=function(a){var c=a.n11,d=a.n12,e=a.n13,f=a.n14,g=a.n21,k=a.n22,b=a.n23,j=a.n24,l=a.n31,u=a.n32,A=a.n33,n=a.n34,x=a.n41,z=a.n42,C=a.n43,H=a.n44,t=new THREE.Matrix4;t.n11=b*n*z-j*A*z+j*u*C-k*n*C-b*u*H+k*A*H;t.n12=f*A*z-e*n*z-f*u*C+d*n*C+e*u*H-d*A*H;t.n13=e*j*z-f*b*z+f*k*C-d*j*C-e*k*H+d*b*H;t.n14=f*b*u-e*j*u-f*k*A+d*j*A+e*k*n-d*b*n;t.n21=j*A*x-b*n*x-j*l*C+g*n*C+b*l*H-g*A*H;t.n22=e*n*x-f*A*x+f*l*C-c*n*C-e*l*H+c*A*H;t.n23=f*b*x-e*j*x-f*g*C+c*j*C+e*g*H-c*b*H;t.n24=e*j*l-f*b*l+
f*g*A-c*j*A-e*g*n+c*b*n;t.n31=k*n*x-j*u*x+j*l*z-g*n*z-k*l*H+g*u*H;t.n32=f*u*x-d*n*x-f*l*z+c*n*z+d*l*H-c*u*H;t.n33=e*j*x-f*k*x+f*g*z-c*j*z-d*g*H+c*k*H;t.n34=f*k*l-d*j*l-f*g*u+c*j*u+d*g*n-c*k*n;t.n41=b*u*x-k*A*x-b*l*z+g*A*z+k*l*C-g*u*C;t.n42=d*A*x-e*u*x+e*l*z-c*A*z-d*l*C+c*u*C;t.n43=e*k*x-d*b*x-e*g*z+c*b*z+d*g*C-c*k*C;t.n44=d*b*l-e*k*l+e*g*u-c*b*u-d*g*A+c*k*A;t.multiplyScalar(1/a.determinant());return t};
THREE.Matrix4.makeInvert3x3=function(a){var c=a.flatten();a=a.m33;var d=a.m,e=c[10]*c[5]-c[6]*c[9],f=-c[10]*c[1]+c[2]*c[9],g=c[6]*c[1]-c[2]*c[5],k=-c[10]*c[4]+c[6]*c[8],b=c[10]*c[0]-c[2]*c[8],j=-c[6]*c[0]+c[2]*c[4],l=c[9]*c[4]-c[5]*c[8],u=-c[9]*c[0]+c[1]*c[8],A=c[5]*c[0]-c[1]*c[4];c=c[0]*e+c[1]*k+c[2]*l;if(c==0)throw"matrix not invertible";c=1/c;d[0]=c*e;d[1]=c*f;d[2]=c*g;d[3]=c*k;d[4]=c*b;d[5]=c*j;d[6]=c*l;d[7]=c*u;d[8]=c*A;return a};
THREE.Matrix4.makeFrustum=function(a,c,d,e,f,g){var k,b,j;k=new THREE.Matrix4;b=2*f/(c-a);j=2*f/(e-d);a=(c+a)/(c-a);d=(e+d)/(e-d);e=-(g+f)/(g-f);f=-2*g*f/(g-f);k.n11=b;k.n12=0;k.n13=a;k.n14=0;k.n21=0;k.n22=j;k.n23=d;k.n24=0;k.n31=0;k.n32=0;k.n33=e;k.n34=f;k.n41=0;k.n42=0;k.n43=-1;k.n44=0;return k};THREE.Matrix4.makePerspective=function(a,c,d,e){var f;a=d*Math.tan(a*Math.PI/360);f=-a;return THREE.Matrix4.makeFrustum(f*c,a*c,f,a,d,e)};
THREE.Matrix4.makeOrtho=function(a,c,d,e,f,g){var k,b,j,l;k=new THREE.Matrix4;b=c-a;j=d-e;l=g-f;a=(c+a)/b;d=(d+e)/j;f=(g+f)/l;k.n11=2/b;k.n12=0;k.n13=0;k.n14=-a;k.n21=0;k.n22=2/j;k.n23=0;k.n24=-d;k.n31=0;k.n32=0;k.n33=-2/l;k.n34=-f;k.n41=0;k.n42=0;k.n43=0;k.n44=1;return k};THREE.Matrix4.__tmpVec1=new THREE.Vector3;THREE.Matrix4.__tmpVec2=new THREE.Vector3;THREE.Matrix4.__tmpVec3=new THREE.Vector3;
THREE.Vertex=function(a,c){this.position=a||new THREE.Vector3;this.positionWorld=new THREE.Vector3;this.positionScreen=new THREE.Vector4;this.normal=c||new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.normalScreen=new THREE.Vector3;this.tangent=new THREE.Vector4;this.__visible=true};THREE.Vertex.prototype={toString:function(){return"THREE.Vertex ( position: "+this.position+", normal: "+this.normal+" )"}};
THREE.Face3=function(a,c,d,e,f){this.a=a;this.b=c;this.c=d;this.centroid=new THREE.Vector3;this.normal=e instanceof THREE.Vector3?e:new THREE.Vector3;this.vertexNormals=e instanceof Array?e:[];this.materials=f instanceof Array?f:[f]};THREE.Face3.prototype={toString:function(){return"THREE.Face3 ( "+this.a+", "+this.b+", "+this.c+" )"}};
THREE.Face4=function(a,c,d,e,f,g){this.a=a;this.b=c;this.c=d;this.d=e;this.centroid=new THREE.Vector3;this.normal=f instanceof THREE.Vector3?f:new THREE.Vector3;this.vertexNormals=f instanceof Array?f:[];this.materials=g instanceof Array?g:[g]};THREE.Face4.prototype={toString:function(){return"THREE.Face4 ( "+this.a+", "+this.b+", "+this.c+" "+this.d+" )"}};THREE.UV=function(a,c){this.u=a||0;this.v=c||0};
THREE.UV.prototype={copy:function(a){this.u=a.u;this.v=a.v},toString:function(){return"THREE.UV ("+this.u+", "+this.v+")"}};THREE.Geometry=function(){this.vertices=[];this.faces=[];this.uvs=[];this.boundingSphere=this.boundingBox=null;this.geometryChunks={};this.hasTangents=false};
THREE.Geometry.prototype={computeCentroids:function(){var a,c,d;a=0;for(c=this.faces.length;a<c;a++){d=this.faces[a];d.centroid.set(0,0,0);if(d instanceof THREE.Face3){d.centroid.addSelf(this.vertices[d.a].position);d.centroid.addSelf(this.vertices[d.b].position);d.centroid.addSelf(this.vertices[d.c].position);d.centroid.divideScalar(3)}else if(d instanceof THREE.Face4){d.centroid.addSelf(this.vertices[d.a].position);d.centroid.addSelf(this.vertices[d.b].position);d.centroid.addSelf(this.vertices[d.c].position);
d.centroid.addSelf(this.vertices[d.d].position);d.centroid.divideScalar(4)}}},computeFaceNormals:function(a){var c,d,e,f,g,k,b=new THREE.Vector3,j=new THREE.Vector3;e=0;for(f=this.vertices.length;e<f;e++){g=this.vertices[e];g.normal.set(0,0,0)}e=0;for(f=this.faces.length;e<f;e++){g=this.faces[e];if(a&&g.vertexNormals.length){b.set(0,0,0);c=0;for(d=g.normal.length;c<d;c++)b.addSelf(g.vertexNormals[c]);b.divideScalar(3)}else{c=this.vertices[g.a];d=this.vertices[g.b];k=this.vertices[g.c];b.sub(k.position,
d.position);j.sub(c.position,d.position);b.crossSelf(j)}b.isZero()||b.normalize();g.normal.copy(b)}},computeVertexNormals:function(){var a,c,d,e;if(this.__tmpVertices==undefined){e=this.__tmpVertices=Array(this.vertices.length);a=0;for(c=this.vertices.length;a<c;a++)e[a]=new THREE.Vector3;a=0;for(c=this.faces.length;a<c;a++){d=this.faces[a];if(d instanceof THREE.Face3)d.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];else if(d instanceof THREE.Face4)d.vertexNormals=[new THREE.Vector3,
new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]}}else{e=this.__tmpVertices;a=0;for(c=this.vertices.length;a<c;a++)e[a].set(0,0,0)}a=0;for(c=this.faces.length;a<c;a++){d=this.faces[a];if(d instanceof THREE.Face3){e[d.a].addSelf(d.normal);e[d.b].addSelf(d.normal);e[d.c].addSelf(d.normal)}else if(d instanceof THREE.Face4){e[d.a].addSelf(d.normal);e[d.b].addSelf(d.normal);e[d.c].addSelf(d.normal);e[d.d].addSelf(d.normal)}}a=0;for(c=this.vertices.length;a<c;a++)e[a].normalize();a=0;for(c=this.faces.length;a<
c;a++){d=this.faces[a];if(d instanceof THREE.Face3){d.vertexNormals[0].copy(e[d.a]);d.vertexNormals[1].copy(e[d.b]);d.vertexNormals[2].copy(e[d.c])}else if(d instanceof THREE.Face4){d.vertexNormals[0].copy(e[d.a]);d.vertexNormals[1].copy(e[d.b]);d.vertexNormals[2].copy(e[d.c]);d.vertexNormals[3].copy(e[d.d])}}},computeTangents:function(){function a(E,y,O,K,U,W,P){g=E.vertices[y].position;k=E.vertices[O].position;b=E.vertices[K].position;j=f[U];l=f[W];u=f[P];A=k.x-g.x;n=b.x-g.x;x=k.y-g.y;z=b.y-g.y;
C=k.z-g.z;H=b.z-g.z;t=l.u-j.u;J=u.u-j.u;m=l.v-j.v;h=u.v-j.v;o=1/(t*h-J*m);q.set((h*A-m*n)*o,(h*x-m*z)*o,(h*C-m*H)*o);M.set((t*n-J*A)*o,(t*z-J*x)*o,(t*H-J*C)*o);B[y].addSelf(q);B[O].addSelf(q);B[K].addSelf(q);p[y].addSelf(M);p[O].addSelf(M);p[K].addSelf(M)}var c,d,e,f,g,k,b,j,l,u,A,n,x,z,C,H,t,J,m,h,o,B=[],p=[],q=new THREE.Vector3,M=new THREE.Vector3,v=new THREE.Vector3,D=new THREE.Vector3,F=new THREE.Vector3;c=0;for(d=this.vertices.length;c<d;c++){B[c]=new THREE.Vector3;p[c]=new THREE.Vector3}c=0;
for(d=this.faces.length;c<d;c++){e=this.faces[c];f=this.uvs[c];if(e instanceof THREE.Face3){a(this,e.a,e.b,e.c,0,1,2);this.vertices[e.a].normal.copy(e.vertexNormals[0]);this.vertices[e.b].normal.copy(e.vertexNormals[1]);this.vertices[e.c].normal.copy(e.vertexNormals[2])}else if(e instanceof THREE.Face4){a(this,e.a,e.b,e.c,0,1,2);a(this,e.a,e.b,e.d,0,1,3);this.vertices[e.a].normal.copy(e.vertexNormals[0]);this.vertices[e.b].normal.copy(e.vertexNormals[1]);this.vertices[e.c].normal.copy(e.vertexNormals[2]);
this.vertices[e.d].normal.copy(e.vertexNormals[3])}}c=0;for(d=this.vertices.length;c<d;c++){F.copy(this.vertices[c].normal);e=B[c];v.copy(e);v.subSelf(F.multiplyScalar(F.dot(e))).normalize();D.cross(this.vertices[c].normal,e);e=D.dot(p[c]);e=e<0?-1:1;this.vertices[c].tangent.set(v.x,v.y,v.z,e)}this.hasTangents=true},computeBoundingBox:function(){var a;if(this.vertices.length>0){this.boundingBox={x:[this.vertices[0].position.x,this.vertices[0].position.x],y:[this.vertices[0].position.y,this.vertices[0].position.y],
z:[this.vertices[0].position.z,this.vertices[0].position.z]};for(var c=1,d=this.vertices.length;c<d;c++){a=this.vertices[c];if(a.position.x<this.boundingBox.x[0])this.boundingBox.x[0]=a.position.x;else if(a.position.x>this.boundingBox.x[1])this.boundingBox.x[1]=a.position.x;if(a.position.y<this.boundingBox.y[0])this.boundingBox.y[0]=a.position.y;else if(a.position.y>this.boundingBox.y[1])this.boundingBox.y[1]=a.position.y;if(a.position.z<this.boundingBox.z[0])this.boundingBox.z[0]=a.position.z;else if(a.position.z>
this.boundingBox.z[1])this.boundingBox.z[1]=a.position.z}}},computeBoundingSphere:function(){for(var a=this.boundingSphere===null?0:this.boundingSphere.radius,c=0,d=this.vertices.length;c<d;c++)a=Math.max(a,this.vertices[c].position.length());this.boundingSphere={radius:a}},sortFacesByMaterial:function(){function a(u){var A=[];c=0;for(d=u.length;c<d;c++)u[c]==undefined?A.push("undefined"):A.push(u[c].toString());return A.join("_")}var c,d,e,f,g,k,b,j,l={};e=0;for(f=this.faces.length;e<f;e++){g=this.faces[e];
k=g.materials;b=a(k);if(l[b]==undefined)l[b]={hash:b,counter:0};j=l[b].hash+"_"+l[b].counter;if(this.geometryChunks[j]==undefined)this.geometryChunks[j]={faces:[],materials:k,vertices:0};g=g instanceof THREE.Face3?3:4;if(this.geometryChunks[j].vertices+g>65535){l[b].counter+=1;j=l[b].hash+"_"+l[b].counter;if(this.geometryChunks[j]==undefined)this.geometryChunks[j]={faces:[],materials:k,vertices:0}}this.geometryChunks[j].faces.push(e);this.geometryChunks[j].vertices+=g}},toString:function(){return"THREE.Geometry ( vertices: "+
this.vertices+", faces: "+this.faces+", uvs: "+this.uvs+" )"}};
THREE.Camera=function(a,c,d,e){this.fov=a;this.aspect=c;this.near=d;this.far=e;this.position=new THREE.Vector3;this.target={position:new THREE.Vector3};this.autoUpdateMatrix=true;this.projectionMatrix=null;this.matrix=new THREE.Matrix4;this.up=new THREE.Vector3(0,1,0);this.tmpVec=new THREE.Vector3;this.translateX=function(f){this.tmpVec.sub(this.target.position,this.position).normalize().multiplyScalar(f);this.tmpVec.crossSelf(this.up);this.position.addSelf(this.tmpVec);this.target.position.addSelf(this.tmpVec)};
this.translateZ=function(f){this.tmpVec.sub(this.target.position,this.position).normalize().multiplyScalar(f);this.position.subSelf(this.tmpVec);this.target.position.subSelf(this.tmpVec)};this.updateMatrix=function(){this.matrix.lookAt(this.position,this.target.position,this.up)};this.updateProjectionMatrix=function(){this.projectionMatrix=THREE.Matrix4.makePerspective(this.fov,this.aspect,this.near,this.far)};this.updateProjectionMatrix()};
THREE.Camera.prototype={toString:function(){return"THREE.Camera ( "+this.position+", "+this.target.position+" )"}};THREE.Light=function(a){this.color=new THREE.Color(a)};THREE.AmbientLight=function(a){THREE.Light.call(this,a)};THREE.AmbientLight.prototype=new THREE.Light;THREE.AmbientLight.prototype.constructor=THREE.AmbientLight;THREE.DirectionalLight=function(a,c){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.intensity=c||1};THREE.DirectionalLight.prototype=new THREE.Light;
THREE.DirectionalLight.prototype.constructor=THREE.DirectionalLight;THREE.PointLight=function(a,c){THREE.Light.call(this,a);this.position=new THREE.Vector3;this.intensity=c||1};THREE.DirectionalLight.prototype=new THREE.Light;THREE.DirectionalLight.prototype.constructor=THREE.PointLight;
THREE.Object3D=function(){this.id=THREE.Object3DCounter.value++;this.position=new THREE.Vector3;this.rotation=new THREE.Vector3;this.scale=new THREE.Vector3(1,1,1);this.matrix=new THREE.Matrix4;this.rotationMatrix=new THREE.Matrix4;this.tmpMatrix=new THREE.Matrix4;this.screen=new THREE.Vector3;this.visible=this.autoUpdateMatrix=true};
THREE.Object3D.prototype={updateMatrix:function(){var a=this.position,c=this.rotation,d=this.scale,e=this.tmpMatrix;this.matrix.setTranslation(a.x,a.y,a.z);this.rotationMatrix.setRotX(c.x);if(c.y!=0){e.setRotY(c.y);this.rotationMatrix.multiplySelf(e)}if(c.z!=0){e.setRotZ(c.z);this.rotationMatrix.multiplySelf(e)}this.matrix.multiplySelf(this.rotationMatrix);if(d.x!=0||d.y!=0||d.z!=0){e.setScale(d.x,d.y,d.z);this.matrix.multiplySelf(e)}}};THREE.Object3DCounter={value:0};
THREE.Particle=function(a){THREE.Object3D.call(this);this.materials=a instanceof Array?a:[a];this.autoUpdateMatrix=false};THREE.Particle.prototype=new THREE.Object3D;THREE.Particle.prototype.constructor=THREE.Particle;THREE.ParticleSystem=function(a,c){THREE.Object3D.call(this);this.geometry=a;this.materials=c instanceof Array?c:[c];this.autoUpdateMatrix=false};THREE.ParticleSystem.prototype=new THREE.Object3D;THREE.ParticleSystem.prototype.constructor=THREE.ParticleSystem;
THREE.Line=function(a,c,d){THREE.Object3D.call(this);this.geometry=a;this.materials=c instanceof Array?c:[c];this.type=d!=undefined?d:THREE.LineStrip};THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=new THREE.Object3D;THREE.Line.prototype.constructor=THREE.Line;THREE.Mesh=function(a,c){THREE.Object3D.call(this);this.geometry=a;this.materials=c instanceof Array?c:[c];this.overdraw=this.doubleSided=this.flipSided=false;this.geometry.boundingSphere||this.geometry.computeBoundingSphere()};
THREE.Mesh.prototype=new THREE.Object3D;THREE.Mesh.prototype.constructor=THREE.Mesh;THREE.FlatShading=0;THREE.SmoothShading=1;THREE.NormalBlending=0;THREE.AdditiveBlending=1;THREE.SubtractiveBlending=2;
THREE.LineBasicMaterial=function(a){this.color=new THREE.Color(16777215);this.opacity=1;this.blending=THREE.NormalBlending;this.linewidth=1;this.linejoin=this.linecap="round";if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending;if(a.linewidth!==undefined)this.linewidth=a.linewidth;if(a.linecap!==undefined)this.linecap=a.linecap;if(a.linejoin!==undefined)this.linejoin=a.linejoin}};
THREE.LineBasicMaterial.prototype={toString:function(){return"THREE.LineBasicMaterial (<br/>color: "+this.color+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>linewidth: "+this.linewidth+"<br/>linecap: "+this.linecap+"<br/>linejoin: "+this.linejoin+"<br/>)"}};
THREE.MeshBasicMaterial=function(a){this.id=THREE.MeshBasicMaterialCounter.value++;this.color=new THREE.Color(16777215);this.env_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.fog=true;this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.map!==undefined)this.map=
a.map;if(a.env_map!==undefined)this.env_map=a.env_map;if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.fog!==undefined)this.fog=a.fog;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==
undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshBasicMaterial.prototype={toString:function(){return"THREE.MeshBasicMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>map: "+this.map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+this.wireframe_linecap+
"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>)"}};THREE.MeshBasicMaterialCounter={value:0};
THREE.MeshLambertMaterial=function(a){this.id=THREE.MeshLambertMaterialCounter.value++;this.color=new THREE.Color(16777215);this.env_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.fog=true;this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.map!==undefined)this.map=
a.map;if(a.env_map!==undefined)this.env_map=a.env_map;if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.fog!==undefined)this.fog=a.fog;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==
undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshLambertMaterial.prototype={toString:function(){return"THREE.MeshLambertMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>map: "+this.map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>opacity: "+this.opacity+"<br/>shading: "+this.shading+"<br/>blending: "+this.blending+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+
this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/> )"}};THREE.MeshLambertMaterialCounter={value:0};
THREE.MeshPhongMaterial=function(a){this.id=THREE.MeshPhongMaterialCounter.value++;this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(328965);this.specular=new THREE.Color(1118481);this.shininess=30;this.env_map=this.specular_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.fog=true;this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=
this.wireframe_linecap="round";if(a){if(a.color!==undefined)this.color=new THREE.Color(a.color);if(a.ambient!==undefined)this.ambient=new THREE.Color(a.ambient);if(a.specular!==undefined)this.specular=new THREE.Color(a.specular);if(a.shininess!==undefined)this.shininess=a.shininess;if(a.map!==undefined)this.map=a.map;if(a.specular_map!==undefined)this.specular_map=a.specular_map;if(a.env_map!==undefined)this.env_map=a.env_map;if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=
a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.fog!==undefined)this.fog=a.fog;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==
undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshPhongMaterial.prototype={toString:function(){return"THREE.MeshPhongMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>ambient: "+this.ambient+"<br/>specular: "+this.specular+"<br/>shininess: "+this.shininess+"<br/>map: "+this.map+"<br/>specular_map: "+this.specular_map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>opacity: "+this.opacity+"<br/>shading: "+this.shading+"<br/>wireframe: "+
this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>)"}};THREE.MeshPhongMaterialCounter={value:0};
THREE.MeshDepthMaterial=function(a){this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending}};THREE.MeshDepthMaterial.prototype={toString:function(){return"THREE.MeshDepthMaterial"}};
THREE.MeshNormalMaterial=function(a){this.opacity=1;this.shading=THREE.FlatShading;this.blending=THREE.NormalBlending;if(a){if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending}};THREE.MeshNormalMaterial.prototype={toString:function(){return"THREE.MeshNormalMaterial"}};THREE.MeshFaceMaterial=function(){};THREE.MeshFaceMaterial.prototype={toString:function(){return"THREE.MeshFaceMaterial"}};
THREE.MeshShaderMaterial=function(a){this.id=THREE.MeshShaderMaterialCounter.value++;this.vertex_shader=this.fragment_shader="void main() {}";this.uniforms={};this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){if(a.fragment_shader!==undefined)this.fragment_shader=a.fragment_shader;if(a.vertex_shader!==undefined)this.vertex_shader=a.vertex_shader;if(a.uniforms!==
undefined)this.uniforms=a.uniforms;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshShaderMaterial.prototype={toString:function(){return"THREE.MeshShaderMaterial (<br/>id: "+this.id+"<br/>blending: "+this.blending+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>)"}};THREE.MeshShaderMaterialCounter={value:0};
THREE.ParticleBasicMaterial=function(a){this.color=new THREE.Color(16777215);this.map=null;this.opacity=1;this.blending=THREE.NormalBlending;this.offset=new THREE.Vector2;if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.map!==undefined)this.map=a.map;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending}};
THREE.ParticleBasicMaterial.prototype={toString:function(){return"THREE.ParticleBasicMaterial (<br/>color: "+this.color+"<br/>map: "+this.map+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>)"}};THREE.ParticleCircleMaterial=function(a){this.color=new THREE.Color(16777215);this.opacity=1;this.blending=THREE.NormalBlending;if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending}};
THREE.ParticleCircleMaterial.prototype={toString:function(){return"THREE.ParticleCircleMaterial (<br/>color: "+this.color+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>)"}};THREE.ParticleDOMMaterial=function(a){this.domElement=a};THREE.ParticleDOMMaterial.prototype={toString:function(){return"THREE.ParticleDOMMaterial ( domElement: "+this.domElement+" )"}};
THREE.Texture=function(a,c,d,e,f,g){this.image=a;this.mapping=c!==undefined?c:new THREE.UVMapping;this.wrap_s=d!==undefined?d:THREE.ClampToEdgeWrapping;this.wrap_t=e!==undefined?e:THREE.ClampToEdgeWrapping;this.mag_filter=f!==undefined?f:THREE.LinearFilter;this.min_filter=g!==undefined?g:THREE.LinearMipMapLinearFilter};
THREE.Texture.prototype={clone:function(){return new THREE.Texture(this.image,this.mapping,this.wrap_s,this.wrap_t,this.mag_filter,this.min_filter)},toString:function(){return"THREE.Texture (<br/>image: "+this.image+"<br/>wrap_s: "+this.wrap_s+"<br/>wrap_t: "+this.wrap_t+"<br/>mag_filter: "+this.mag_filter+"<br/>min_filter: "+this.min_filter+"<br/>)"}};THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.RepeatWrapping=0;THREE.ClampToEdgeWrapping=1;THREE.MirroredRepeatWrapping=2;
THREE.NearestFilter=3;THREE.NearestMipMapNearestFilter=4;THREE.NearestMipMapLinearFilter=5;THREE.LinearFilter=6;THREE.LinearMipMapNearestFilter=7;THREE.LinearMipMapLinearFilter=8;THREE.ByteType=9;THREE.UnsignedByteType=10;THREE.ShortType=11;THREE.UnsignedShortType=12;THREE.IntType=13;THREE.UnsignedIntType=14;THREE.FloatType=15;THREE.AlphaFormat=16;THREE.RGBFormat=17;THREE.RGBAFormat=18;THREE.LuminanceFormat=19;THREE.LuminanceAlphaFormat=20;
THREE.RenderTarget=function(a,c,d){this.width=a;this.height=c;d=d||{};this.wrap_s=d.wrap_s!==undefined?d.wrap_s:THREE.ClampToEdgeWrapping;this.wrap_t=d.wrap_t!==undefined?d.wrap_t:THREE.ClampToEdgeWrapping;this.mag_filter=d.mag_filter!==undefined?d.mag_filter:THREE.LinearFilter;this.min_filter=d.min_filter!==undefined?d.min_filter:THREE.LinearMipMapLinearFilter;this.format=d.format!==undefined?d.format:THREE.RGBFormat;this.type=d.type!==undefined?d.type:THREE.UnsignedByteType};
var Uniforms={clone:function(a){var c,d,e,f={};for(c in a){f[c]={};for(d in a[c]){e=a[c][d];f[c][d]=e instanceof THREE.Color||e instanceof THREE.Vector3||e instanceof THREE.Texture?e.clone():e}}return f},merge:function(a){var c,d,e,f={};for(c=0;c<a.length;c++){e=this.clone(a[c]);for(d in e)f[d]=e[d]}return f}};THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.LatitudeReflectionMapping=function(){};THREE.LatitudeRefractionMapping=function(){};
THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};THREE.UVMapping=function(){};
THREE.Scene=function(){this.objects=[];this.lights=[];this.fog=null;this.addObject=function(a){this.objects.indexOf(a)===-1&&this.objects.push(a)};this.removeObject=function(a){a=this.objects.indexOf(a);a!==-1&&this.objects.splice(a,1)};this.addLight=function(a){this.lights.indexOf(a)===-1&&this.lights.push(a)};this.removeLight=function(a){a=this.lights.indexOf(a);a!==-1&&this.lights.splice(a,1)};this.toString=function(){return"THREE.Scene ( "+this.objects+" )"}};
THREE.Fog=function(a,c,d){this.color=new THREE.Color(a);this.near=c||1;this.far=d||1E3};THREE.FogExp2=function(a,c){this.color=new THREE.Color(a);this.density=c||2.5E-4};
THREE.Projector=function(){function a(p,q){return q.z-p.z}function c(p,q){var M=0,v=1,D=p.z+p.w,F=q.z+q.w,E=-p.z+p.w,y=-q.z+q.w;if(D>=0&&F>=0&&E>=0&&y>=0)return true;else if(D<0&&F<0||E<0&&y<0)return false;else{if(D<0)M=Math.max(M,D/(D-F));else if(F<0)v=Math.min(v,D/(D-F));if(E<0)M=Math.max(M,E/(E-y));else if(y<0)v=Math.min(v,E/(E-y));if(v<M)return false;else{p.lerpSelf(q,M);q.lerpSelf(p,1-v);return true}}}var d,e,f=[],g,k,b,j=[],l,u,A=[],n,x,z=[],C=new THREE.Vector4,H=new THREE.Vector4,t=new THREE.Matrix4,
J=new THREE.Matrix4,m=[],h=new THREE.Vector4,o=new THREE.Vector4,B;this.projectObjects=function(p,q,M){var v=[],D,F;e=0;t.multiply(q.projectionMatrix,q.matrix);m[0]=new THREE.Vector4(t.n41-t.n11,t.n42-t.n12,t.n43-t.n13,t.n44-t.n14);m[1]=new THREE.Vector4(t.n41+t.n11,t.n42+t.n12,t.n43+t.n13,t.n44+t.n14);m[2]=new THREE.Vector4(t.n41+t.n21,t.n42+t.n22,t.n43+t.n23,t.n44+t.n24);m[3]=new THREE.Vector4(t.n41-t.n21,t.n42-t.n22,t.n43-t.n23,t.n44-t.n24);m[4]=new THREE.Vector4(t.n41-t.n31,t.n42-t.n32,t.n43-
t.n33,t.n44-t.n34);m[5]=new THREE.Vector4(t.n41+t.n31,t.n42+t.n32,t.n43+t.n33,t.n44+t.n34);q=0;for(D=m.length;q<D;q++){F=m[q];F.divideScalar(Math.sqrt(F.x*F.x+F.y*F.y+F.z*F.z))}D=p.objects;p=0;for(q=D.length;p<q;p++){F=D[p];var E;if(!(E=!F.visible)){if(E=F instanceof THREE.Mesh){a:{E=void 0;for(var y=F.position,O=-F.geometry.boundingSphere.radius*Math.max(F.scale.x,Math.max(F.scale.y,F.scale.z)),K=0;K<6;K++){E=m[K].x*y.x+m[K].y*y.y+m[K].z*y.z+m[K].w;if(E<=O){E=false;break a}}E=true}E=!E}E=E}if(!E){d=
f[e]=f[e]||new THREE.RenderableObject;C.copy(F.position);t.multiplyVector3(C);d.object=F;d.z=C.z;v.push(d);e++}}M&&v.sort(a);return v};this.projectScene=function(p,q,M){var v=[],D=q.near,F=q.far,E,y,O,K,U,W,P,da,X,R,T,ba,Y,G,S,V;b=u=x=0;q.autoUpdateMatrix&&q.updateMatrix();t.multiply(q.projectionMatrix,q.matrix);W=this.projectObjects(p,q,true);p=0;for(E=W.length;p<E;p++){P=W[p].object;if(P.visible){P.autoUpdateMatrix&&P.updateMatrix();da=P.matrix;X=P.rotationMatrix;R=P.materials;T=P.overdraw;if(P instanceof
THREE.Mesh){ba=P.geometry;Y=ba.vertices;y=0;for(O=Y.length;y<O;y++){G=Y[y];G.positionWorld.copy(G.position);da.multiplyVector3(G.positionWorld);K=G.positionScreen;K.copy(G.positionWorld);t.multiplyVector4(K);K.x/=K.w;K.y/=K.w;G.__visible=K.z>D&&K.z<F}ba=ba.faces;y=0;for(O=ba.length;y<O;y++){G=ba[y];if(G instanceof THREE.Face3){K=Y[G.a];U=Y[G.b];S=Y[G.c];if(K.__visible&&U.__visible&&S.__visible)if(P.doubleSided||P.flipSided!=(S.positionScreen.x-K.positionScreen.x)*(U.positionScreen.y-K.positionScreen.y)-
(S.positionScreen.y-K.positionScreen.y)*(U.positionScreen.x-K.positionScreen.x)<0){g=j[b]=j[b]||new THREE.RenderableFace3;g.v1.positionWorld.copy(K.positionWorld);g.v2.positionWorld.copy(U.positionWorld);g.v3.positionWorld.copy(S.positionWorld);g.v1.positionScreen.copy(K.positionScreen);g.v2.positionScreen.copy(U.positionScreen);g.v3.positionScreen.copy(S.positionScreen);g.normalWorld.copy(G.normal);X.multiplyVector3(g.normalWorld);g.centroidWorld.copy(G.centroid);da.multiplyVector3(g.centroidWorld);
g.centroidScreen.copy(g.centroidWorld);t.multiplyVector3(g.centroidScreen);S=G.vertexNormals;B=g.vertexNormalsWorld;K=0;for(U=S.length;K<U;K++){V=B[K]=B[K]||new THREE.Vector3;V.copy(S[K]);X.multiplyVector3(V)}g.z=g.centroidScreen.z;g.meshMaterials=R;g.faceMaterials=G.materials;g.overdraw=T;if(P.geometry.uvs[y]){g.uvs[0]=P.geometry.uvs[y][0];g.uvs[1]=P.geometry.uvs[y][1];g.uvs[2]=P.geometry.uvs[y][2]}v.push(g);b++}}else if(G instanceof THREE.Face4){K=Y[G.a];U=Y[G.b];S=Y[G.c];V=Y[G.d];if(K.__visible&&
U.__visible&&S.__visible&&V.__visible)if(P.doubleSided||P.flipSided!=((V.positionScreen.x-K.positionScreen.x)*(U.positionScreen.y-K.positionScreen.y)-(V.positionScreen.y-K.positionScreen.y)*(U.positionScreen.x-K.positionScreen.x)<0||(U.positionScreen.x-S.positionScreen.x)*(V.positionScreen.y-S.positionScreen.y)-(U.positionScreen.y-S.positionScreen.y)*(V.positionScreen.x-S.positionScreen.x)<0)){g=j[b]=j[b]||new THREE.RenderableFace3;g.v1.positionWorld.copy(K.positionWorld);g.v2.positionWorld.copy(U.positionWorld);
g.v3.positionWorld.copy(V.positionWorld);g.v1.positionScreen.copy(K.positionScreen);g.v2.positionScreen.copy(U.positionScreen);g.v3.positionScreen.copy(V.positionScreen);g.normalWorld.copy(G.normal);X.multiplyVector3(g.normalWorld);g.centroidWorld.copy(G.centroid);da.multiplyVector3(g.centroidWorld);g.centroidScreen.copy(g.centroidWorld);t.multiplyVector3(g.centroidScreen);g.z=g.centroidScreen.z;g.meshMaterials=R;g.faceMaterials=G.materials;g.overdraw=T;if(P.geometry.uvs[y]){g.uvs[0]=P.geometry.uvs[y][0];
g.uvs[1]=P.geometry.uvs[y][1];g.uvs[2]=P.geometry.uvs[y][3]}v.push(g);b++;k=j[b]=j[b]||new THREE.RenderableFace3;k.v1.positionWorld.copy(U.positionWorld);k.v2.positionWorld.copy(S.positionWorld);k.v3.positionWorld.copy(V.positionWorld);k.v1.positionScreen.copy(U.positionScreen);k.v2.positionScreen.copy(S.positionScreen);k.v3.positionScreen.copy(V.positionScreen);k.normalWorld.copy(g.normalWorld);k.centroidWorld.copy(g.centroidWorld);k.centroidScreen.copy(g.centroidScreen);k.z=k.centroidScreen.z;k.meshMaterials=
R;k.faceMaterials=G.materials;k.overdraw=T;if(P.geometry.uvs[y]){k.uvs[0]=P.geometry.uvs[y][1];k.uvs[1]=P.geometry.uvs[y][2];k.uvs[2]=P.geometry.uvs[y][3]}v.push(k);b++}}}}else if(P instanceof THREE.Line){J.multiply(t,da);Y=P.geometry.vertices;G=Y[0];G.positionScreen.copy(G.position);J.multiplyVector4(G.positionScreen);y=1;for(O=Y.length;y<O;y++){K=Y[y];K.positionScreen.copy(K.position);J.multiplyVector4(K.positionScreen);U=Y[y-1];h.copy(K.positionScreen);o.copy(U.positionScreen);if(c(h,o)){h.multiplyScalar(1/
h.w);o.multiplyScalar(1/o.w);l=A[u]=A[u]||new THREE.RenderableLine;l.v1.positionScreen.copy(h);l.v2.positionScreen.copy(o);l.z=Math.max(h.z,o.z);l.materials=P.materials;v.push(l);u++}}}else if(P instanceof THREE.Particle){H.set(P.position.x,P.position.y,P.position.z,1);t.multiplyVector4(H);H.z/=H.w;if(H.z>0&&H.z<1){n=z[x]=z[x]||new THREE.RenderableParticle;n.x=H.x/H.w;n.y=H.y/H.w;n.z=H.z;n.rotation=P.rotation.z;n.scale.x=P.scale.x*Math.abs(n.x-(H.x+q.projectionMatrix.n11)/(H.w+q.projectionMatrix.n14));
n.scale.y=P.scale.y*Math.abs(n.y-(H.y+q.projectionMatrix.n22)/(H.w+q.projectionMatrix.n24));n.materials=P.materials;v.push(n);x++}}}}M&&v.sort(a);return v};this.unprojectVector=function(p,q){var M=THREE.Matrix4.makeInvert(q.matrix);M.multiplySelf(THREE.Matrix4.makeInvert(q.projectionMatrix));M.multiplyVector3(p);return p}};
THREE.DOMRenderer=function(){THREE.Renderer.call(this);var a=null,c=new THREE.Projector,d,e,f,g;this.domElement=document.createElement("div");this.setSize=function(k,b){d=k;e=b;f=d/2;g=e/2};this.render=function(k,b){var j,l,u,A,n,x,z,C;a=c.projectScene(k,b);j=0;for(l=a.length;j<l;j++){n=a[j];if(n instanceof THREE.RenderableParticle){z=n.x*f+f;C=n.y*g+g;u=0;for(A=n.material.length;u<A;u++){x=n.material[u];if(x instanceof THREE.ParticleDOMMaterial){x=x.domElement;x.style.left=z+"px";x.style.top=C+"px"}}}}}};
THREE.CanvasRenderer=function(){function a(ma){if(n!=ma)l.globalAlpha=n=ma}function c(ma){if(x!=ma){switch(ma){case THREE.NormalBlending:l.globalCompositeOperation="source-over";break;case THREE.AdditiveBlending:l.globalCompositeOperation="lighter";break;case THREE.SubtractiveBlending:l.globalCompositeOperation="darker"}x=ma}}var d=null,e=new THREE.Projector,f=document.createElement("canvas"),g,k,b,j,l=f.getContext("2d"),u=null,A=null,n=1,x=0,z=null,C=null,H=1,t,J,m,h,o,B,p,q,M,v=new THREE.Color,
D=new THREE.Color,F=new THREE.Color,E=new THREE.Color,y=new THREE.Color,O,K,U,W,P,da,X,R,T,ba=new THREE.Rectangle,Y=new THREE.Rectangle,G=new THREE.Rectangle,S=false,V=new THREE.Color,ia=new THREE.Color,ha=new THREE.Color,w=new THREE.Color,L=Math.PI*2,I=new THREE.Vector3,Z,ca,ga,ja,qa,sa,ya=16;Z=document.createElement("canvas");Z.width=Z.height=2;ca=Z.getContext("2d");ca.fillStyle="rgba(0,0,0,1)";ca.fillRect(0,0,2,2);ga=ca.getImageData(0,0,2,2);ja=ga.data;qa=document.createElement("canvas");qa.width=
qa.height=ya;sa=qa.getContext("2d");sa.translate(-ya/2,-ya/2);sa.scale(ya,ya);ya--;this.domElement=f;this.sortElements=this.sortObjects=this.autoClear=true;this.setSize=function(ma,wa){g=ma;k=wa;b=g/2;j=k/2;f.width=g;f.height=k;ba.set(-b,-j,b,j);n=1;x=0;C=z=null;H=1};this.setClearColor=function(ma,wa){u=ma!==null?new THREE.Color(ma):null;A=wa;Y.set(-b,-j,b,j);l.setTransform(1,0,0,-1,b,j);this.clear()};this.clear=function(){if(!Y.isEmpty()){Y.inflate(1);Y.minSelf(ba);if(u!==null){c(THREE.NormalBlending);
a(1);l.fillStyle="rgba("+Math.floor(u.r*255)+","+Math.floor(u.g*255)+","+Math.floor(u.b*255)+","+A+")";l.fillRect(Y.getX(),Y.getY(),Y.getWidth(),Y.getHeight())}else l.clearRect(Y.getX(),Y.getY(),Y.getWidth(),Y.getHeight());Y.empty()}};this.render=function(ma,wa){function Pa(N){var ea,aa,Q,$=N.lights;ia.setRGB(0,0,0);ha.setRGB(0,0,0);w.setRGB(0,0,0);N=0;for(ea=$.length;N<ea;N++){aa=$[N];Q=aa.color;if(aa instanceof THREE.AmbientLight){ia.r+=Q.r;ia.g+=Q.g;ia.b+=Q.b}else if(aa instanceof THREE.DirectionalLight){ha.r+=
Q.r;ha.g+=Q.g;ha.b+=Q.b}else if(aa instanceof THREE.PointLight){w.r+=Q.r;w.g+=Q.g;w.b+=Q.b}}}function Da(N,ea,aa,Q){var $,fa,la,na,oa=N.lights;N=0;for($=oa.length;N<$;N++){fa=oa[N];la=fa.color;na=fa.intensity;if(fa instanceof THREE.DirectionalLight){fa=aa.dot(fa.position)*na;if(fa>0){Q.r+=la.r*fa;Q.g+=la.g*fa;Q.b+=la.b*fa}}else if(fa instanceof THREE.PointLight){I.sub(fa.position,ea);I.normalize();fa=aa.dot(I)*na;if(fa>0){Q.r+=la.r*fa;Q.g+=la.g*fa;Q.b+=la.b*fa}}}}function Qa(N,ea,aa){if(aa.opacity!=
0){a(aa.opacity);c(aa.blending);var Q,$,fa,la,na,oa;if(aa instanceof THREE.ParticleBasicMaterial){if(aa.map){la=aa.map;na=la.width>>1;oa=la.height>>1;$=ea.scale.x*b;fa=ea.scale.y*j;aa=$*na;Q=fa*oa;G.set(N.x-aa,N.y-Q,N.x+aa,N.y+Q);if(ba.instersects(G)){l.save();l.translate(N.x,N.y);l.rotate(-ea.rotation);l.scale($,-fa);l.translate(-na,-oa);l.drawImage(la,0,0);l.restore()}}}else if(aa instanceof THREE.ParticleCircleMaterial){if(S){V.r=ia.r+ha.r+w.r;V.g=ia.g+ha.g+w.g;V.b=ia.b+ha.b+w.b;v.r=aa.color.r*
V.r;v.g=aa.color.g*V.g;v.b=aa.color.b*V.b;v.updateStyleString()}else v.__styleString=aa.color.__styleString;aa=ea.scale.x*b;Q=ea.scale.y*j;G.set(N.x-aa,N.y-Q,N.x+aa,N.y+Q);if(ba.instersects(G)){$=v.__styleString;if(C!=$)l.fillStyle=C=$;l.save();l.translate(N.x,N.y);l.rotate(-ea.rotation);l.scale(aa,Q);l.beginPath();l.arc(0,0,1,0,L,true);l.closePath();l.fill();l.restore()}}}}function Ra(N,ea,aa,Q){if(Q.opacity!=0){a(Q.opacity);c(Q.blending);l.beginPath();l.moveTo(N.positionScreen.x,N.positionScreen.y);
l.lineTo(ea.positionScreen.x,ea.positionScreen.y);l.closePath();if(Q instanceof THREE.LineBasicMaterial){v.__styleString=Q.color.__styleString;N=Q.linewidth;if(H!=N)l.lineWidth=H=N;N=v.__styleString;if(z!=N)l.strokeStyle=z=N;l.stroke();G.inflate(Q.linewidth*2)}}}function La(N,ea,aa,Q,$,fa){if($.opacity!=0){a($.opacity);c($.blending);h=N.positionScreen.x;o=N.positionScreen.y;B=ea.positionScreen.x;p=ea.positionScreen.y;q=aa.positionScreen.x;M=aa.positionScreen.y;l.beginPath();l.moveTo(h,o);l.lineTo(B,
p);l.lineTo(q,M);l.lineTo(h,o);l.closePath();if($ instanceof THREE.MeshBasicMaterial)if($.map)$.map.image.loaded&&$.map.mapping instanceof THREE.UVMapping&&Aa(h,o,B,p,q,M,$.map.image,Q.uvs[0].u,Q.uvs[0].v,Q.uvs[1].u,Q.uvs[1].v,Q.uvs[2].u,Q.uvs[2].v);else if($.env_map){if($.env_map.image.loaded)if($.env_map.mapping instanceof THREE.SphericalReflectionMapping){N=wa.matrix;I.copy(Q.vertexNormalsWorld[0]);W=(I.x*N.n11+I.y*N.n12+I.z*N.n13)*0.5+0.5;P=-(I.x*N.n21+I.y*N.n22+I.z*N.n23)*0.5+0.5;I.copy(Q.vertexNormalsWorld[1]);
da=(I.x*N.n11+I.y*N.n12+I.z*N.n13)*0.5+0.5;X=-(I.x*N.n21+I.y*N.n22+I.z*N.n23)*0.5+0.5;I.copy(Q.vertexNormalsWorld[2]);R=(I.x*N.n11+I.y*N.n12+I.z*N.n13)*0.5+0.5;T=-(I.x*N.n21+I.y*N.n22+I.z*N.n23)*0.5+0.5;Aa(h,o,B,p,q,M,$.env_map.image,W,P,da,X,R,T)}}else $.wireframe?Ea($.color.__styleString,$.wireframe_linewidth):Fa($.color.__styleString);else if($ instanceof THREE.MeshLambertMaterial){if($.map&&!$.wireframe){$.map.mapping instanceof THREE.UVMapping&&Aa(h,o,B,p,q,M,$.map.image,Q.uvs[0].u,Q.uvs[0].v,
Q.uvs[1].u,Q.uvs[1].v,Q.uvs[2].u,Q.uvs[2].v);c(THREE.SubtractiveBlending)}if(S)if(!$.wireframe&&$.shading==THREE.SmoothShading&&Q.vertexNormalsWorld.length==3){D.r=F.r=E.r=ia.r;D.g=F.g=E.g=ia.g;D.b=F.b=E.b=ia.b;Da(fa,Q.v1.positionWorld,Q.vertexNormalsWorld[0],D);Da(fa,Q.v2.positionWorld,Q.vertexNormalsWorld[1],F);Da(fa,Q.v3.positionWorld,Q.vertexNormalsWorld[2],E);y.r=(F.r+E.r)*0.5;y.g=(F.g+E.g)*0.5;y.b=(F.b+E.b)*0.5;U=Ma(D,F,E,y);Aa(h,o,B,p,q,M,U,0,0,1,0,0,1)}else{V.r=ia.r;V.g=ia.g;V.b=ia.b;Da(fa,
Q.centroidWorld,Q.normalWorld,V);v.r=$.color.r*V.r;v.g=$.color.g*V.g;v.b=$.color.b*V.b;v.updateStyleString();$.wireframe?Ea(v.__styleString,$.wireframe_linewidth):Fa(v.__styleString)}else $.wireframe?Ea($.color.__styleString,$.wireframe_linewidth):Fa($.color.__styleString)}else if($ instanceof THREE.MeshDepthMaterial){O=wa.near;K=wa.far;D.r=D.g=D.b=1-Ha(N.positionScreen.z,O,K);F.r=F.g=F.b=1-Ha(ea.positionScreen.z,O,K);E.r=E.g=E.b=1-Ha(aa.positionScreen.z,O,K);y.r=(F.r+E.r)*0.5;y.g=(F.g+E.g)*0.5;y.b=
(F.b+E.b)*0.5;U=Ma(D,F,E,y);Aa(h,o,B,p,q,M,U,0,0,1,0,0,1)}else if($ instanceof THREE.MeshNormalMaterial){v.r=Ia(Q.normalWorld.x);v.g=Ia(Q.normalWorld.y);v.b=Ia(Q.normalWorld.z);v.updateStyleString();$.wireframe?Ea(v.__styleString,$.wireframe_linewidth):Fa(v.__styleString)}}}function Ea(N,ea){if(z!=N)l.strokeStyle=z=N;if(H!=ea)l.lineWidth=H=ea;l.stroke();G.inflate(ea*2)}function Fa(N){if(C!=N)l.fillStyle=C=N;l.fill()}function Aa(N,ea,aa,Q,$,fa,la,na,oa,ta,pa,ua,Ba){var xa,va;xa=la.width-1;va=la.height-
1;na*=xa;oa*=va;ta*=xa;pa*=va;ua*=xa;Ba*=va;aa-=N;Q-=ea;$-=N;fa-=ea;ta-=na;pa-=oa;ua-=na;Ba-=oa;va=1/(ta*Ba-ua*pa);xa=(Ba*aa-pa*$)*va;pa=(Ba*Q-pa*fa)*va;aa=(ta*$-ua*aa)*va;Q=(ta*fa-ua*Q)*va;N=N-xa*na-aa*oa;ea=ea-pa*na-Q*oa;l.save();l.transform(xa,pa,aa,Q,N,ea);l.clip();l.drawImage(la,0,0);l.restore()}function Ma(N,ea,aa,Q){var $=~~(N.r*255),fa=~~(N.g*255);N=~~(N.b*255);var la=~~(ea.r*255),na=~~(ea.g*255);ea=~~(ea.b*255);var oa=~~(aa.r*255),ta=~~(aa.g*255);aa=~~(aa.b*255);var pa=~~(Q.r*255),ua=~~(Q.g*
255);Q=~~(Q.b*255);ja[0]=$<0?0:$>255?255:$;ja[1]=fa<0?0:fa>255?255:fa;ja[2]=N<0?0:N>255?255:N;ja[4]=la<0?0:la>255?255:la;ja[5]=na<0?0:na>255?255:na;ja[6]=ea<0?0:ea>255?255:ea;ja[8]=oa<0?0:oa>255?255:oa;ja[9]=ta<0?0:ta>255?255:ta;ja[10]=aa<0?0:aa>255?255:aa;ja[12]=pa<0?0:pa>255?255:pa;ja[13]=ua<0?0:ua>255?255:ua;ja[14]=Q<0?0:Q>255?255:Q;ca.putImageData(ga,0,0);sa.drawImage(Z,0,0);return qa}function Ha(N,ea,aa){N=(N-ea)/(aa-ea);return N*N*(3-2*N)}function Ia(N){N=(N+1)*0.5;return N<0?0:N>1?1:N}function Ja(N,
ea){var aa=ea.x-N.x,Q=ea.y-N.y,$=1/Math.sqrt(aa*aa+Q*Q);aa*=$;Q*=$;ea.x+=aa;ea.y+=Q;N.x-=aa;N.y-=Q}var Ga,Na,ka,ra,za,Ka,Oa,Ca;l.setTransform(1,0,0,-1,b,j);this.autoClear&&this.clear();d=e.projectScene(ma,wa,this.sortElements);(S=ma.lights.length>0)&&Pa(ma);Ga=0;for(Na=d.length;Ga<Na;Ga++){ka=d[Ga];G.empty();if(ka instanceof THREE.RenderableParticle){t=ka;t.x*=b;t.y*=j;ra=0;for(za=ka.materials.length;ra<za;ra++)Qa(t,ka,ka.materials[ra],ma)}else if(ka instanceof THREE.RenderableLine){t=ka.v1;J=ka.v2;
t.positionScreen.x*=b;t.positionScreen.y*=j;J.positionScreen.x*=b;J.positionScreen.y*=j;G.addPoint(t.positionScreen.x,t.positionScreen.y);G.addPoint(J.positionScreen.x,J.positionScreen.y);if(ba.instersects(G)){ra=0;for(za=ka.materials.length;ra<za;)Ra(t,J,ka,ka.materials[ra++],ma)}}else if(ka instanceof THREE.RenderableFace3){t=ka.v1;J=ka.v2;m=ka.v3;t.positionScreen.x*=b;t.positionScreen.y*=j;J.positionScreen.x*=b;J.positionScreen.y*=j;m.positionScreen.x*=b;m.positionScreen.y*=j;if(ka.overdraw){Ja(t.positionScreen,
J.positionScreen);Ja(J.positionScreen,m.positionScreen);Ja(m.positionScreen,t.positionScreen)}G.add3Points(t.positionScreen.x,t.positionScreen.y,J.positionScreen.x,J.positionScreen.y,m.positionScreen.x,m.positionScreen.y);if(ba.instersects(G)){ra=0;for(za=ka.meshMaterials.length;ra<za;){Ca=ka.meshMaterials[ra++];if(Ca instanceof THREE.MeshFaceMaterial){Ka=0;for(Oa=ka.faceMaterials.length;Ka<Oa;)(Ca=ka.faceMaterials[Ka++])&&La(t,J,m,ka,Ca,ma)}else La(t,J,m,ka,Ca,ma)}}}Y.addRectangle(G)}l.setTransform(1,
0,0,1,0,0)}};
THREE.SVGRenderer=function(){function a(W,P,da){var X,R,T,ba;X=0;for(R=W.lights.length;X<R;X++){T=W.lights[X];if(T instanceof THREE.DirectionalLight){ba=P.normalWorld.dot(T.position)*T.intensity;if(ba>0){da.r+=T.color.r*ba;da.g+=T.color.g*ba;da.b+=T.color.b*ba}}else if(T instanceof THREE.PointLight){M.sub(T.position,P.centroidWorld);M.normalize();ba=P.normalWorld.dot(M)*T.intensity;if(ba>0){da.r+=T.color.r*ba;da.g+=T.color.g*ba;da.b+=T.color.b*ba}}}}function c(W,P,da,X,R,T){E=e(y++);E.setAttribute("d",
"M "+W.positionScreen.x+" "+W.positionScreen.y+" L "+P.positionScreen.x+" "+P.positionScreen.y+" L "+da.positionScreen.x+","+da.positionScreen.y+"z");if(R instanceof THREE.MeshBasicMaterial)m.__styleString=R.color.__styleString;else if(R instanceof THREE.MeshLambertMaterial)if(J){h.r=o.r;h.g=o.g;h.b=o.b;a(T,X,h);m.r=R.color.r*h.r;m.g=R.color.g*h.g;m.b=R.color.b*h.b;m.updateStyleString()}else m.__styleString=R.color.__styleString;else if(R instanceof THREE.MeshDepthMaterial){q=1-R.__2near/(R.__farPlusNear-
X.z*R.__farMinusNear);m.setRGB(q,q,q)}else R instanceof THREE.MeshNormalMaterial&&m.setRGB(f(X.normalWorld.x),f(X.normalWorld.y),f(X.normalWorld.z));R.wireframe?E.setAttribute("style","fill: none; stroke: "+m.__styleString+"; stroke-width: "+R.wireframe_linewidth+"; stroke-opacity: "+R.opacity+"; stroke-linecap: "+R.wireframe_linecap+"; stroke-linejoin: "+R.wireframe_linejoin):E.setAttribute("style","fill: "+m.__styleString+"; fill-opacity: "+R.opacity);b.appendChild(E)}function d(W,P,da,X,R,T,ba){E=
e(y++);E.setAttribute("d","M "+W.positionScreen.x+" "+W.positionScreen.y+" L "+P.positionScreen.x+" "+P.positionScreen.y+" L "+da.positionScreen.x+","+da.positionScreen.y+" L "+X.positionScreen.x+","+X.positionScreen.y+"z");if(T instanceof THREE.MeshBasicMaterial)m.__styleString=T.color.__styleString;else if(T instanceof THREE.MeshLambertMaterial)if(J){h.r=o.r;h.g=o.g;h.b=o.b;a(ba,R,h);m.r=T.color.r*h.r;m.g=T.color.g*h.g;m.b=T.color.b*h.b;m.updateStyleString()}else m.__styleString=T.color.__styleString;
else if(T instanceof THREE.MeshDepthMaterial){q=1-T.__2near/(T.__farPlusNear-R.z*T.__farMinusNear);m.setRGB(q,q,q)}else T instanceof THREE.MeshNormalMaterial&&m.setRGB(f(R.normalWorld.x),f(R.normalWorld.y),f(R.normalWorld.z));T.wireframe?E.setAttribute("style","fill: none; stroke: "+m.__styleString+"; stroke-width: "+T.wireframe_linewidth+"; stroke-opacity: "+T.opacity+"; stroke-linecap: "+T.wireframe_linecap+"; stroke-linejoin: "+T.wireframe_linejoin):E.setAttribute("style","fill: "+m.__styleString+
"; fill-opacity: "+T.opacity);b.appendChild(E)}function e(W){if(v[W]==null){v[W]=document.createElementNS("http://www.w3.org/2000/svg","path");U==0&&v[W].setAttribute("shape-rendering","crispEdges");return v[W]}return v[W]}function f(W){return W<0?Math.min((1+W)*0.5,0.5):0.5+Math.min(W*0.5,0.5)}var g=null,k=new THREE.Projector,b=document.createElementNS("http://www.w3.org/2000/svg","svg"),j,l,u,A,n,x,z,C,H=new THREE.Rectangle,t=new THREE.Rectangle,J=false,m=new THREE.Color(16777215),h=new THREE.Color(16777215),
o=new THREE.Color(0),B=new THREE.Color(0),p=new THREE.Color(0),q,M=new THREE.Vector3,v=[],D=[],F=[],E,y,O,K,U=1;this.domElement=b;this.sortElements=this.sortObjects=this.autoClear=true;this.setQuality=function(W){switch(W){case "high":U=1;break;case "low":U=0}};this.setSize=function(W,P){j=W;l=P;u=j/2;A=l/2;b.setAttribute("viewBox",-u+" "+-A+" "+j+" "+l);b.setAttribute("width",j);b.setAttribute("height",l);H.set(-u,-A,u,A)};this.clear=function(){for(;b.childNodes.length>0;)b.removeChild(b.childNodes[0])};
this.render=function(W,P){var da,X,R,T,ba,Y,G,S;this.autoClear&&this.clear();g=k.projectScene(W,P,this.sortElements);K=O=y=0;if(J=W.lights.length>0){G=W.lights;o.setRGB(0,0,0);B.setRGB(0,0,0);p.setRGB(0,0,0);da=0;for(X=G.length;da<X;da++){R=G[da];T=R.color;if(R instanceof THREE.AmbientLight){o.r+=T.r;o.g+=T.g;o.b+=T.b}else if(R instanceof THREE.DirectionalLight){B.r+=T.r;B.g+=T.g;B.b+=T.b}else if(R instanceof THREE.PointLight){p.r+=T.r;p.g+=T.g;p.b+=T.b}}}da=0;for(X=g.length;da<X;da++){G=g[da];t.empty();
if(G instanceof THREE.RenderableParticle){n=G;n.x*=u;n.y*=-A;R=0;for(T=G.materials.length;R<T;R++)if(S=G.materials[R]){ba=n;Y=G;S=S;var V=O++;if(D[V]==null){D[V]=document.createElementNS("http://www.w3.org/2000/svg","circle");U==0&&D[V].setAttribute("shape-rendering","crispEdges")}E=D[V];E.setAttribute("cx",ba.x);E.setAttribute("cy",ba.y);E.setAttribute("r",Y.scale.x*u);if(S instanceof THREE.ParticleCircleMaterial){if(J){h.r=o.r+B.r+p.r;h.g=o.g+B.g+p.g;h.b=o.b+B.b+p.b;m.r=S.color.r*h.r;m.g=S.color.g*
h.g;m.b=S.color.b*h.b;m.updateStyleString()}else m=S.color;E.setAttribute("style","fill: "+m.__styleString)}b.appendChild(E)}}else if(G instanceof THREE.RenderableLine){n=G.v1;x=G.v2;n.positionScreen.x*=u;n.positionScreen.y*=-A;x.positionScreen.x*=u;x.positionScreen.y*=-A;t.addPoint(n.positionScreen.x,n.positionScreen.y);t.addPoint(x.positionScreen.x,x.positionScreen.y);if(H.instersects(t)){R=0;for(T=G.materials.length;R<T;)if(S=G.materials[R++]){ba=n;Y=x;S=S;V=K++;if(F[V]==null){F[V]=document.createElementNS("http://www.w3.org/2000/svg",
"line");U==0&&F[V].setAttribute("shape-rendering","crispEdges")}E=F[V];E.setAttribute("x1",ba.positionScreen.x);E.setAttribute("y1",ba.positionScreen.y);E.setAttribute("x2",Y.positionScreen.x);E.setAttribute("y2",Y.positionScreen.y);if(S instanceof THREE.LineBasicMaterial){m.__styleString=S.color.__styleString;E.setAttribute("style","fill: none; stroke: "+m.__styleString+"; stroke-width: "+S.linewidth+"; stroke-opacity: "+S.opacity+"; stroke-linecap: "+S.linecap+"; stroke-linejoin: "+S.linejoin);
b.appendChild(E)}}}}else if(G instanceof THREE.RenderableFace3){n=G.v1;x=G.v2;z=G.v3;n.positionScreen.x*=u;n.positionScreen.y*=-A;x.positionScreen.x*=u;x.positionScreen.y*=-A;z.positionScreen.x*=u;z.positionScreen.y*=-A;t.addPoint(n.positionScreen.x,n.positionScreen.y);t.addPoint(x.positionScreen.x,x.positionScreen.y);t.addPoint(z.positionScreen.x,z.positionScreen.y);if(H.instersects(t)){R=0;for(T=G.meshMaterials.length;R<T;){S=G.meshMaterials[R++];if(S instanceof THREE.MeshFaceMaterial){ba=0;for(Y=
G.faceMaterials.length;ba<Y;)(S=G.faceMaterials[ba++])&&c(n,x,z,G,S,W)}else S&&c(n,x,z,G,S,W)}}}else if(G instanceof THREE.RenderableFace4){n=G.v1;x=G.v2;z=G.v3;C=G.v4;n.positionScreen.x*=u;n.positionScreen.y*=-A;x.positionScreen.x*=u;x.positionScreen.y*=-A;z.positionScreen.x*=u;z.positionScreen.y*=-A;C.positionScreen.x*=u;C.positionScreen.y*=-A;t.addPoint(n.positionScreen.x,n.positionScreen.y);t.addPoint(x.positionScreen.x,x.positionScreen.y);t.addPoint(z.positionScreen.x,z.positionScreen.y);t.addPoint(C.positionScreen.x,
C.positionScreen.y);if(H.instersects(t)){R=0;for(T=G.meshMaterials.length;R<T;){S=G.meshMaterials[R++];if(S instanceof THREE.MeshFaceMaterial){ba=0;for(Y=G.faceMaterials.length;ba<Y;)(S=G.faceMaterials[ba++])&&d(n,x,z,C,G,S,W)}else S&&d(n,x,z,C,G,S,W)}}}}}};
THREE.WebGLRenderer=function(a){function c(h,o){h.fragment_shader=o.fragment_shader;h.vertex_shader=o.vertex_shader;h.uniforms=Uniforms.clone(o.uniforms)}function d(h,o){h.uniforms.color.value.setRGB(h.color.r*h.opacity,h.color.g*h.opacity,h.color.b*h.opacity);h.uniforms.opacity.value=h.opacity;h.uniforms.map.texture=h.map;h.uniforms.env_map.texture=h.env_map;h.uniforms.reflectivity.value=h.reflectivity;h.uniforms.refraction_ratio.value=h.refraction_ratio;h.uniforms.combine.value=h.combine;h.uniforms.useRefract.value=
h.env_map&&h.env_map.mapping instanceof THREE.CubeRefractionMapping;if(o){h.uniforms.fogColor.value.setHex(o.color.hex);if(o instanceof THREE.Fog){h.uniforms.fogNear.value=o.near;h.uniforms.fogFar.value=o.far}else if(o instanceof THREE.FogExp2)h.uniforms.fogDensity.value=o.density}}function e(h,o){h.uniforms.color.value.setRGB(h.color.r*h.opacity,h.color.g*h.opacity,h.color.b*h.opacity);h.uniforms.opacity.value=h.opacity;if(o){h.uniforms.fogColor.value.setHex(o.color.hex);if(o instanceof THREE.Fog){h.uniforms.fogNear.value=
o.near;h.uniforms.fogFar.value=o.far}else if(o instanceof THREE.FogExp2)h.uniforms.fogDensity.value=o.density}}function f(h,o){var B;if(h=="fragment")B=b.createShader(b.FRAGMENT_SHADER);else if(h=="vertex")B=b.createShader(b.VERTEX_SHADER);b.shaderSource(B,o);b.compileShader(B);if(!b.getShaderParameter(B,b.COMPILE_STATUS)){alert(b.getShaderInfoLog(B));return null}return B}function g(h){switch(h){case THREE.RepeatWrapping:return b.REPEAT;case THREE.ClampToEdgeWrapping:return b.CLAMP_TO_EDGE;case THREE.MirroredRepeatWrapping:return b.MIRRORED_REPEAT;
case THREE.NearestFilter:return b.NEAREST;case THREE.NearestMipMapNearestFilter:return b.NEAREST_MIPMAP_NEAREST;case THREE.NearestMipMapLinearFilter:return b.NEAREST_MIPMAP_LINEAR;case THREE.LinearFilter:return b.LINEAR;case THREE.LinearMipMapNearestFilter:return b.LINEAR_MIPMAP_NEAREST;case THREE.LinearMipMapLinearFilter:return b.LINEAR_MIPMAP_LINEAR;case THREE.ByteType:return b.BYTE;case THREE.UnsignedByteType:return b.UNSIGNED_BYTE;case THREE.ShortType:return b.SHORT;case THREE.UnsignedShortType:return b.UNSIGNED_SHORT;
case THREE.IntType:return b.INT;case THREE.UnsignedShortType:return b.UNSIGNED_INT;case THREE.FloatType:return b.FLOAT;case THREE.AlphaFormat:return b.ALPHA;case THREE.RGBFormat:return b.RGB;case THREE.RGBAFormat:return b.RGBA;case THREE.LuminanceFormat:return b.LUMINANCE;case THREE.LuminanceAlphaFormat:return b.LUMINANCE_ALPHA}return 0}var k=document.createElement("canvas"),b,j=null,l=null,u=new THREE.Matrix4,A,n=new Float32Array(16),x=new Float32Array(16),z=new Float32Array(16),C=new Float32Array(9),
H=new Float32Array(16),t=true,J=new THREE.Color(0),m=0;if(a){if(a.antialias!==undefined)t=a.antialias;a.clearColor!==undefined&&J.setHex(a.clearColor);if(a.clearAlpha!==undefined)m=a.clearAlpha}this.domElement=k;this.autoClear=true;(function(h,o,B){try{b=k.getContext("experimental-webgl",{antialias:h})}catch(p){}if(!b){alert("WebGL not supported");throw"cannot create webgl context";}b.clearColor(0,0,0,1);b.clearDepth(1);b.enable(b.DEPTH_TEST);b.depthFunc(b.LEQUAL);b.frontFace(b.CCW);b.cullFace(b.BACK);
b.enable(b.CULL_FACE);b.enable(b.BLEND);b.blendFunc(b.ONE,b.ONE_MINUS_SRC_ALPHA);b.clearColor(o.r,o.g,o.b,B)})(t,J,m);this.context=b;this.lights={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[]}};this.setSize=function(h,o){k.width=h;k.height=o;b.viewport(0,0,k.width,k.height)};this.setClearColor=function(h,o){var B=new THREE.Color(h);b.clearColor(B.r,B.g,B.b,o)};this.clear=function(){b.clear(b.COLOR_BUFFER_BIT|b.DEPTH_BUFFER_BIT)};this.setupLights=
function(h,o){var B,p,q,M=0,v=0,D=0,F,E,y,O=this.lights,K=O.directional.colors,U=O.directional.positions,W=O.point.colors,P=O.point.positions,da=0,X=0;B=0;for(p=o.length;B<p;B++){q=o[B];F=q.color;E=q.position;y=q.intensity;if(q instanceof THREE.AmbientLight){M+=F.r;v+=F.g;D+=F.b}else if(q instanceof THREE.DirectionalLight){K[da*3]=F.r*y;K[da*3+1]=F.g*y;K[da*3+2]=F.b*y;U[da*3]=E.x;U[da*3+1]=E.y;U[da*3+2]=E.z;da+=1}else if(q instanceof THREE.PointLight){W[X*3]=F.r*y;W[X*3+1]=F.g*y;W[X*3+2]=F.b*y;P[X*
3]=E.x;P[X*3+1]=E.y;P[X*3+2]=E.z;X+=1}}O.point.length=X;O.directional.length=da;O.ambient[0]=M;O.ambient[1]=v;O.ambient[2]=D};this.createParticleBuffers=function(h){h.__webGLVertexBuffer=b.createBuffer();h.__webGLFaceBuffer=b.createBuffer()};this.createLineBuffers=function(h){h.__webGLVertexBuffer=b.createBuffer();h.__webGLLineBuffer=b.createBuffer()};this.createMeshBuffers=function(h){h.__webGLVertexBuffer=b.createBuffer();h.__webGLNormalBuffer=b.createBuffer();h.__webGLTangentBuffer=b.createBuffer();
h.__webGLUVBuffer=b.createBuffer();h.__webGLFaceBuffer=b.createBuffer();h.__webGLLineBuffer=b.createBuffer()};this.initLineBuffers=function(h){var o=h.vertices.length;h.__vertexArray=new Float32Array(o*3);h.__lineArray=new Uint16Array(o);h.__webGLLineCount=o};this.initMeshBuffers=function(h,o){var B,p,q=0,M=0,v=0,D=o.geometry.faces,F=h.faces;B=0;for(p=F.length;B<p;B++){fi=F[B];face=D[fi];if(face instanceof THREE.Face3){q+=3;M+=1;v+=3}else if(face instanceof THREE.Face4){q+=4;M+=2;v+=4}}h.__vertexArray=
new Float32Array(q*3);h.__normalArray=new Float32Array(q*3);h.__tangentArray=new Float32Array(q*4);h.__uvArray=new Float32Array(q*2);h.__faceArray=new Uint16Array(M*3);h.__lineArray=new Uint16Array(v*2);q=false;B=0;for(p=o.materials.length;B<p;B++){D=o.materials[B];if(D instanceof THREE.MeshFaceMaterial){D=0;for(F=h.materials.length;D<F;D++)if(h.materials[D]&&h.materials[D].shading!=undefined&&h.materials[D].shading==THREE.SmoothShading){q=true;break}}else if(D&&D.shading!=undefined&&D.shading==THREE.SmoothShading){q=
true;break}if(q)break}h.__needsSmoothNormals=q;h.__webGLFaceCount=M*3;h.__webGLLineCount=v*2};this.setMeshBuffers=function(h,o,B,p,q,M,v,D){var F,E,y,O,K,U,W,P,da,X=0,R=0,T=0,ba=0,Y=0,G=0,S=0,V=h.__vertexArray,ia=h.__uvArray,ha=h.__normalArray,w=h.__tangentArray,L=h.__faceArray,I=h.__lineArray,Z=h.__needsSmoothNormals,ca=o.geometry,ga=ca.vertices,ja=h.faces,qa=ca.faces,sa=ca.uvs;o=0;for(F=ja.length;o<F;o++){E=ja[o];y=qa[E];E=sa[E];O=y.vertexNormals;K=y.normal;if(y instanceof THREE.Face3){if(p){U=
ga[y.a].position;W=ga[y.b].position;P=ga[y.c].position;V[R]=U.x;V[R+1]=U.y;V[R+2]=U.z;V[R+3]=W.x;V[R+4]=W.y;V[R+5]=W.z;V[R+6]=P.x;V[R+7]=P.y;V[R+8]=P.z;R+=9}if(D&&ca.hasTangents){U=ga[y.a].tangent;W=ga[y.b].tangent;P=ga[y.c].tangent;w[G]=U.x;w[G+1]=U.y;w[G+2]=U.z;w[G+3]=U.w;w[G+4]=W.x;w[G+5]=W.y;w[G+6]=W.z;w[G+7]=W.w;w[G+8]=P.x;w[G+9]=P.y;w[G+10]=P.z;w[G+11]=P.w;G+=12}if(v)if(O.length==3&&Z)for(y=0;y<3;y++){K=O[y];ha[Y]=K.x;ha[Y+1]=K.y;ha[Y+2]=K.z;Y+=3}else for(y=0;y<3;y++){ha[Y]=K.x;ha[Y+1]=K.y;
ha[Y+2]=K.z;Y+=3}if(M&&E)for(y=0;y<3;y++){O=E[y];ia[T]=O.u;ia[T+1]=O.v;T+=2}if(q){L[ba]=X;L[ba+1]=X+1;L[ba+2]=X+2;ba+=3;I[S]=X;I[S+1]=X+1;I[S+2]=X;I[S+3]=X+2;I[S+4]=X+1;I[S+5]=X+2;S+=6;X+=3}}else if(y instanceof THREE.Face4){if(p){U=ga[y.a].position;W=ga[y.b].position;P=ga[y.c].position;da=ga[y.d].position;V[R]=U.x;V[R+1]=U.y;V[R+2]=U.z;V[R+3]=W.x;V[R+4]=W.y;V[R+5]=W.z;V[R+6]=P.x;V[R+7]=P.y;V[R+8]=P.z;V[R+9]=da.x;V[R+10]=da.y;V[R+11]=da.z;R+=12}if(D&&ca.hasTangents){U=ga[y.a].tangent;W=ga[y.b].tangent;
P=ga[y.c].tangent;y=ga[y.d].tangent;w[G]=U.x;w[G+1]=U.y;w[G+2]=U.z;w[G+3]=U.w;w[G+4]=W.x;w[G+5]=W.y;w[G+6]=W.z;w[G+7]=W.w;w[G+8]=P.x;w[G+9]=P.y;w[G+10]=P.z;w[G+11]=P.w;w[G+12]=y.x;w[G+13]=y.y;w[G+14]=y.z;w[G+15]=y.w;G+=16}if(v)if(O.length==4&&Z)for(y=0;y<4;y++){K=O[y];ha[Y]=K.x;ha[Y+1]=K.y;ha[Y+2]=K.z;Y+=3}else for(y=0;y<4;y++){ha[Y]=K.x;ha[Y+1]=K.y;ha[Y+2]=K.z;Y+=3}if(M&&E)for(y=0;y<4;y++){O=E[y];ia[T]=O.u;ia[T+1]=O.v;T+=2}if(q){L[ba]=X;L[ba+1]=X+1;L[ba+2]=X+2;L[ba+3]=X;L[ba+4]=X+2;L[ba+5]=X+3;ba+=
6;I[S]=X;I[S+1]=X+1;I[S+2]=X;I[S+3]=X+3;I[S+4]=X+1;I[S+5]=X+2;I[S+6]=X+2;I[S+7]=X+3;S+=8;X+=4}}}if(p){b.bindBuffer(b.ARRAY_BUFFER,h.__webGLVertexBuffer);b.bufferData(b.ARRAY_BUFFER,V,B)}if(v){b.bindBuffer(b.ARRAY_BUFFER,h.__webGLNormalBuffer);b.bufferData(b.ARRAY_BUFFER,ha,B)}if(D&&ca.hasTangents){b.bindBuffer(b.ARRAY_BUFFER,h.__webGLTangentBuffer);b.bufferData(b.ARRAY_BUFFER,w,B)}if(M&&T>0){b.bindBuffer(b.ARRAY_BUFFER,h.__webGLUVBuffer);b.bufferData(b.ARRAY_BUFFER,ia,B)}if(q){b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,
h.__webGLFaceBuffer);b.bufferData(b.ELEMENT_ARRAY_BUFFER,L,B);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,h.__webGLLineBuffer);b.bufferData(b.ELEMENT_ARRAY_BUFFER,I,B)}};this.setLineBuffers=function(h,o,B,p){var q,M,v=h.vertices,D=v.length,F=h.__vertexArray,E=h.__lineArray;if(B)for(B=0;B<D;B++){q=v[B].position;M=B*3;F[M]=q.x;F[M+1]=q.y;F[M+2]=q.z}if(p)for(B=0;B<D;B++)E[B]=B;b.bindBuffer(b.ARRAY_BUFFER,h.__webGLVertexBuffer);b.bufferData(b.ARRAY_BUFFER,F,o);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,h.__webGLLineBuffer);
b.bufferData(b.ELEMENT_ARRAY_BUFFER,E,o)};this.setParticleBuffers=function(){};this.renderBuffer=function(h,o,B,p,q,M){var v,D,F,E;if(!p.program){if(p instanceof THREE.MeshDepthMaterial){c(p,THREE.ShaderLib.depth);p.uniforms.mNear.value=h.near;p.uniforms.mFar.value=h.far}else if(p instanceof THREE.MeshNormalMaterial)c(p,THREE.ShaderLib.normal);else if(p instanceof THREE.MeshBasicMaterial){c(p,THREE.ShaderLib.basic);d(p,B)}else if(p instanceof THREE.MeshLambertMaterial){c(p,THREE.ShaderLib.lambert);
d(p,B)}else if(p instanceof THREE.MeshPhongMaterial){c(p,THREE.ShaderLib.phong);d(p,B)}else if(p instanceof THREE.LineBasicMaterial){c(p,THREE.ShaderLib.basic);e(p,B)}var y,O,K;y=E=D=0;for(O=o.length;y<O;y++){K=o[y];K instanceof THREE.DirectionalLight&&E++;K instanceof THREE.PointLight&&D++}if(D+E<=4){y=E;D=D}else{y=Math.ceil(4*E/(D+E));D=4-y}D={directional:y,point:D};E={fog:B,map:p.map,env_map:p.env_map,maxDirLights:D.directional,maxPointLights:D.point};D=p.fragment_shader;y=p.vertex_shader;O=b.createProgram();
K=["#ifdef GL_ES\nprecision highp float;\n#endif","#define MAX_DIR_LIGHTS "+E.maxDirLights,"#define MAX_POINT_LIGHTS "+E.maxPointLights,E.fog?"#define USE_FOG":"",E.fog instanceof THREE.FogExp2?"#define FOG_EXP2":"",E.map?"#define USE_MAP":"",E.env_map?"#define USE_ENVMAP":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n");E=[b.getParameter(b.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0?"#define VERTEX_TEXTURES":"","#define MAX_DIR_LIGHTS "+E.maxDirLights,"#define MAX_POINT_LIGHTS "+E.maxPointLights,
E.map?"#define USE_MAP":"",E.env_map?"#define USE_ENVMAP":"","uniform mat4 objectMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\n"].join("\n");b.attachShader(O,f("fragment",K+D));b.attachShader(O,f("vertex",E+y));b.linkProgram(O);b.getProgramParameter(O,b.LINK_STATUS)||alert("Could not initialise shaders\nVALIDATE_STATUS: "+
b.getProgramParameter(O,b.VALIDATE_STATUS)+", gl error ["+b.getError()+"]");O.uniforms={};O.attributes={};p.program=O;D=["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","objectMatrix","cameraPosition"];for(v in p.uniforms)D.push(v);v=p.program;y=0;for(O=D.length;y<O;y++){K=D[y];v.uniforms[K]=b.getUniformLocation(v,K)}v=p.program;D=["position","normal","uv","tangent"];y=0;for(O=D.length;y<O;y++){K=D[y];v.attributes[K]=b.getAttribLocation(v,K)}}v=p.program;if(v!=j){b.useProgram(v);
j=v}this.loadCamera(v,h);this.loadMatrices(v);if(p instanceof THREE.MeshPhongMaterial||p instanceof THREE.MeshLambertMaterial){this.setupLights(v,o);h=this.lights;p.uniforms.enableLighting.value=h.directional.length+h.point.length;p.uniforms.ambientLightColor.value=h.ambient;p.uniforms.directionalLightColor.value=h.directional.colors;p.uniforms.directionalLightDirection.value=h.directional.positions;p.uniforms.pointLightColor.value=h.point.colors;p.uniforms.pointLightPosition.value=h.point.positions}if(p instanceof
THREE.MeshBasicMaterial||p instanceof THREE.MeshLambertMaterial||p instanceof THREE.MeshPhongMaterial)d(p,B);p instanceof THREE.LineBasicMaterial&&e(p,B);if(p instanceof THREE.MeshPhongMaterial){p.uniforms.ambient.value.setRGB(p.ambient.r,p.ambient.g,p.ambient.b);p.uniforms.specular.value.setRGB(p.specular.r,p.specular.g,p.specular.b);p.uniforms.shininess.value=p.shininess}B=p.uniforms;for(F in B)if(y=v.uniforms[F]){o=B[F];D=o.type;h=o.value;if(D=="i")b.uniform1i(y,h);else if(D=="f")b.uniform1f(y,
h);else if(D=="fv1")b.uniform1fv(y,h);else if(D=="fv")b.uniform3fv(y,h);else if(D=="v2")b.uniform2f(y,h.x,h.y);else if(D=="v3")b.uniform3f(y,h.x,h.y,h.z);else if(D=="c")b.uniform3f(y,h.r,h.g,h.b);else if(D=="t"){b.uniform1i(y,h);if(o=o.texture)if(o.image instanceof Array&&o.image.length==6){o=o;h=h;if(o.image.length==6){if(!o.image.__webGLTextureCube&&!o.image.__cubeMapInitialized&&o.image.loadCount==6){o.image.__webGLTextureCube=b.createTexture();b.bindTexture(b.TEXTURE_CUBE_MAP,o.image.__webGLTextureCube);
b.texParameteri(b.TEXTURE_CUBE_MAP,b.TEXTURE_WRAP_S,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_CUBE_MAP,b.TEXTURE_WRAP_T,b.CLAMP_TO_EDGE);b.texParameteri(b.TEXTURE_CUBE_MAP,b.TEXTURE_MAG_FILTER,b.LINEAR);b.texParameteri(b.TEXTURE_CUBE_MAP,b.TEXTURE_MIN_FILTER,b.LINEAR_MIPMAP_LINEAR);for(D=0;D<6;++D)b.texImage2D(b.TEXTURE_CUBE_MAP_POSITIVE_X+D,0,b.RGBA,b.RGBA,b.UNSIGNED_BYTE,o.image[D]);b.generateMipmap(b.TEXTURE_CUBE_MAP);b.bindTexture(b.TEXTURE_CUBE_MAP,null);o.image.__cubeMapInitialized=true}b.activeTexture(b.TEXTURE0+
h);b.bindTexture(b.TEXTURE_CUBE_MAP,o.image.__webGLTextureCube)}}else{o=o;h=h;if(!o.__webGLTexture&&o.image.loaded){o.__webGLTexture=b.createTexture();b.bindTexture(b.TEXTURE_2D,o.__webGLTexture);b.texImage2D(b.TEXTURE_2D,0,b.RGBA,b.RGBA,b.UNSIGNED_BYTE,o.image);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,g(o.wrap_s));b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,g(o.wrap_t));b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,g(o.mag_filter));b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,g(o.min_filter));
b.generateMipmap(b.TEXTURE_2D);b.bindTexture(b.TEXTURE_2D,null)}b.activeTexture(b.TEXTURE0+h);b.bindTexture(b.TEXTURE_2D,o.__webGLTexture)}}}F=v.attributes;b.bindBuffer(b.ARRAY_BUFFER,q.__webGLVertexBuffer);b.vertexAttribPointer(F.position,3,b.FLOAT,false,0,0);b.enableVertexAttribArray(F.position);if(F.normal>=0){b.bindBuffer(b.ARRAY_BUFFER,q.__webGLNormalBuffer);b.vertexAttribPointer(F.normal,3,b.FLOAT,false,0,0);b.enableVertexAttribArray(F.normal)}if(F.tangent>=0){b.bindBuffer(b.ARRAY_BUFFER,q.__webGLTangentBuffer);
b.vertexAttribPointer(F.tangent,4,b.FLOAT,false,0,0);b.enableVertexAttribArray(F.tangent)}if(F.uv>=0)if(q.__webGLUVBuffer){b.bindBuffer(b.ARRAY_BUFFER,q.__webGLUVBuffer);b.vertexAttribPointer(F.uv,2,b.FLOAT,false,0,0);b.enableVertexAttribArray(F.uv)}else b.disableVertexAttribArray(F.uv);if(p.wireframe||p instanceof THREE.LineBasicMaterial){F=p.wireframe_linewidth!==undefined?p.wireframe_linewidth:p.linewidth!==undefined?p.linewidth:1;p=p instanceof THREE.LineBasicMaterial&&M.type==THREE.LineStrip?
b.LINE_STRIP:b.LINES;b.lineWidth(F);b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,q.__webGLLineBuffer);b.drawElements(p,q.__webGLLineCount,b.UNSIGNED_SHORT,0)}else{b.bindBuffer(b.ELEMENT_ARRAY_BUFFER,q.__webGLFaceBuffer);b.drawElements(b.TRIANGLES,q.__webGLFaceCount,b.UNSIGNED_SHORT,0)}};this.renderPass=function(h,o,B,p,q,M,v){var D,F,E,y,O;E=0;for(y=p.materials.length;E<y;E++){D=p.materials[E];if(D instanceof THREE.MeshFaceMaterial){D=0;for(F=q.materials.length;D<F;D++)if((O=q.materials[D])&&O.blending==M&&
O.opacity<1==v){this.setBlending(O.blending);this.renderBuffer(h,o,B,O,q,p)}}else if((O=D)&&O.blending==M&&O.opacity<1==v){this.setBlending(O.blending);this.renderBuffer(h,o,B,O,q,p)}}};this.render=function(h,o,B,p){var q,M,v,D=h.lights,F=h.fog;this.initWebGLObjects(h);p=p!==undefined?p:true;if(B&&!B.__webGLFramebuffer){B.__webGLFramebuffer=b.createFramebuffer();B.__webGLRenderbuffer=b.createRenderbuffer();B.__webGLTexture=b.createTexture();b.bindRenderbuffer(b.RENDERBUFFER,B.__webGLRenderbuffer);
b.renderbufferStorage(b.RENDERBUFFER,b.DEPTH_COMPONENT16,B.width,B.height);b.bindTexture(b.TEXTURE_2D,B.__webGLTexture);b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_S,g(B.wrap_s));b.texParameteri(b.TEXTURE_2D,b.TEXTURE_WRAP_T,g(B.wrap_t));b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MAG_FILTER,g(B.mag_filter));b.texParameteri(b.TEXTURE_2D,b.TEXTURE_MIN_FILTER,g(B.min_filter));b.texImage2D(b.TEXTURE_2D,0,g(B.format),B.width,B.height,0,g(B.format),g(B.type),null);b.bindFramebuffer(b.FRAMEBUFFER,B.__webGLFramebuffer);
b.framebufferTexture2D(b.FRAMEBUFFER,b.COLOR_ATTACHMENT0,b.TEXTURE_2D,B.__webGLTexture,0);b.framebufferRenderbuffer(b.FRAMEBUFFER,b.DEPTH_ATTACHMENT,b.RENDERBUFFER,B.__webGLRenderbuffer);b.bindTexture(b.TEXTURE_2D,null);b.bindRenderbuffer(b.RENDERBUFFER,null);b.bindFramebuffer(b.FRAMEBUFFER,null)}if(B){q=B.__webGLFramebuffer;v=B.width;M=B.height}else{q=null;v=k.width;M=k.height}if(q!=l){b.bindFramebuffer(b.FRAMEBUFFER,q);b.viewport(0,0,v,M);p&&b.clear(b.COLOR_BUFFER_BIT|b.DEPTH_BUFFER_BIT);l=q}this.autoClear&&
this.clear();o.autoUpdateMatrix&&o.updateMatrix();n.set(o.matrix.flatten());z.set(o.projectionMatrix.flatten());p=0;for(q=h.__webGLObjects.length;p<q;p++){M=h.__webGLObjects[p];v=M.object;M=M.buffer;if(v.visible){this.setupMatrices(v,o);this.renderPass(o,D,F,v,M,THREE.NormalBlending,false)}}p=0;for(q=h.__webGLObjects.length;p<q;p++){M=h.__webGLObjects[p];v=M.object;M=M.buffer;if(v.visible){this.setupMatrices(v,o);if(v.doubleSided)b.disable(b.CULL_FACE);else{b.enable(b.CULL_FACE);v.flipSided?b.frontFace(b.CW):
b.frontFace(b.CCW)}this.renderPass(o,D,F,v,M,THREE.AdditiveBlending,false);this.renderPass(o,D,F,v,M,THREE.SubtractiveBlending,false);this.renderPass(o,D,F,v,M,THREE.AdditiveBlending,true);this.renderPass(o,D,F,v,M,THREE.SubtractiveBlending,true);this.renderPass(o,D,F,v,M,THREE.NormalBlending,true)}}if(B&&B.min_filter!==THREE.NearestFilter&&B.min_filter!==THREE.LinearFilter){b.bindTexture(b.TEXTURE_2D,B.__webGLTexture);b.generateMipmap(b.TEXTURE_2D);b.bindTexture(b.TEXTURE_2D,null)}};this.initWebGLObjects=
function(h){function o(E,y,O,K){if(E[y]==undefined){h.__webGLObjects.push({buffer:O,object:K});E[y]=1}}var B,p,q,M,v,D,F;if(!h.__webGLObjects){h.__webGLObjects=[];h.__webGLObjectsMap={}}B=0;for(p=h.objects.length;B<p;B++){q=h.objects[B];v=q.geometry;if(h.__webGLObjectsMap[q.id]==undefined)h.__webGLObjectsMap[q.id]={};F=h.__webGLObjectsMap[q.id];if(q instanceof THREE.Mesh){for(M in v.geometryChunks){D=v.geometryChunks[M];if(!D.__webGLVertexBuffer){this.createMeshBuffers(D);this.initMeshBuffers(D,q);
v.__dirtyVertices=true;v.__dirtyElements=true;v.__dirtyUvs=true;v.__dirtyNormals=true;v.__dirtyTangents=true}if(v.__dirtyVertices||v.__dirtyElements||v.__dirtyUvs)this.setMeshBuffers(D,q,b.DYNAMIC_DRAW,v.__dirtyVertices,v.__dirtyElements,v.__dirtyUvs,v.__dirtyNormals,v.__dirtyTangents);o(F,M,D,q)}v.__dirtyVertices=false;v.__dirtyElements=false;v.__dirtyUvs=false;v.__dirtyNormals=false;v.__dirtyTangents=false}else if(q instanceof THREE.Line){if(!v.__webGLVertexBuffer){this.createLineBuffers(v);this.initLineBuffers(v);
v.__dirtyVertices=true;v.__dirtyElements=true}v.__dirtyVertices&&this.setLineBuffers(v,b.DYNAMIC_DRAW,v.__dirtyVertices,v.__dirtyElements);o(F,0,v,q);v.__dirtyVertices=false;v.__dirtyElements=false}else if(q instanceof THREE.ParticleSystem){v.__webGLVertexBuffer||this.createParticleBuffers(v);o(F,0,v,q)}}};this.removeObject=function(h,o){var B,p;for(B=h.__webGLObjects.length-1;B>=0;B--){p=h.__webGLObjects[B].object;o==p&&h.__webGLObjects.splice(B,1)}};this.setupMatrices=function(h,o){h.autoUpdateMatrix&&
h.updateMatrix();u.multiply(o.matrix,h.matrix);x.set(u.flatten());A=THREE.Matrix4.makeInvert3x3(u).transpose();C.set(A.m);H.set(h.matrix.flatten())};this.loadMatrices=function(h){b.uniformMatrix4fv(h.uniforms.viewMatrix,false,n);b.uniformMatrix4fv(h.uniforms.modelViewMatrix,false,x);b.uniformMatrix4fv(h.uniforms.projectionMatrix,false,z);b.uniformMatrix3fv(h.uniforms.normalMatrix,false,C);b.uniformMatrix4fv(h.uniforms.objectMatrix,false,H)};this.loadCamera=function(h,o){b.uniform3f(h.uniforms.cameraPosition,
o.position.x,o.position.y,o.position.z)};this.setBlending=function(h){switch(h){case THREE.AdditiveBlending:b.blendEquation(b.FUNC_ADD);b.blendFunc(b.ONE,b.ONE);break;case THREE.SubtractiveBlending:b.blendFunc(b.DST_COLOR,b.ZERO);break;default:b.blendEquation(b.FUNC_ADD);b.blendFunc(b.ONE,b.ONE_MINUS_SRC_ALPHA)}};this.setFaceCulling=function(h,o){if(h){!o||o=="ccw"?b.frontFace(b.CCW):b.frontFace(b.CW);if(h=="back")b.cullFace(b.BACK);else h=="front"?b.cullFace(b.FRONT):b.cullFace(b.FRONT_AND_BACK);
b.enable(b.CULL_FACE)}else b.disable(b.CULL_FACE)};this.supportsVertexTextures=function(){return b.getParameter(b.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0}};
THREE.Snippets={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, 1.0 ), fogFactor );\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float reflectivity;\nuniform samplerCube env_map;\nuniform int combine;\n#endif",
envmap_fragment:"#ifdef USE_ENVMAP\ncubeColor = textureCube( env_map, vec3( -vReflect.x, vReflect.yz ) );\nif ( combine == 1 ) {\ngl_FragColor = mix( gl_FragColor, cubeColor, reflectivity );\n} else {\ngl_FragColor = gl_FragColor * cubeColor;\n}\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float refraction_ratio;\nuniform bool useRefract;\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = mat3( objectMatrix[0].xyz, objectMatrix[1].xyz, objectMatrix[2].xyz ) * normal;\nif ( useRefract ) {\nvReflect = refract( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ), refraction_ratio );\n} else {\nvReflect = reflect( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ) );\n}\n#endif",
map_pars_fragment:"#ifdef USE_MAP\nvarying vec2 vUv;\nuniform sampler2D map;\n#endif",map_pars_vertex:"#ifdef USE_MAP\nvarying vec2 vUv;\n#endif",map_fragment:"#ifdef USE_MAP\nmapColor = texture2D( map, vUv );\n#endif",map_vertex:"#ifdef USE_MAP\nvUv = uv;\n#endif",lights_pars_vertex:"uniform bool enableLighting;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n#ifdef PHONG\nvarying vec3 vPointLightVector[ MAX_POINT_LIGHTS ];\n#endif\n#endif",
lights_vertex:"if ( !enableLighting ) {\nvLightWeighting = vec3( 1.0 );\n} else {\nvLightWeighting = ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nfloat directionalLightWeighting = max( dot( transformedNormal, normalize( lDirection.xyz ) ), 0.0 );\nvLightWeighting += directionalLightColor[ i ] * directionalLightWeighting;\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 pointLightVector = normalize( lPosition.xyz - mvPosition.xyz );\nfloat pointLightWeighting = max( dot( transformedNormal, pointLightVector ), 0.0 );\nvLightWeighting += pointLightColor[ i ] * pointLightWeighting;\n#ifdef PHONG\nvPointLightVector[ i ] = pointLightVector;\n#endif\n}\n#endif\n}",
lights_pars_fragment:"#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nvarying vec3 vPointLightVector[ MAX_POINT_LIGHTS ];\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",lights_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\nvec4 mSpecular = vec4( specular, opacity );\n#if MAX_POINT_LIGHTS > 0\nvec4 pointDiffuse  = vec4( 0.0 );\nvec4 pointSpecular = vec4( 0.0 );\nfor( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {\nvec3 pointVector = normalize( vPointLightVector[ i ] );\nvec3 pointHalfVector = normalize( vPointLightVector[ i ] + vViewPosition );\nfloat pointDotNormalHalf = dot( normal, pointHalfVector );\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\nfloat pointSpecularWeight = 0.0;\nif ( pointDotNormalHalf >= 0.0 )\npointSpecularWeight = pow( pointDotNormalHalf, shininess );\npointDiffuse  += mColor * pointDiffuseWeight;\npointSpecular += mSpecular * pointSpecularWeight;\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec4 dirDiffuse  = vec4( 0.0 );\nvec4 dirSpecular = vec4( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nvec3 dirHalfVector = normalize( lDirection.xyz + vViewPosition );\nfloat dirDotNormalHalf = dot( normal, dirHalfVector );\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\nfloat dirSpecularWeight = 0.0;\nif ( dirDotNormalHalf >= 0.0 )\ndirSpecularWeight = pow( dirDotNormalHalf, shininess );\ndirDiffuse  += mColor * dirDiffuseWeight;\ndirSpecular += mSpecular * dirSpecularWeight;\n}\n#endif\nvec4 totalLight = vec4( ambient, opacity );\n#if MAX_DIR_LIGHTS > 0\ntotalLight += dirDiffuse + dirSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalLight += pointDiffuse + pointSpecular;\n#endif"};
THREE.UniformsLib={common:{color:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:0,texture:null},env_map:{type:"t",value:1,texture:null},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refraction_ratio:{type:"f",value:0.98},combine:{type:"i",value:0},fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{enableLighting:{type:"i",value:1},ambientLightColor:{type:"fv",
value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]}}};
THREE.ShaderLib={depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2E3}},fragment_shader:"uniform float mNear;\nuniform float mFar;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), 1.0 );\n}",vertex_shader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}"},normal:{uniforms:{},fragment_shader:"varying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, 1.0 );\n}",
vertex_shader:"varying vec3 vNormal;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\ngl_Position = projectionMatrix * mvPosition;\n}"},basic:{uniforms:THREE.UniformsLib.common,fragment_shader:["uniform vec3 color;\nuniform float opacity;",THREE.Snippets.map_pars_fragment,THREE.Snippets.envmap_pars_fragment,THREE.Snippets.fog_pars_fragment,"void main() {\nvec4 mColor = vec4( color, opacity );\nvec4 mapColor = vec4( 1.0 );\nvec4 cubeColor = vec4( 1.0 );",
THREE.Snippets.map_fragment,"gl_FragColor = mColor * mapColor;",THREE.Snippets.envmap_fragment,THREE.Snippets.fog_fragment,"}"].join("\n"),vertex_shader:[THREE.Snippets.map_pars_vertex,THREE.Snippets.envmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.Snippets.map_vertex,THREE.Snippets.envmap_vertex,"gl_Position = projectionMatrix * mvPosition;\n}"].join("\n")},lambert:{uniforms:Uniforms.merge([THREE.UniformsLib.common,THREE.UniformsLib.lights]),fragment_shader:["uniform vec3 color;\nuniform float opacity;\nvarying vec3 vLightWeighting;",
THREE.Snippets.map_pars_fragment,THREE.Snippets.envmap_pars_fragment,THREE.Snippets.fog_pars_fragment,"void main() {\nvec4 mColor = vec4( color, opacity );\nvec4 mapColor = vec4( 1.0 );\nvec4 cubeColor = vec4( 1.0 );",THREE.Snippets.map_fragment,"gl_FragColor =  mColor * mapColor * vec4( vLightWeighting, 1.0 );",THREE.Snippets.envmap_fragment,THREE.Snippets.fog_fragment,"}"].join("\n"),vertex_shader:["varying vec3 vLightWeighting;",THREE.Snippets.map_pars_vertex,THREE.Snippets.envmap_pars_vertex,
THREE.Snippets.lights_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.Snippets.map_vertex,THREE.Snippets.envmap_vertex,"vec3 transformedNormal = normalize( normalMatrix * normal );",THREE.Snippets.lights_vertex,"gl_Position = projectionMatrix * mvPosition;\n}"].join("\n")},phong:{uniforms:Uniforms.merge([THREE.UniformsLib.common,THREE.UniformsLib.lights,{ambient:{type:"c",value:new THREE.Color(328965)},specular:{type:"c",value:new THREE.Color(1118481)},
shininess:{type:"f",value:30}}]),fragment_shader:["uniform vec3 color;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 specular;\nuniform float shininess;\nvarying vec3 vLightWeighting;",THREE.Snippets.map_pars_fragment,THREE.Snippets.envmap_pars_fragment,THREE.Snippets.fog_pars_fragment,THREE.Snippets.lights_pars_fragment,"void main() {\nvec4 mColor = vec4( color, opacity );\nvec4 mapColor = vec4( 1.0 );\nvec4 cubeColor = vec4( 1.0 );",THREE.Snippets.map_fragment,THREE.Snippets.lights_fragment,
"gl_FragColor =  mapColor * totalLight * vec4( vLightWeighting, 1.0 );",THREE.Snippets.envmap_fragment,THREE.Snippets.fog_fragment,"}"].join("\n"),vertex_shader:["#define PHONG\nvarying vec3 vLightWeighting;\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.Snippets.map_pars_vertex,THREE.Snippets.envmap_pars_vertex,THREE.Snippets.lights_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.Snippets.map_vertex,THREE.Snippets.envmap_vertex,"#ifndef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\n#endif\nvViewPosition = cameraPosition - mPosition.xyz;\nvec3 transformedNormal = normalize( normalMatrix * normal );\nvNormal = transformedNormal;",
THREE.Snippets.lights_vertex,"gl_Position = projectionMatrix * mvPosition;\n}"].join("\n")}};THREE.RenderableObject=function(){this.z=this.object=null};THREE.RenderableFace3=function(){this.z=null;this.v1=new THREE.Vertex;this.v2=new THREE.Vertex;this.v3=new THREE.Vertex;this.centroidWorld=new THREE.Vector3;this.centroidScreen=new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.vertexNormalsWorld=[];this.faceMaterials=this.meshMaterials=null;this.overdraw=false;this.uvs=[null,null,null]};
THREE.RenderableParticle=function(){this.rotation=this.z=this.y=this.x=null;this.scale=new THREE.Vector2;this.materials=null};THREE.RenderableLine=function(){this.z=null;this.v1=new THREE.Vertex;this.v2=new THREE.Vertex;this.materials=null};
var GeometryUtils={merge:function(a,c){var d=c instanceof THREE.Mesh,e=a.vertices.length,f=d?c.geometry:c,g=a.vertices,k=f.vertices,b=a.faces,j=f.faces,l=a.uvs;f=f.uvs;d&&c.autoUpdateMatrix&&c.updateMatrix();for(var u=0,A=k.length;u<A;u++){var n=new THREE.Vertex(k[u].position.clone());d&&c.matrix.multiplyVector3(n.position);g.push(n)}u=0;for(A=j.length;u<A;u++){k=j[u];var x,z=k.vertexNormals;if(k instanceof THREE.Face3)x=new THREE.Face3(k.a+e,k.b+e,k.c+e);else if(k instanceof THREE.Face4)x=new THREE.Face4(k.a+
e,k.b+e,k.c+e,k.d+e);x.centroid.copy(k.centroid);x.normal.copy(k.normal);d=0;for(g=z.length;d<g;d++){n=z[d];x.vertexNormals.push(n.clone())}x.materials=k.materials.slice();b.push(x)}u=0;for(A=f.length;u<A;u++){e=f[u];b=[];d=0;for(g=e.length;d<g;d++)b.push(new THREE.UV(e[d].u,e[d].v));l.push(b)}}},ImageUtils={loadTexture:function(a,c){var d=new Image;d.onload=function(){this.loaded=true};d.src=a;return new THREE.Texture(d,c)},loadArray:function(a){var c,d,e=[];c=e.loadCount=0;for(d=a.length;c<d;++c){e[c]=
new Image;e[c].loaded=0;e[c].onload=function(){e.loadCount+=1;this.loaded=true};e[c].src=a[c]}return e}},SceneUtils={loadScene:function(a,c){var d,e,f,g,k,b,j,l,u,A,n,x,z,C,H,t,J,m=new Worker(a);m.onmessage=function(h){function o(){for(f in p.objects)if(!q.objects[f]){j=p.objects[f];if(z=q.geometries[j.geometry]){console.log(f);t=[];for(i=0;i<j.materials.length;i++)t[i]=q.materials[j.materials[i]];A=j.position;r=j.rotation;s=j.scale;object=new THREE.Mesh(z,t);object.position.set(A[0],A[1],A[2]);object.rotation.set(r[0],
r[1],r[2]);object.scale.set(s[0],s[1],s[2]);object.visible=j.visible;q.scene.addObject(object);q.objects[f]=object}}}function B(M){return function(v){console.log(M,v);q.geometries[M]=v;o()}}var p=h.data;console.log("data",p);var q={scene:new THREE.Scene,geometries:{},materials:{},objects:{},cameras:{},lights:{}};J=new THREE.Loader;for(d in p.geometries){b=p.geometries[d];if(b.type=="cube"){z=new Cube(b.width,b.height,b.depth,b.segments_width,b.segments_height,null,b.flipped,b.sides);q.geometries[d]=
z}else if(b.type=="plane"){z=new Plane(b.width,b.height,b.segments_width,b.segments_height);q.geometries[d]=z}else if(b.type=="sphere"){z=new Sphere(b.radius,b.segments_width,b.segments_height);q.geometries[d]=z}else if(b.type=="cylinder"){z=new Cylinder(b.numSegs,b.topRad,b.botRad,b.height,b.topOffset,b.botOffset);q.geometries[d]=z}else if(b.type=="torus"){z=new Torus(b.radius,b.tube,b.segmentsR,b.segmentsT);q.geometries[d]=z}else if(b.type=="bin_mesh")J.loadBinary({model:b.url,callback:B(d)});else b.type==
"ascii_mesh"&&J.loadAscii({model:b.url,callback:B(d)})}for(e in p.materials){l=p.materials[e];C=new THREE[l.type](l.parameters);q.materials[e]=C}o();for(g in p.lights){u=p.lights[g];if(u.type=="directional"){A=u.direction;light=new THREE.DirectionalLight;light.position.set(A[0],A[1],A[2]);light.position.normalize()}else if(u.type=="point"){A=u.position;light=new THREE.PointLight;light.position.set(A[0],A[1],A[2])}n=u.color;light.color.setRGB(n[0],n[1],n[2]);q.scene.addLight(light);q.lights[g]=light}for(k in p.cameras){n=
p.cameras[k];if(n.type=="perspective")H=new THREE.Camera(n.fov,n.aspect,n.near,n.far);else if(n.type=="ortho"){H=new THREE.Camera;H.projectionMatrix=THREE.Matrix4.makeOrtho(n.left,n.right,n.top,n.bottom,n.near,n.far)}A=n.position;x=n.target;H.position.set(A[0],A[1],A[2]);H.target.position.set(x[0],x[1],x[2]);q.cameras[k]=H}q.currentCamera=q.cameras[p.defaults.camera];c(q)};m.postMessage(0)},addMesh:function(a,c,d,e,f,g,k,b,j,l){c=new THREE.Mesh(c,l);c.scale.x=c.scale.y=c.scale.z=d;c.position.x=e;
c.position.y=f;c.position.z=g;c.rotation.x=k;c.rotation.y=b;c.rotation.z=j;a.addObject(c);return c},addPanoramaCubeWebGL:function(a,c,d){var e=ShaderUtils.lib.cube;e.uniforms.tCube.texture=d;d=new THREE.MeshShaderMaterial({fragment_shader:e.fragment_shader,vertex_shader:e.vertex_shader,uniforms:e.uniforms});c=new THREE.Mesh(new Cube(c,c,c,1,1,null,true),d);a.addObject(c);return c},addPanoramaCube:function(a,c,d){var e=[];e.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(d[0])}));e.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(d[1])}));
e.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(d[2])}));e.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(d[3])}));e.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(d[4])}));e.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(d[5])}));c=new THREE.Mesh(new Cube(c,c,c,1,1,e,true),new THREE.MeshFaceMaterial);a.addObject(c);return c},addPanoramaCubePlanes:function(a,c,d){var e=c/2;c=new Plane(c,c);var f=Math.PI/2,g=Math.PI;SceneUtils.addMesh(a,c,1,0,0,-e,0,0,0,new THREE.MeshBasicMaterial({map:new THREE.Texture(d[5])}));
SceneUtils.addMesh(a,c,1,-e,0,0,0,f,0,new THREE.MeshBasicMaterial({map:new THREE.Texture(d[0])}));SceneUtils.addMesh(a,c,1,e,0,0,0,-f,0,new THREE.MeshBasicMaterial({map:new THREE.Texture(d[1])}));SceneUtils.addMesh(a,c,1,0,e,0,f,0,g,new THREE.MeshBasicMaterial({map:new THREE.Texture(d[2])}));SceneUtils.addMesh(a,c,1,0,-e,0,-f,0,g,new THREE.MeshBasicMaterial({map:new THREE.Texture(d[3])}))}},ShaderUtils={lib:{fresnel:{uniforms:{mRefractionRatio:{type:"f",value:1.02},mFresnelBias:{type:"f",value:0.1},
mFresnelPower:{type:"f",value:2},mFresnelScale:{type:"f",value:1},tCube:{type:"t",value:1,texture:null}},fragment_shader:"uniform samplerCube tCube;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main() {\nvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\nvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\nrefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\nrefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\nrefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\nrefractedColor.a = 1.0;\ngl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\n}",
vertex_shader:"uniform float mRefractionRatio;\nuniform float mFresnelBias;\nuniform float mFresnelScale;\nuniform float mFresnelPower;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main(void) {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = normalize ( mat3( objectMatrix[0].xyz, objectMatrix[1].xyz, objectMatrix[2].xyz ) * normal );\nvec3 I = mPosition.xyz - cameraPosition;\nvReflect = reflect( I, nWorld );\nvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\nvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\nvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\nvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\ngl_Position = projectionMatrix * mvPosition;\n}"},
normal:{uniforms:{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},tDiffuse:{type:"t",value:0,texture:null},tNormal:{type:"t",value:2,texture:null},tAO:{type:"t",value:3,texture:null},uNormalScale:{type:"f",value:1},tDisplacement:{type:"t",value:4,texture:null},uDisplacementBias:{type:"f",value:-0.5},uDisplacementScale:{type:"f",value:2.5},uPointLightPos:{type:"v3",value:new THREE.Vector3},uPointLightColor:{type:"c",value:new THREE.Color(15658734)},uDirLightPos:{type:"v3",value:new THREE.Vector3},
uDirLightColor:{type:"c",value:new THREE.Color(15658734)},uAmbientLightColor:{type:"c",value:new THREE.Color(328965)},uDiffuseColor:{type:"c",value:new THREE.Color(15658734)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(328965)},uShininess:{type:"f",value:30}},fragment_shader:"uniform vec3 uDirLightPos;\nuniform vec3 uAmbientLightColor;\nuniform vec3 uDirLightColor;\nuniform vec3 uPointLightColor;\nuniform vec3 uAmbientColor;\nuniform vec3 uDiffuseColor;\nuniform vec3 uSpecularColor;\nuniform float uShininess;\nuniform bool enableDiffuse;\nuniform bool enableAO;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tAO;\nuniform float uNormalScale;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vPointLightVector;\nvarying vec3 vViewPosition;\nvoid main() {\nvec3 diffuseTex = vec3( 1.0, 1.0, 1.0 );\nvec3 aoTex = vec3( 1.0, 1.0, 1.0 );\nvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\nnormalTex.xy *= uNormalScale;\nnormalTex = normalize( normalTex );\nif( enableDiffuse )\ndiffuseTex = texture2D( tDiffuse, vUv ).xyz;\nif( enableAO )\naoTex = texture2D( tAO, vUv ).xyz;\nmat3 tsb = mat3( vTangent, vBinormal, vNormal );\nvec3 finalNormal = tsb * normalTex;\nvec3 normal = normalize( finalNormal );\nvec3 viewPosition = normalize( vViewPosition );\nvec4 pointDiffuse  = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec4 pointSpecular = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec3 pointVector = normalize( vPointLightVector );\nvec3 pointHalfVector = normalize( vPointLightVector + vViewPosition );\nfloat pointDotNormalHalf = dot( normal, pointHalfVector );\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\nfloat pointSpecularWeight = 0.0;\nif ( pointDotNormalHalf >= 0.0 )\npointSpecularWeight = pow( pointDotNormalHalf, uShininess );\npointDiffuse  += vec4( uDiffuseColor, 1.0 ) * pointDiffuseWeight;\npointSpecular += vec4( uSpecularColor, 1.0 ) * pointSpecularWeight;\nvec4 dirDiffuse  = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec4 dirSpecular = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec4 lDirection = viewMatrix * vec4( uDirLightPos, 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nvec3 dirHalfVector = normalize( lDirection.xyz + vViewPosition );\nfloat dirDotNormalHalf = dot( normal, dirHalfVector );\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\nfloat dirSpecularWeight = 0.0;\nif ( dirDotNormalHalf >= 0.0 )\ndirSpecularWeight = pow( dirDotNormalHalf, uShininess );\ndirDiffuse  += vec4( uDiffuseColor, 1.0 ) * dirDiffuseWeight;\ndirSpecular += vec4( uSpecularColor, 1.0 ) * dirSpecularWeight;\nvec4 totalLight = vec4( uAmbientLightColor * uAmbientColor, 1.0 );\ntotalLight += vec4( uDirLightColor, 1.0 ) * ( dirDiffuse + dirSpecular );\ntotalLight += vec4( uPointLightColor, 1.0 ) * ( pointDiffuse + pointSpecular );\ngl_FragColor = vec4( totalLight.xyz * aoTex * diffuseTex, 1.0 );\n}",
vertex_shader:"attribute vec4 tangent;\nuniform vec3 uPointLightPos;\n#ifdef VERTEX_TEXTURES\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vPointLightVector;\nvarying vec3 vViewPosition;\nvoid main() {\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvViewPosition = cameraPosition - mPosition.xyz;\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\nvTangent = normalize( normalMatrix * tangent.xyz );\nvBinormal = cross( vNormal, vTangent ) * tangent.w;\nvBinormal = normalize( vBinormal );\nvUv = uv;\nvec4 lPosition = viewMatrix * vec4( uPointLightPos, 1.0 );\nvPointLightVector = normalize( lPosition.xyz - mvPosition.xyz );\n#ifdef VERTEX_TEXTURES\nvec3 dv = texture2D( tDisplacement, uv ).xyz;\nfloat df = uDisplacementScale * dv.x + uDisplacementBias;\nvec4 displacedPosition = vec4( vNormal.xyz * df, 0.0 ) + mvPosition;\ngl_Position = projectionMatrix * displacedPosition;\n#else\ngl_Position = projectionMatrix * mvPosition;\n#endif\n}"},
cube:{uniforms:{tCube:{type:"t",value:1,texture:null}},vertex_shader:"varying vec3 vViewPosition;\nvoid main() {\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvViewPosition = cameraPosition - mPosition.xyz;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragment_shader:"uniform samplerCube tCube;\nvarying vec3 vViewPosition;\nvoid main() {\nvec3 wPos = cameraPosition - vViewPosition;\ngl_FragColor = textureCube( tCube, vec3( - wPos.x, wPos.yz ) );\n}"},basic:{uniforms:{},
vertex_shader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragment_shader:"void main() {\ngl_FragColor = vec4(1.0, 0.0, 0.0, 0.5);\n}"}}},Cube=function(a,c,d,e,f,g,k,b){function j(C,H,t,J,m,h,o,B){var p,q,M=e||1,v=f||1,D=M+1,F=v+1,E=m/2,y=h/2;m=m/M;var O=h/v,K=l.vertices.length;if(C=="x"&&H=="y"||C=="y"&&H=="x")p="z";else if(C=="x"&&H=="z"||C=="z"&&H=="x")p="y";else if(C=="z"&&H=="y"||C=="y"&&H=="z")p="x";for(q=0;q<F;q++)for(h=0;h<D;h++){var U=new THREE.Vector3;
U[C]=(h*m-E)*t;U[H]=(q*O-y)*J;U[p]=o;l.vertices.push(new THREE.Vertex(U))}for(q=0;q<v;q++)for(h=0;h<M;h++){l.faces.push(new THREE.Face4(h+D*q+K,h+D*(q+1)+K,h+1+D*(q+1)+K,h+1+D*q+K,null,B));l.uvs.push([new THREE.UV(h/M,q/v),new THREE.UV(h/M,(q+1)/v),new THREE.UV((h+1)/M,(q+1)/v),new THREE.UV((h+1)/M,q/v)])}}THREE.Geometry.call(this);var l=this,u=a/2,A=c/2,n=d/2;k=k?-1:1;if(g!==undefined)if(g instanceof Array)this.materials=g;else{this.materials=[];for(var x=0;x<6;x++)this.materials.push([g])}else this.materials=
[];this.sides={px:true,nx:true,py:true,ny:true,pz:true,nz:true};if(b!=undefined)for(var z in b)if(this.sides[z]!=undefined)this.sides[z]=b[z];this.sides.px&&j("z","y",1*k,-1,d,c,-u,this.materials[0]);this.sides.nx&&j("z","y",-1*k,-1,d,c,u,this.materials[1]);this.sides.py&&j("x","z",1*k,1,a,d,A,this.materials[2]);this.sides.ny&&j("x","z",1*k,-1,a,d,-A,this.materials[3]);this.sides.pz&&j("x","y",1*k,-1,a,c,n,this.materials[4]);this.sides.nz&&j("x","y",-1*k,-1,a,c,-n,this.materials[5]);(function(){for(var C=
[],H=[],t=0,J=l.vertices.length;t<J;t++){for(var m=l.vertices[t],h=false,o=0,B=C.length;o<B;o++){var p=C[o];if(m.position.x==p.position.x&&m.position.y==p.position.y&&m.position.z==p.position.z){H[t]=o;h=true;break}}if(!h){H[t]=C.length;C.push(new THREE.Vertex(m.position.clone()))}}t=0;for(J=l.faces.length;t<J;t++){m=l.faces[t];m.a=H[m.a];m.b=H[m.b];m.c=H[m.c];m.d=H[m.d]}l.vertices=C})();this.computeCentroids();this.computeFaceNormals();this.sortFacesByMaterial()};Cube.prototype=new THREE.Geometry;
Cube.prototype.constructor=Cube;
var Cylinder=function(a,c,d,e,f){function g(l,u,A){k.vertices.push(new THREE.Vertex(new THREE.Vector3(l,u,A)))}THREE.Geometry.call(this);var k=this,b=Math.PI,j;for(j=0;j<a;j++)g(Math.sin(2*b*j/a)*c,Math.cos(2*b*j/a)*c,0);for(j=0;j<a;j++)g(Math.sin(2*b*j/a)*d,Math.cos(2*b*j/a)*d,e);for(j=0;j<a;j++)k.faces.push(new THREE.Face4(j,j+a,a+(j+1)%a,(j+1)%a));if(d!=0){g(0,0,-f);for(j=a;j<a+a/2;j++)k.faces.push(new THREE.Face4(2*a,(2*j-2*a)%a,(2*j-2*a+1)%a,(2*j-2*a+2)%a))}if(c!=0){g(0,0,e+f);for(j=a+a/2;j<
2*a;j++)k.faces.push(new THREE.Face4((2*j-2*a+2)%a+a,(2*j-2*a+1)%a+a,(2*j-2*a)%a+a,2*a+1))}this.computeCentroids();this.computeFaceNormals();this.sortFacesByMaterial()};Cylinder.prototype=new THREE.Geometry;Cylinder.prototype.constructor=Cylinder;
var Plane=function(a,c,d,e){THREE.Geometry.call(this);var f,g=a/2,k=c/2;d=d||1;e=e||1;var b=d+1,j=e+1;a=a/d;var l=c/e;for(f=0;f<j;f++)for(c=0;c<b;c++)this.vertices.push(new THREE.Vertex(new THREE.Vector3(c*a-g,-(f*l-k),0)));for(f=0;f<e;f++)for(c=0;c<d;c++){this.faces.push(new THREE.Face4(c+b*f,c+b*(f+1),c+1+b*(f+1),c+1+b*f));this.uvs.push([new THREE.UV(c/d,f/e),new THREE.UV(c/d,(f+1)/e),new THREE.UV((c+1)/d,(f+1)/e),new THREE.UV((c+1)/d,f/e)])}this.computeCentroids();this.computeFaceNormals();this.sortFacesByMaterial()};
Plane.prototype=new THREE.Geometry;Plane.prototype.constructor=Plane;
var Sphere=function(a,c,d){THREE.Geometry.call(this);var e,f=Math.PI,g=Math.max(3,c||8),k=Math.max(2,d||6);c=[];for(d=0;d<k+1;d++){e=d/k;var b=a*Math.cos(e*f),j=a*Math.sin(e*f),l=[],u=0;for(e=0;e<g;e++){var A=2*e/g,n=j*Math.sin(A*f);A=j*Math.cos(A*f);(d==0||d==k)&&e>0||(u=this.vertices.push(new THREE.Vertex(new THREE.Vector3(A,b,n)))-1);l.push(u)}c.push(l)}var x,z,C;f=c.length;for(d=0;d<f;d++){g=c[d].length;if(d>0)for(e=0;e<g;e++){l=e==g-1;k=c[d][l?0:e+1];b=c[d][l?g-1:e];j=c[d-1][l?g-1:e];l=c[d-1][l?
0:e+1];n=d/(f-1);x=(d-1)/(f-1);z=(e+1)/g;A=e/g;u=new THREE.UV(1-z,n);n=new THREE.UV(1-A,n);A=new THREE.UV(1-A,x);var H=new THREE.UV(1-z,x);if(d<c.length-1){x=this.vertices[k].position.clone();z=this.vertices[b].position.clone();C=this.vertices[j].position.clone();x.normalize();z.normalize();C.normalize();this.faces.push(new THREE.Face3(k,b,j,[new THREE.Vector3(x.x,x.y,x.z),new THREE.Vector3(z.x,z.y,z.z),new THREE.Vector3(C.x,C.y,C.z)]));this.uvs.push([u,n,A])}if(d>1){x=this.vertices[k].position.clone();
z=this.vertices[j].position.clone();C=this.vertices[l].position.clone();x.normalize();z.normalize();C.normalize();this.faces.push(new THREE.Face3(k,j,l,[new THREE.Vector3(x.x,x.y,x.z),new THREE.Vector3(z.x,z.y,z.z),new THREE.Vector3(C.x,C.y,C.z)]));this.uvs.push([u,A,H])}}}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals();this.sortFacesByMaterial();this.boundingSphere={radius:a}};Sphere.prototype=new THREE.Geometry;Sphere.prototype.constructor=Sphere;
var Torus=function(a,c,d,e){this.radius=a||100;this.tube=c||40;this.segmentsR=d||8;this.segmentsT=e||6;a=[];THREE.Geometry.call(this);for(c=0;c<=this.segmentsR;++c)for(d=0;d<=this.segmentsT;++d){e=d/this.segmentsT*2*Math.PI;var f=c/this.segmentsR*2*Math.PI;this.vertices.push(new THREE.Vertex(new THREE.Vector3((this.radius+this.tube*Math.cos(f))*Math.cos(e),(this.radius+this.tube*Math.cos(f))*Math.sin(e),this.tube*Math.sin(f))));a.push([d/this.segmentsT,1-c/this.segmentsR])}for(c=1;c<=this.segmentsR;++c)for(d=
1;d<=this.segmentsT;++d){e=(this.segmentsT+1)*c+d;f=(this.segmentsT+1)*c+d-1;var g=(this.segmentsT+1)*(c-1)+d-1,k=(this.segmentsT+1)*(c-1)+d;this.faces.push(new THREE.Face4(e,f,g,k));this.uvs.push([new THREE.UV(a[e][0],a[e][1]),new THREE.UV(a[f][0],a[f][1]),new THREE.UV(a[g][0],a[g][1]),new THREE.UV(a[k][0],a[k][1])])}delete a;this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals();this.sortFacesByMaterial()};Torus.prototype=new THREE.Geometry;Torus.prototype.constructor=Torus;
function LathedObject(a,c,d){THREE.Geometry.call(this);c=c||12;d=d||2*Math.PI;c=d/c;for(var e=[],f=[],g=[],k=[],b=0;b<a.length;b++){this.vertices.push(new THREE.Vertex(a[b]));f[b]=this.vertices.length-1;e[b]=new THREE.Vector3(a[b].x,a[b].y,a[b].z)}for(var j=THREE.Matrix4.rotationZMatrix(c),l=0;l<=d+0.0010;l+=c){for(b=0;b<e.length;b++)if(l<d){e[b]=j.multiplyVector3(e[b].clone());this.vertices.push(new THREE.Vertex(e[b]));g[b]=this.vertices.length-1}else g=k;if(l==0)k=f;for(b=0;b<f.length-1;b++){this.faces.push(new THREE.Face4(g[b],
g[b+1],f[b+1],f[b]));this.uvs.push([new THREE.UV(l/d,b/a.length),new THREE.UV(l/d,(b+1)/a.length),new THREE.UV((l-c)/d,(b+1)/a.length),new THREE.UV((l-c)/d,b/a.length)])}f=g;g=[]}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals();this.sortFacesByMaterial()}LathedObject.prototype=new THREE.Geometry;LathedObject.prototype.constructor=LathedObject;THREE.Loader=function(a){this.statusDomElement=(this.showStatus=a)?this.addStatusElement():null};
THREE.Loader.prototype={addStatusElement:function(){var a=document.createElement("div");a.style.fontSize="0.8em";a.style.textAlign="left";a.style.background="#b00";a.style.color="#fff";a.style.width="140px";a.style.padding="0.25em 0.25em 0.25em 0.5em";a.style.position="absolute";a.style.right="0px";a.style.top="0px";a.style.zIndex=1E3;a.innerHTML="Loading ...";return a},updateProgress:function(a){var c="Loaded ";c+=a.total?(100*a.loaded/a.total).toFixed(0)+"%":(a.loaded/1E3).toFixed(2)+" KB";this.statusDomElement.innerHTML=
c},loadAsciiOld:function(a,c){var d=document.createElement("script");d.type="text/javascript";d.onload=c;d.src=a;document.getElementsByTagName("head")[0].appendChild(d)},loadAscii:function(a){var c=a.model,d=a.callback,e=a.texture_path?a.texture_path:THREE.Loader.prototype.extractUrlbase(c);a=(new Date).getTime();var f=new Worker(c);console.log("loading ascii",c);f.onmessage=function(g){THREE.Loader.prototype.createModel(g.data,d,e)};f.postMessage(a)},loadBinary:function(a){var c=a.model,d=a.callback,
e=a.texture_path?a.texture_path:THREE.Loader.prototype.extractUrlbase(c),f=a.bin_path?a.bin_path:THREE.Loader.prototype.extractUrlbase(c);a=(new Date).getTime();var g=new Worker(c),k=this.showProgress?THREE.Loader.prototype.updateProgress:null;console.log("loading binary",c);g.onmessage=function(b){THREE.Loader.prototype.loadAjaxBuffers(b.data.buffers,b.data.materials,d,f,e,k)};g.onerror=function(b){alert("worker.onerror: "+b.message+"\n"+b.data);b.preventDefault()};g.postMessage(a)},loadAjaxBuffers:function(a,
c,d,e,f,g){var k=new XMLHttpRequest,b=e+"/"+a,j=0;k.onreadystatechange=function(){if(k.readyState==4)k.status==200||k.status==0?THREE.Loader.prototype.createBinModel(k.responseText,d,f,c):alert("Couldn't load ["+b+"] ["+k.status+"]");else if(k.readyState==3){if(g){if(j==0)j=k.getResponseHeader("Content-Length");g({total:j,loaded:k.responseText.length})}}else if(k.readyState==2)j=k.getResponseHeader("Content-Length")};k.open("GET",b,true);k.overrideMimeType("text/plain; charset=x-user-defined");k.setRequestHeader("Content-Type",
"text/plain");k.send(null)},createBinModel:function(a,c,d,e){var f=function(g){function k(w,L){var I=u(w,L),Z=u(w,L+1),ca=u(w,L+2),ga=u(w,L+3),ja=(ga<<1&255|ca>>7)-127;I=(ca&127)<<16|Z<<8|I;if(I==0&&ja==-127)return 0;return(1-2*(ga>>7))*(1+I*Math.pow(2,-23))*Math.pow(2,ja)}function b(w,L){var I=u(w,L),Z=u(w,L+1),ca=u(w,L+2);return(u(w,L+3)<<24)+(ca<<16)+(Z<<8)+I}function j(w,L){var I=u(w,L);return(u(w,L+1)<<8)+I}function l(w,L){var I=u(w,L);return I>127?I-256:I}function u(w,L){return w.charCodeAt(L)&
255}function A(w){var L,I,Z;L=b(a,w);I=b(a,w+B);Z=b(a,w+p);w=j(a,w+q);THREE.Loader.prototype.f3(t,L,I,Z,w)}function n(w){var L,I,Z,ca,ga,ja;L=b(a,w);I=b(a,w+B);Z=b(a,w+p);ca=j(a,w+q);ga=b(a,w+M);ja=b(a,w+v);w=b(a,w+D);THREE.Loader.prototype.f3n(t,h,L,I,Z,ca,ga,ja,w)}function x(w){var L,I,Z,ca;L=b(a,w);I=b(a,w+F);Z=b(a,w+E);ca=b(a,w+y);w=j(a,w+O);THREE.Loader.prototype.f4(t,L,I,Z,ca,w)}function z(w){var L,I,Z,ca,ga,ja,qa,sa;L=b(a,w);I=b(a,w+F);Z=b(a,w+E);ca=b(a,w+y);ga=j(a,w+O);ja=b(a,w+K);qa=b(a,
w+U);sa=b(a,w+W);w=b(a,w+P);THREE.Loader.prototype.f4n(t,h,L,I,Z,ca,ga,ja,qa,sa,w)}function C(w){var L,I;L=b(a,w);I=b(a,w+da);w=b(a,w+X);THREE.Loader.prototype.uv3(t,o[L*2],o[L*2+1],o[I*2],o[I*2+1],o[w*2],o[w*2+1])}function H(w){var L,I,Z;L=b(a,w);I=b(a,w+R);Z=b(a,w+T);w=b(a,w+ba);THREE.Loader.prototype.uv4(t,o[L*2],o[L*2+1],o[I*2],o[I*2+1],o[Z*2],o[Z*2+1],o[w*2],o[w*2+1])}var t=this,J=0,m,h=[],o=[],B,p,q,M,v,D,F,E,y,O,K,U,W,P,da,X,R,T,ba,Y,G,S,V,ia,ha;THREE.Geometry.call(this);THREE.Loader.prototype.init_materials(t,
e,g);m={signature:a.substr(J,8),header_bytes:u(a,J+8),vertex_coordinate_bytes:u(a,J+9),normal_coordinate_bytes:u(a,J+10),uv_coordinate_bytes:u(a,J+11),vertex_index_bytes:u(a,J+12),normal_index_bytes:u(a,J+13),uv_index_bytes:u(a,J+14),material_index_bytes:u(a,J+15),nvertices:b(a,J+16),nnormals:b(a,J+16+4),nuvs:b(a,J+16+8),ntri_flat:b(a,J+16+12),ntri_smooth:b(a,J+16+16),ntri_flat_uv:b(a,J+16+20),ntri_smooth_uv:b(a,J+16+24),nquad_flat:b(a,J+16+28),nquad_smooth:b(a,J+16+32),nquad_flat_uv:b(a,J+16+36),
nquad_smooth_uv:b(a,J+16+40)};J+=m.header_bytes;B=m.vertex_index_bytes;p=m.vertex_index_bytes*2;q=m.vertex_index_bytes*3;M=m.vertex_index_bytes*3+m.material_index_bytes;v=m.vertex_index_bytes*3+m.material_index_bytes+m.normal_index_bytes;D=m.vertex_index_bytes*3+m.material_index_bytes+m.normal_index_bytes*2;F=m.vertex_index_bytes;E=m.vertex_index_bytes*2;y=m.vertex_index_bytes*3;O=m.vertex_index_bytes*4;K=m.vertex_index_bytes*4+m.material_index_bytes;U=m.vertex_index_bytes*4+m.material_index_bytes+
m.normal_index_bytes;W=m.vertex_index_bytes*4+m.material_index_bytes+m.normal_index_bytes*2;P=m.vertex_index_bytes*4+m.material_index_bytes+m.normal_index_bytes*3;da=m.uv_index_bytes;X=m.uv_index_bytes*2;R=m.uv_index_bytes;T=m.uv_index_bytes*2;ba=m.uv_index_bytes*3;g=m.vertex_index_bytes*3+m.material_index_bytes;ha=m.vertex_index_bytes*4+m.material_index_bytes;Y=m.ntri_flat*g;G=m.ntri_smooth*(g+m.normal_index_bytes*3);S=m.ntri_flat_uv*(g+m.uv_index_bytes*3);V=m.ntri_smooth_uv*(g+m.normal_index_bytes*
3+m.uv_index_bytes*3);ia=m.nquad_flat*ha;g=m.nquad_smooth*(ha+m.normal_index_bytes*4);ha=m.nquad_flat_uv*(ha+m.uv_index_bytes*4);J+=function(w){var L,I,Z,ca=m.vertex_coordinate_bytes*3,ga=w+m.nvertices*ca;for(w=w;w<ga;w+=ca){L=k(a,w);I=k(a,w+m.vertex_coordinate_bytes);Z=k(a,w+m.vertex_coordinate_bytes*2);THREE.Loader.prototype.v(t,L,I,Z)}return m.nvertices*ca}(J);J+=function(w){var L,I,Z,ca=m.normal_coordinate_bytes*3,ga=w+m.nnormals*ca;for(w=w;w<ga;w+=ca){L=l(a,w);I=l(a,w+m.normal_coordinate_bytes);
Z=l(a,w+m.normal_coordinate_bytes*2);h.push(L/127,I/127,Z/127)}return m.nnormals*ca}(J);J+=function(w){var L,I,Z=m.uv_coordinate_bytes*2,ca=w+m.nuvs*Z;for(w=w;w<ca;w+=Z){L=k(a,w);I=k(a,w+m.uv_coordinate_bytes);o.push(L,I)}return m.nuvs*Z}(J);J=J;Y=J+Y;G=Y+G;S=G+S;V=S+V;ia=V+ia;g=ia+g;ha=g+ha;(function(w){var L,I=m.vertex_index_bytes*3+m.material_index_bytes,Z=I+m.uv_index_bytes*3,ca=w+m.ntri_flat_uv*Z;for(L=w;L<ca;L+=Z){A(L);C(L+I)}return ca-w})(G);(function(w){var L,I=m.vertex_index_bytes*3+m.material_index_bytes+
m.normal_index_bytes*3,Z=I+m.uv_index_bytes*3,ca=w+m.ntri_smooth_uv*Z;for(L=w;L<ca;L+=Z){n(L);C(L+I)}return ca-w})(S);(function(w){var L,I=m.vertex_index_bytes*4+m.material_index_bytes,Z=I+m.uv_index_bytes*4,ca=w+m.nquad_flat_uv*Z;for(L=w;L<ca;L+=Z){x(L);H(L+I)}return ca-w})(g);(function(w){var L,I=m.vertex_index_bytes*4+m.material_index_bytes+m.normal_index_bytes*4,Z=I+m.uv_index_bytes*4,ca=w+m.nquad_smooth_uv*Z;for(L=w;L<ca;L+=Z){z(L);H(L+I)}return ca-w})(ha);(function(w){var L,I=m.vertex_index_bytes*
3+m.material_index_bytes,Z=w+m.ntri_flat*I;for(L=w;L<Z;L+=I)A(L);return Z-w})(J);(function(w){var L,I=m.vertex_index_bytes*3+m.material_index_bytes+m.normal_index_bytes*3,Z=w+m.ntri_smooth*I;for(L=w;L<Z;L+=I)n(L);return Z-w})(Y);(function(w){var L,I=m.vertex_index_bytes*4+m.material_index_bytes,Z=w+m.nquad_flat*I;for(L=w;L<Z;L+=I)x(L);return Z-w})(V);(function(w){var L,I=m.vertex_index_bytes*4+m.material_index_bytes+m.normal_index_bytes*4,Z=w+m.nquad_smooth*I;for(L=w;L<Z;L+=I)z(L);return Z-w})(ia);
this.computeCentroids();this.computeFaceNormals();this.sortFacesByMaterial()};f.prototype=new THREE.Geometry;f.prototype.constructor=f;c(new f(d))},createModel:function(a,c,d){var e=function(f){var g=this;THREE.Geometry.call(this);THREE.Loader.prototype.init_materials(g,a.materials,f);(function(){var k,b,j,l,u;k=0;for(b=a.vertices.length;k<b;k+=3){j=a.vertices[k];l=a.vertices[k+1];u=a.vertices[k+2];THREE.Loader.prototype.v(g,j,l,u)}})();(function(){function k(z,C){THREE.Loader.prototype.f3(g,z[C],
z[C+1],z[C+2],z[C+3])}function b(z,C){THREE.Loader.prototype.f3n(g,a.normals,z[C],z[C+1],z[C+2],z[C+3],z[C+4],z[C+5],z[C+6])}function j(z,C){THREE.Loader.prototype.f4(g,z[C],z[C+1],z[C+2],z[C+3],z[C+4])}function l(z,C){THREE.Loader.prototype.f4n(g,a.normals,z[C],z[C+1],z[C+2],z[C+3],z[C+4],z[C+5],z[C+6],z[C+7],z[C+8])}function u(z,C){var H,t,J;H=z[C];t=z[C+1];J=z[C+2];THREE.Loader.prototype.uv3(g,a.uvs[H*2],a.uvs[H*2+1],a.uvs[t*2],a.uvs[t*2+1],a.uvs[J*2],a.uvs[J*2+1])}function A(z,C){var H,t,J,m;
H=z[C];t=z[C+1];J=z[C+2];m=z[C+3];THREE.Loader.prototype.uv4(g,a.uvs[H*2],a.uvs[H*2+1],a.uvs[t*2],a.uvs[t*2+1],a.uvs[J*2],a.uvs[J*2+1],a.uvs[m*2],a.uvs[m*2+1])}var n,x;n=0;for(x=a.triangles_uv.length;n<x;n+=7){k(a.triangles_uv,n);u(a.triangles_uv,n+4)}n=0;for(x=a.triangles_n_uv.length;n<x;n+=10){b(a.triangles_n_uv,n);u(a.triangles_n_uv,n+7)}n=0;for(x=a.quads_uv.length;n<x;n+=9){j(a.quads_uv,n);A(a.quads_uv,n+5)}n=0;for(x=a.quads_n_uv.length;n<x;n+=13){l(a.quads_n_uv,n);A(a.quads_n_uv,n+9)}n=0;for(x=
a.triangles.length;n<x;n+=4)k(a.triangles,n);n=0;for(x=a.triangles_n.length;n<x;n+=7)b(a.triangles_n,n);n=0;for(x=a.quads.length;n<x;n+=5)j(a.quads,n);n=0;for(x=a.quads_n.length;n<x;n+=9)l(a.quads_n,n)})();this.computeCentroids();this.computeFaceNormals();this.sortFacesByMaterial()};e.prototype=new THREE.Geometry;e.prototype.constructor=e;c(new e(d))},v:function(a,c,d,e){a.vertices.push(new THREE.Vertex(new THREE.Vector3(c,d,e)))},f3:function(a,c,d,e,f){a.faces.push(new THREE.Face3(c,d,e,null,a.materials[f]))},
f4:function(a,c,d,e,f,g){a.faces.push(new THREE.Face4(c,d,e,f,null,a.materials[g]))},f3n:function(a,c,d,e,f,g,k,b,j){g=a.materials[g];var l=c[b*3],u=c[b*3+1];b=c[b*3+2];var A=c[j*3],n=c[j*3+1];j=c[j*3+2];a.faces.push(new THREE.Face3(d,e,f,[new THREE.Vector3(c[k*3],c[k*3+1],c[k*3+2]),new THREE.Vector3(l,u,b),new THREE.Vector3(A,n,j)],g))},f4n:function(a,c,d,e,f,g,k,b,j,l,u){k=a.materials[k];var A=c[j*3],n=c[j*3+1];j=c[j*3+2];var x=c[l*3],z=c[l*3+1];l=c[l*3+2];var C=c[u*3],H=c[u*3+1];u=c[u*3+2];a.faces.push(new THREE.Face4(d,
e,f,g,[new THREE.Vector3(c[b*3],c[b*3+1],c[b*3+2]),new THREE.Vector3(A,n,j),new THREE.Vector3(x,z,l),new THREE.Vector3(C,H,u)],k))},uv3:function(a,c,d,e,f,g,k){var b=[];b.push(new THREE.UV(c,d));b.push(new THREE.UV(e,f));b.push(new THREE.UV(g,k));a.uvs.push(b)},uv4:function(a,c,d,e,f,g,k,b,j){var l=[];l.push(new THREE.UV(c,d));l.push(new THREE.UV(e,f));l.push(new THREE.UV(g,k));l.push(new THREE.UV(b,j));a.uvs.push(l)},init_materials:function(a,c,d){a.materials=[];for(var e=0;e<c.length;++e)a.materials[e]=
[THREE.Loader.prototype.createMaterial(c[e],d)]},createMaterial:function(a,c){function d(g){g=Math.log(g)/Math.LN2;return Math.floor(g)==g}var e,f;if(a.map_diffuse&&c){f=document.createElement("canvas");e=new THREE.MeshLambertMaterial({map:new THREE.Texture(f)});f=new Image;f.onload=function(){if(!d(this.width)||!d(this.height)){var g=Math.pow(2,Math.round(Math.log(this.width)/Math.LN2)),k=Math.pow(2,Math.round(Math.log(this.height)/Math.LN2));e.map.image.width=g;e.map.image.height=k;e.map.image.getContext("2d").drawImage(this,
0,0,g,k)}else e.map.image=this;e.map.image.loaded=1};f.src=c+"/"+a.map_diffuse}else if(a.col_diffuse){f=(a.col_diffuse[0]*255<<16)+(a.col_diffuse[1]*255<<8)+a.col_diffuse[2]*255;e=new THREE.MeshLambertMaterial({color:f,opacity:a.transparency})}else e=a.a_dbg_color?new THREE.MeshLambertMaterial({color:a.a_dbg_color}):new THREE.MeshLambertMaterial({color:15658734});return e},extractUrlbase:function(a){a=a.split("/");a.pop();return a.join("/")}};
