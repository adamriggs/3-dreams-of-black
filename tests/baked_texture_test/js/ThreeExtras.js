// ThreeExtras.js r32 - http://github.com/mrdoob/three.js
var THREE=THREE||{};THREE.Color=function(a){this.autoUpdate=true;this.setHex(a)};
THREE.Color.prototype={setRGB:function(a,b,d){this.r=a;this.g=b;this.b=d;if(this.autoUpdate){this.updateHex();this.updateStyleString()}},setHex:function(a){this.hex=~~a&16777215;if(this.autoUpdate){this.updateRGBA();this.updateStyleString()}},updateHex:function(){this.hex=~~(this.r*255)<<16^~~(this.g*255)<<8^~~(this.b*255)},updateRGBA:function(){this.r=(this.hex>>16&255)/255;this.g=(this.hex>>8&255)/255;this.b=(this.hex&255)/255},updateStyleString:function(){this.__styleString="rgb("+~~(this.r*255)+
","+~~(this.g*255)+","+~~(this.b*255)+")"},clone:function(){return new THREE.Color(this.hex)},toString:function(){return"THREE.Color ( r: "+this.r+", g: "+this.g+", b: "+this.b+", hex: "+this.hex+" )"}};THREE.Vector2=function(a,b){this.x=a||0;this.y=b||0};
THREE.Vector2.prototype={set:function(a,b){this.x=a;this.y=b;return this},copy:function(a){this.x=a.x;this.y=a.y;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;return this},unit:function(){this.multiplyScalar(1/this.length());return this},length:function(){return Math.sqrt(this.x*
this.x+this.y*this.y)},lengthSq:function(){return this.x*this.x+this.y*this.y},negate:function(){this.x=-this.x;this.y=-this.y;return this},clone:function(){return new THREE.Vector2(this.x,this.y)},toString:function(){return"THREE.Vector2 ("+this.x+", "+this.y+")"}};THREE.Vector3=function(a,b,d){this.x=a||0;this.y=b||0;this.z=d||0};
THREE.Vector3.prototype={set:function(a,b,d){this.x=a;this.y=b;this.z=d;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;return this},addScalar:function(a){this.x+=a;this.y+=a;this.z+=a;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;return this},
cross:function(a,b){this.x=a.y*b.z-a.z*b.y;this.y=a.z*b.x-a.x*b.z;this.z=a.x*b.y-a.y*b.x;return this},crossSelf:function(a){var b=this.x,d=this.y,e=this.z;this.x=d*a.z-e*a.y;this.y=e*a.x-b*a.z;this.z=b*a.y-d*a.x;return this},multiply:function(a,b){this.x=a.x*b.x;this.y=a.y*b.y;this.z=a.z*b.z;return this},multiplySelf:function(a){this.x*=a.x;this.y*=a.y;this.z*=a.z;return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;return this},divideSelf:function(a){this.x/=a.x;this.y/=a.y;this.z/=
a.z;return this},divideScalar:function(a){this.x/=a;this.y/=a;this.z/=a;return this},dot:function(a){return this.x*a.x+this.y*a.y+this.z*a.z},distanceTo:function(a){var b=this.x-a.x,d=this.y-a.y;a=this.z-a.z;return Math.sqrt(b*b+d*d+a*a)},distanceToSquared:function(a){var b=this.x-a.x,d=this.y-a.y;a=this.z-a.z;return b*b+d*d+a*a},length:function(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)},lengthSq:function(){return this.x*this.x+this.y*this.y+this.z*this.z},negate:function(){this.x=
-this.x;this.y=-this.y;this.z=-this.z;return this},normalize:function(){var a=Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z);a>0?this.multiplyScalar(1/a):this.set(0,0,0);return this},setLength:function(a){return this.normalize().multiplyScalar(a)},isZero:function(){return Math.abs(this.x)<1.0E-4&&Math.abs(this.y)<1.0E-4&&Math.abs(this.z)<1.0E-4},clone:function(){return new THREE.Vector3(this.x,this.y,this.z)},toString:function(){return"THREE.Vector3 ( "+this.x+", "+this.y+", "+this.z+" )"}};
THREE.Vector4=function(a,b,d,e){this.x=a||0;this.y=b||0;this.z=d||0;this.w=e||1};
THREE.Vector4.prototype={set:function(a,b,d,e){this.x=a;this.y=b;this.z=d;this.w=e;return this},copy:function(a){this.x=a.x;this.y=a.y;this.z=a.z;this.w=a.w||1;return this},add:function(a,b){this.x=a.x+b.x;this.y=a.y+b.y;this.z=a.z+b.z;this.w=a.w+b.w;return this},addSelf:function(a){this.x+=a.x;this.y+=a.y;this.z+=a.z;this.w+=a.w;return this},sub:function(a,b){this.x=a.x-b.x;this.y=a.y-b.y;this.z=a.z-b.z;this.w=a.w-b.w;return this},subSelf:function(a){this.x-=a.x;this.y-=a.y;this.z-=a.z;this.w-=a.w;
return this},multiplyScalar:function(a){this.x*=a;this.y*=a;this.z*=a;this.w*=a;return this},divideScalar:function(a){this.x/=a;this.y/=a;this.z/=a;this.w/=a;return this},lerpSelf:function(a,b){this.x+=(a.x-this.x)*b;this.y+=(a.y-this.y)*b;this.z+=(a.z-this.z)*b;this.w+=(a.w-this.w)*b},clone:function(){return new THREE.Vector4(this.x,this.y,this.z,this.w)},toString:function(){return"THREE.Vector4 ("+this.x+", "+this.y+", "+this.z+", "+this.w+")"}};
THREE.Ray=function(a,b){this.origin=a||new THREE.Vector3;this.direction=b||new THREE.Vector3};
THREE.Ray.prototype={intersectScene:function(a){var b,d,e=a.objects,g=[];a=0;for(b=e.length;a<b;a++){d=e[a];if(d instanceof THREE.Mesh)g=g.concat(this.intersectObject(d))}g.sort(function(h,j){return h.distance-j.distance});return g},intersectObject:function(a){function b(H,s,K,o){o=o.clone().subSelf(s);K=K.clone().subSelf(s);var f=H.clone().subSelf(s);H=o.dot(o);s=o.dot(K);o=o.dot(f);var n=K.dot(K);K=K.dot(f);f=1/(H*n-s*s);n=(n*o-s*K)*f;H=(H*K-s*o)*f;return n>0&&H>0&&n+H<1}var d,e,g,h,j,c,k,m,p,z,
q,v=a.geometry,A=v.vertices,B=[];d=0;for(e=v.faces.length;d<e;d++){g=v.faces[d];z=this.origin.clone();q=this.direction.clone();h=a.matrix.multiplyVector3(A[g.a].position.clone());j=a.matrix.multiplyVector3(A[g.b].position.clone());c=a.matrix.multiplyVector3(A[g.c].position.clone());k=g instanceof THREE.Face4?a.matrix.multiplyVector3(A[g.d].position.clone()):null;m=a.rotationMatrix.multiplyVector3(g.normal.clone());p=q.dot(m);if(p<0){m=m.dot((new THREE.Vector3).sub(h,z))/p;z=z.addSelf(q.multiplyScalar(m));
if(g instanceof THREE.Face3){if(b(z,h,j,c)){g={distance:this.origin.distanceTo(z),point:z,face:g,object:a};B.push(g)}}else if(g instanceof THREE.Face4)if(b(z,h,j,k)||b(z,j,c,k)){g={distance:this.origin.distanceTo(z),point:z,face:g,object:a};B.push(g)}}}return B}};
THREE.Rectangle=function(){function a(){h=e-b;j=g-d}var b,d,e,g,h,j,c=true;this.getX=function(){return b};this.getY=function(){return d};this.getWidth=function(){return h};this.getHeight=function(){return j};this.getLeft=function(){return b};this.getTop=function(){return d};this.getRight=function(){return e};this.getBottom=function(){return g};this.set=function(k,m,p,z){c=false;b=k;d=m;e=p;g=z;a()};this.addPoint=function(k,m){if(c){c=false;b=k;d=m;e=k;g=m}else{b=b<k?b:k;d=d<m?d:m;e=e>k?e:k;g=g>m?
g:m}a()};this.add3Points=function(k,m,p,z,q,v){if(c){c=false;b=k<p?k<q?k:q:p<q?p:q;d=m<z?m<v?m:v:z<v?z:v;e=k>p?k>q?k:q:p>q?p:q;g=m>z?m>v?m:v:z>v?z:v}else{b=k<p?k<q?k<b?k:b:q<b?q:b:p<q?p<b?p:b:q<b?q:b;d=m<z?m<v?m<d?m:d:v<d?v:d:z<v?z<d?z:d:v<d?v:d;e=k>p?k>q?k>e?k:e:q>e?q:e:p>q?p>e?p:e:q>e?q:e;g=m>z?m>v?m>g?m:g:v>g?v:g:z>v?z>g?z:g:v>g?v:g}a()};this.addRectangle=function(k){if(c){c=false;b=k.getLeft();d=k.getTop();e=k.getRight();g=k.getBottom()}else{b=b<k.getLeft()?b:k.getLeft();d=d<k.getTop()?d:k.getTop();
e=e>k.getRight()?e:k.getRight();g=g>k.getBottom()?g:k.getBottom()}a()};this.inflate=function(k){b-=k;d-=k;e+=k;g+=k;a()};this.minSelf=function(k){b=b>k.getLeft()?b:k.getLeft();d=d>k.getTop()?d:k.getTop();e=e<k.getRight()?e:k.getRight();g=g<k.getBottom()?g:k.getBottom();a()};this.instersects=function(k){return Math.min(e,k.getRight())-Math.max(b,k.getLeft())>=0&&Math.min(g,k.getBottom())-Math.max(d,k.getTop())>=0};this.empty=function(){c=true;g=e=d=b=0;a()};this.isEmpty=function(){return c};this.toString=
function(){return"THREE.Rectangle ( left: "+b+", right: "+e+", top: "+d+", bottom: "+g+", width: "+h+", height: "+j+" )"}};THREE.Matrix3=function(){this.m=[]};THREE.Matrix3.prototype={transpose:function(){var a,b=this.m;a=b[1];b[1]=b[3];b[3]=a;a=b[2];b[2]=b[6];b[6]=a;a=b[5];b[5]=b[7];b[7]=a;return this}};
THREE.Matrix4=function(a,b,d,e,g,h,j,c,k,m,p,z,q,v,A,B){this.n11=a||1;this.n12=b||0;this.n13=d||0;this.n14=e||0;this.n21=g||0;this.n22=h||1;this.n23=j||0;this.n24=c||0;this.n31=k||0;this.n32=m||0;this.n33=p||1;this.n34=z||0;this.n41=q||0;this.n42=v||0;this.n43=A||0;this.n44=B||1;this.flat=Array(16);this.m33=new THREE.Matrix3};
THREE.Matrix4.prototype={identity:function(){this.n11=1;this.n21=this.n14=this.n13=this.n12=0;this.n22=1;this.n32=this.n31=this.n24=this.n23=0;this.n33=1;this.n43=this.n42=this.n41=this.n34=0;this.n44=1;return this},set:function(a,b,d,e,g,h,j,c,k,m,p,z,q,v,A,B){this.n11=a;this.n12=b;this.n13=d;this.n14=e;this.n21=g;this.n22=h;this.n23=j;this.n24=c;this.n31=k;this.n32=m;this.n33=p;this.n34=z;this.n41=q;this.n42=v;this.n43=A;this.n44=B;return this},copy:function(a){this.n11=a.n11;this.n12=a.n12;this.n13=
a.n13;this.n14=a.n14;this.n21=a.n21;this.n22=a.n22;this.n23=a.n23;this.n24=a.n24;this.n31=a.n31;this.n32=a.n32;this.n33=a.n33;this.n34=a.n34;this.n41=a.n41;this.n42=a.n42;this.n43=a.n43;this.n44=a.n44;return this},lookAt:function(a,b,d){var e=THREE.Matrix4.__tmpVec1,g=THREE.Matrix4.__tmpVec2,h=THREE.Matrix4.__tmpVec3;h.sub(a,b).normalize();e.cross(d,h).normalize();g.cross(h,e).normalize();this.n11=e.x;this.n12=e.y;this.n13=e.z;this.n14=-e.dot(a);this.n21=g.x;this.n22=g.y;this.n23=g.z;this.n24=-g.dot(a);
this.n31=h.x;this.n32=h.y;this.n33=h.z;this.n34=-h.dot(a);this.n43=this.n42=this.n41=0;this.n44=1;return this},multiplyVector3:function(a){var b=a.x,d=a.y,e=a.z,g=1/(this.n41*b+this.n42*d+this.n43*e+this.n44);a.x=(this.n11*b+this.n12*d+this.n13*e+this.n14)*g;a.y=(this.n21*b+this.n22*d+this.n23*e+this.n24)*g;a.z=(this.n31*b+this.n32*d+this.n33*e+this.n34)*g;return a},multiplyVector4:function(a){var b=a.x,d=a.y,e=a.z,g=a.w;a.x=this.n11*b+this.n12*d+this.n13*e+this.n14*g;a.y=this.n21*b+this.n22*d+this.n23*
e+this.n24*g;a.z=this.n31*b+this.n32*d+this.n33*e+this.n34*g;a.w=this.n41*b+this.n42*d+this.n43*e+this.n44*g;return a},crossVector:function(a){var b=new THREE.Vector4;b.x=this.n11*a.x+this.n12*a.y+this.n13*a.z+this.n14*a.w;b.y=this.n21*a.x+this.n22*a.y+this.n23*a.z+this.n24*a.w;b.z=this.n31*a.x+this.n32*a.y+this.n33*a.z+this.n34*a.w;b.w=a.w?this.n41*a.x+this.n42*a.y+this.n43*a.z+this.n44*a.w:1;return b},multiply:function(a,b){var d=a.n11,e=a.n12,g=a.n13,h=a.n14,j=a.n21,c=a.n22,k=a.n23,m=a.n24,p=a.n31,
z=a.n32,q=a.n33,v=a.n34,A=a.n41,B=a.n42,H=a.n43,s=a.n44,K=b.n11,o=b.n12,f=b.n13,n=b.n14,y=b.n21,r=b.n22,x=b.n23,L=b.n24,u=b.n31,C=b.n32,E=b.n33,D=b.n34,w=b.n41,N=b.n42,I=b.n43,T=b.n44;this.n11=d*K+e*y+g*u+h*w;this.n12=d*o+e*r+g*C+h*N;this.n13=d*f+e*x+g*E+h*I;this.n14=d*n+e*L+g*D+h*T;this.n21=j*K+c*y+k*u+m*w;this.n22=j*o+c*r+k*C+m*N;this.n23=j*f+c*x+k*E+m*I;this.n24=j*n+c*L+k*D+m*T;this.n31=p*K+z*y+q*u+v*w;this.n32=p*o+z*r+q*C+v*N;this.n33=p*f+z*x+q*E+v*I;this.n34=p*n+z*L+q*D+v*T;this.n41=A*K+B*y+
H*u+s*w;this.n42=A*o+B*r+H*C+s*N;this.n43=A*f+B*x+H*E+s*I;this.n44=A*n+B*L+H*D+s*T;return this},multiplySelf:function(a){var b=this.n11,d=this.n12,e=this.n13,g=this.n14,h=this.n21,j=this.n22,c=this.n23,k=this.n24,m=this.n31,p=this.n32,z=this.n33,q=this.n34,v=this.n41,A=this.n42,B=this.n43,H=this.n44,s=a.n11,K=a.n21,o=a.n31,f=a.n41,n=a.n12,y=a.n22,r=a.n32,x=a.n42,L=a.n13,u=a.n23,C=a.n33,E=a.n43,D=a.n14,w=a.n24,N=a.n34;a=a.n44;this.n11=b*s+d*K+e*o+g*f;this.n12=b*n+d*y+e*r+g*x;this.n13=b*L+d*u+e*C+g*
E;this.n14=b*D+d*w+e*N+g*a;this.n21=h*s+j*K+c*o+k*f;this.n22=h*n+j*y+c*r+k*x;this.n23=h*L+j*u+c*C+k*E;this.n24=h*D+j*w+c*N+k*a;this.n31=m*s+p*K+z*o+q*f;this.n32=m*n+p*y+z*r+q*x;this.n33=m*L+p*u+z*C+q*E;this.n34=m*D+p*w+z*N+q*a;this.n41=v*s+A*K+B*o+H*f;this.n42=v*n+A*y+B*r+H*x;this.n43=v*L+A*u+B*C+H*E;this.n44=v*D+A*w+B*N+H*a;return this},multiplyScalar:function(a){this.n11*=a;this.n12*=a;this.n13*=a;this.n14*=a;this.n21*=a;this.n22*=a;this.n23*=a;this.n24*=a;this.n31*=a;this.n32*=a;this.n33*=a;this.n34*=
a;this.n41*=a;this.n42*=a;this.n43*=a;this.n44*=a;return this},determinant:function(){var a=this.n11,b=this.n12,d=this.n13,e=this.n14,g=this.n21,h=this.n22,j=this.n23,c=this.n24,k=this.n31,m=this.n32,p=this.n33,z=this.n34,q=this.n41,v=this.n42,A=this.n43,B=this.n44;return e*j*m*q-d*c*m*q-e*h*p*q+b*c*p*q+d*h*z*q-b*j*z*q-e*j*k*v+d*c*k*v+e*g*p*v-a*c*p*v-d*g*z*v+a*j*z*v+e*h*k*A-b*c*k*A-e*g*m*A+a*c*m*A+b*g*z*A-a*h*z*A-d*h*k*B+b*j*k*B+d*g*m*B-a*j*m*B-b*g*p*B+a*h*p*B},transpose:function(){function a(b,d,
e){var g=b[d];b[d]=b[e];b[e]=g}a(this,"n21","n12");a(this,"n31","n13");a(this,"n32","n23");a(this,"n41","n14");a(this,"n42","n24");a(this,"n43","n34");return this},clone:function(){var a=new THREE.Matrix4;a.n11=this.n11;a.n12=this.n12;a.n13=this.n13;a.n14=this.n14;a.n21=this.n21;a.n22=this.n22;a.n23=this.n23;a.n24=this.n24;a.n31=this.n31;a.n32=this.n32;a.n33=this.n33;a.n34=this.n34;a.n41=this.n41;a.n42=this.n42;a.n43=this.n43;a.n44=this.n44;return a},flatten:function(){var a=this.flat;a[0]=this.n11;
a[1]=this.n21;a[2]=this.n31;a[3]=this.n41;a[4]=this.n12;a[5]=this.n22;a[6]=this.n32;a[7]=this.n42;a[8]=this.n13;a[9]=this.n23;a[10]=this.n33;a[11]=this.n43;a[12]=this.n14;a[13]=this.n24;a[14]=this.n34;a[15]=this.n44;return a},setTranslation:function(a,b,d){this.set(1,0,0,a,0,1,0,b,0,0,1,d,0,0,0,1);return this},setScale:function(a,b,d){this.set(a,0,0,0,0,b,0,0,0,0,d,0,0,0,0,1);return this},setRotX:function(a){var b=Math.cos(a);a=Math.sin(a);this.set(1,0,0,0,0,b,-a,0,0,a,b,0,0,0,0,1);return this},setRotY:function(a){var b=
Math.cos(a);a=Math.sin(a);this.set(b,0,a,0,0,1,0,0,-a,0,b,0,0,0,0,1);return this},setRotZ:function(a){var b=Math.cos(a);a=Math.sin(a);this.set(b,-a,0,0,a,b,0,0,0,0,1,0,0,0,0,1);return this},setRotAxis:function(a,b){var d=Math.cos(b),e=Math.sin(b),g=1-d,h=a.x,j=a.y,c=a.z,k=g*h,m=g*j;this.set(k*h+d,k*j-e*c,k*c+e*j,0,k*j+e*c,m*j+d,m*c-e*h,0,k*c-e*j,m*c+e*h,g*c*c+d,0,0,0,0,1);return this},toString:function(){return"| "+this.n11+" "+this.n12+" "+this.n13+" "+this.n14+" |\n| "+this.n21+" "+this.n22+" "+
this.n23+" "+this.n24+" |\n| "+this.n31+" "+this.n32+" "+this.n33+" "+this.n34+" |\n| "+this.n41+" "+this.n42+" "+this.n43+" "+this.n44+" |"}};THREE.Matrix4.translationMatrix=function(a,b,d){var e=new THREE.Matrix4;e.setTranslation(a,b,d);return e};THREE.Matrix4.scaleMatrix=function(a,b,d){var e=new THREE.Matrix4;e.setScale(a,b,d);return e};THREE.Matrix4.rotationXMatrix=function(a){var b=new THREE.Matrix4;b.setRotX(a);return b};
THREE.Matrix4.rotationYMatrix=function(a){var b=new THREE.Matrix4;b.setRotY(a);return b};THREE.Matrix4.rotationZMatrix=function(a){var b=new THREE.Matrix4;b.setRotZ(a);return b};THREE.Matrix4.rotationAxisAngleMatrix=function(a,b){var d=new THREE.Matrix4;d.setRotAxis(a,b);return d};
THREE.Matrix4.makeInvert=function(a){var b=a.n11,d=a.n12,e=a.n13,g=a.n14,h=a.n21,j=a.n22,c=a.n23,k=a.n24,m=a.n31,p=a.n32,z=a.n33,q=a.n34,v=a.n41,A=a.n42,B=a.n43,H=a.n44,s=new THREE.Matrix4;s.n11=c*q*A-k*z*A+k*p*B-j*q*B-c*p*H+j*z*H;s.n12=g*z*A-e*q*A-g*p*B+d*q*B+e*p*H-d*z*H;s.n13=e*k*A-g*c*A+g*j*B-d*k*B-e*j*H+d*c*H;s.n14=g*c*p-e*k*p-g*j*z+d*k*z+e*j*q-d*c*q;s.n21=k*z*v-c*q*v-k*m*B+h*q*B+c*m*H-h*z*H;s.n22=e*q*v-g*z*v+g*m*B-b*q*B-e*m*H+b*z*H;s.n23=g*c*v-e*k*v-g*h*B+b*k*B+e*h*H-b*c*H;s.n24=e*k*m-g*c*m+
g*h*z-b*k*z-e*h*q+b*c*q;s.n31=j*q*v-k*p*v+k*m*A-h*q*A-j*m*H+h*p*H;s.n32=g*p*v-d*q*v-g*m*A+b*q*A+d*m*H-b*p*H;s.n33=e*k*v-g*j*v+g*h*A-b*k*A-d*h*H+b*j*H;s.n34=g*j*m-d*k*m-g*h*p+b*k*p+d*h*q-b*j*q;s.n41=c*p*v-j*z*v-c*m*A+h*z*A+j*m*B-h*p*B;s.n42=d*z*v-e*p*v+e*m*A-b*z*A-d*m*B+b*p*B;s.n43=e*j*v-d*c*v-e*h*A+b*c*A+d*h*B-b*j*B;s.n44=d*c*m-e*j*m+e*h*p-b*c*p-d*h*z+b*j*z;s.multiplyScalar(1/a.determinant());return s};
THREE.Matrix4.makeInvert3x3=function(a){var b=a.flatten();a=a.m33;var d=a.m,e=b[10]*b[5]-b[6]*b[9],g=-b[10]*b[1]+b[2]*b[9],h=b[6]*b[1]-b[2]*b[5],j=-b[10]*b[4]+b[6]*b[8],c=b[10]*b[0]-b[2]*b[8],k=-b[6]*b[0]+b[2]*b[4],m=b[9]*b[4]-b[5]*b[8],p=-b[9]*b[0]+b[1]*b[8],z=b[5]*b[0]-b[1]*b[4];b=b[0]*e+b[1]*j+b[2]*m;if(b==0)throw"matrix not invertible";b=1/b;d[0]=b*e;d[1]=b*g;d[2]=b*h;d[3]=b*j;d[4]=b*c;d[5]=b*k;d[6]=b*m;d[7]=b*p;d[8]=b*z;return a};
THREE.Matrix4.makeFrustum=function(a,b,d,e,g,h){var j,c,k;j=new THREE.Matrix4;c=2*g/(b-a);k=2*g/(e-d);a=(b+a)/(b-a);d=(e+d)/(e-d);e=-(h+g)/(h-g);g=-2*h*g/(h-g);j.n11=c;j.n12=0;j.n13=a;j.n14=0;j.n21=0;j.n22=k;j.n23=d;j.n24=0;j.n31=0;j.n32=0;j.n33=e;j.n34=g;j.n41=0;j.n42=0;j.n43=-1;j.n44=0;return j};THREE.Matrix4.makePerspective=function(a,b,d,e){var g;a=d*Math.tan(a*Math.PI/360);g=-a;return THREE.Matrix4.makeFrustum(g*b,a*b,g,a,d,e)};
THREE.Matrix4.makeOrtho=function(a,b,d,e,g,h){var j,c,k,m;j=new THREE.Matrix4;c=b-a;k=d-e;m=h-g;a=(b+a)/c;d=(d+e)/k;g=(h+g)/m;j.n11=2/c;j.n12=0;j.n13=0;j.n14=-a;j.n21=0;j.n22=2/k;j.n23=0;j.n24=-d;j.n31=0;j.n32=0;j.n33=-2/m;j.n34=-g;j.n41=0;j.n42=0;j.n43=0;j.n44=1;return j};THREE.Matrix4.__tmpVec1=new THREE.Vector3;THREE.Matrix4.__tmpVec2=new THREE.Vector3;THREE.Matrix4.__tmpVec3=new THREE.Vector3;
THREE.Vertex=function(a,b){this.position=a||new THREE.Vector3;this.positionWorld=new THREE.Vector3;this.positionScreen=new THREE.Vector4;this.normal=b||new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.normalScreen=new THREE.Vector3;this.tangent=new THREE.Vector4;this.__visible=true};THREE.Vertex.prototype={toString:function(){return"THREE.Vertex ( position: "+this.position+", normal: "+this.normal+" )"}};
THREE.Face3=function(a,b,d,e,g){this.a=a;this.b=b;this.c=d;this.centroid=new THREE.Vector3;this.normal=e instanceof THREE.Vector3?e:new THREE.Vector3;this.vertexNormals=e instanceof Array?e:[];this.materials=g instanceof Array?g:[g]};THREE.Face3.prototype={toString:function(){return"THREE.Face3 ( "+this.a+", "+this.b+", "+this.c+" )"}};
THREE.Face4=function(a,b,d,e,g,h){this.a=a;this.b=b;this.c=d;this.d=e;this.centroid=new THREE.Vector3;this.normal=g instanceof THREE.Vector3?g:new THREE.Vector3;this.vertexNormals=g instanceof Array?g:[];this.materials=h instanceof Array?h:[h]};THREE.Face4.prototype={toString:function(){return"THREE.Face4 ( "+this.a+", "+this.b+", "+this.c+" "+this.d+" )"}};THREE.UV=function(a,b){this.u=a||0;this.v=b||0};
THREE.UV.prototype={copy:function(a){this.u=a.u;this.v=a.v},toString:function(){return"THREE.UV ("+this.u+", "+this.v+")"}};THREE.Geometry=function(){this.vertices=[];this.faces=[];this.uvs=[];this.boundingSphere=this.boundingBox=null;this.geometryChunks={};this.hasTangents=false};
THREE.Geometry.prototype={computeCentroids:function(){var a,b,d;a=0;for(b=this.faces.length;a<b;a++){d=this.faces[a];d.centroid.set(0,0,0);if(d instanceof THREE.Face3){d.centroid.addSelf(this.vertices[d.a].position);d.centroid.addSelf(this.vertices[d.b].position);d.centroid.addSelf(this.vertices[d.c].position);d.centroid.divideScalar(3)}else if(d instanceof THREE.Face4){d.centroid.addSelf(this.vertices[d.a].position);d.centroid.addSelf(this.vertices[d.b].position);d.centroid.addSelf(this.vertices[d.c].position);
d.centroid.addSelf(this.vertices[d.d].position);d.centroid.divideScalar(4)}}},computeFaceNormals:function(a){var b,d,e,g,h,j,c=new THREE.Vector3,k=new THREE.Vector3;e=0;for(g=this.vertices.length;e<g;e++){h=this.vertices[e];h.normal.set(0,0,0)}e=0;for(g=this.faces.length;e<g;e++){h=this.faces[e];if(a&&h.vertexNormals.length){c.set(0,0,0);b=0;for(d=h.normal.length;b<d;b++)c.addSelf(h.vertexNormals[b]);c.divideScalar(3)}else{b=this.vertices[h.a];d=this.vertices[h.b];j=this.vertices[h.c];c.sub(j.position,
d.position);k.sub(b.position,d.position);c.crossSelf(k)}c.isZero()||c.normalize();h.normal.copy(c)}},computeVertexNormals:function(){var a,b,d,e;if(this.__tmpVertices==undefined){e=this.__tmpVertices=Array(this.vertices.length);a=0;for(b=this.vertices.length;a<b;a++)e[a]=new THREE.Vector3;a=0;for(b=this.faces.length;a<b;a++){d=this.faces[a];if(d instanceof THREE.Face3)d.vertexNormals=[new THREE.Vector3,new THREE.Vector3,new THREE.Vector3];else if(d instanceof THREE.Face4)d.vertexNormals=[new THREE.Vector3,
new THREE.Vector3,new THREE.Vector3,new THREE.Vector3]}}else{e=this.__tmpVertices;a=0;for(b=this.vertices.length;a<b;a++)e[a].set(0,0,0)}a=0;for(b=this.faces.length;a<b;a++){d=this.faces[a];if(d instanceof THREE.Face3){e[d.a].addSelf(d.normal);e[d.b].addSelf(d.normal);e[d.c].addSelf(d.normal)}else if(d instanceof THREE.Face4){e[d.a].addSelf(d.normal);e[d.b].addSelf(d.normal);e[d.c].addSelf(d.normal);e[d.d].addSelf(d.normal)}}a=0;for(b=this.vertices.length;a<b;a++)e[a].normalize();a=0;for(b=this.faces.length;a<
b;a++){d=this.faces[a];if(d instanceof THREE.Face3){d.vertexNormals[0].copy(e[d.a]);d.vertexNormals[1].copy(e[d.b]);d.vertexNormals[2].copy(e[d.c])}else if(d instanceof THREE.Face4){d.vertexNormals[0].copy(e[d.a]);d.vertexNormals[1].copy(e[d.b]);d.vertexNormals[2].copy(e[d.c]);d.vertexNormals[3].copy(e[d.d])}}},computeTangents:function(){function a(D,w,N,I,T,V,O){h=D.vertices[w].position;j=D.vertices[N].position;c=D.vertices[I].position;k=g[T];m=g[V];p=g[O];z=j.x-h.x;q=c.x-h.x;v=j.y-h.y;A=c.y-h.y;
B=j.z-h.z;H=c.z-h.z;s=m.u-k.u;K=p.u-k.u;o=m.v-k.v;f=p.v-k.v;n=1/(s*f-K*o);x.set((f*z-o*q)*n,(f*v-o*A)*n,(f*B-o*H)*n);L.set((s*q-K*z)*n,(s*A-K*v)*n,(s*H-K*B)*n);y[w].addSelf(x);y[N].addSelf(x);y[I].addSelf(x);r[w].addSelf(L);r[N].addSelf(L);r[I].addSelf(L)}var b,d,e,g,h,j,c,k,m,p,z,q,v,A,B,H,s,K,o,f,n,y=[],r=[],x=new THREE.Vector3,L=new THREE.Vector3,u=new THREE.Vector3,C=new THREE.Vector3,E=new THREE.Vector3;b=0;for(d=this.vertices.length;b<d;b++){y[b]=new THREE.Vector3;r[b]=new THREE.Vector3}b=0;
for(d=this.faces.length;b<d;b++){e=this.faces[b];g=this.uvs[b];if(e instanceof THREE.Face3){a(this,e.a,e.b,e.c,0,1,2);this.vertices[e.a].normal.copy(e.vertexNormals[0]);this.vertices[e.b].normal.copy(e.vertexNormals[1]);this.vertices[e.c].normal.copy(e.vertexNormals[2])}else if(e instanceof THREE.Face4){a(this,e.a,e.b,e.c,0,1,2);a(this,e.a,e.b,e.d,0,1,3);this.vertices[e.a].normal.copy(e.vertexNormals[0]);this.vertices[e.b].normal.copy(e.vertexNormals[1]);this.vertices[e.c].normal.copy(e.vertexNormals[2]);
this.vertices[e.d].normal.copy(e.vertexNormals[3])}}b=0;for(d=this.vertices.length;b<d;b++){E.copy(this.vertices[b].normal);e=y[b];u.copy(e);u.subSelf(E.multiplyScalar(E.dot(e))).normalize();C.cross(this.vertices[b].normal,e);e=C.dot(r[b]);e=e<0?-1:1;this.vertices[b].tangent.set(u.x,u.y,u.z,e)}this.hasTangents=true},computeBoundingBox:function(){var a;if(this.vertices.length>0){this.boundingBox={x:[this.vertices[0].position.x,this.vertices[0].position.x],y:[this.vertices[0].position.y,this.vertices[0].position.y],
z:[this.vertices[0].position.z,this.vertices[0].position.z]};for(var b=1,d=this.vertices.length;b<d;b++){a=this.vertices[b];if(a.position.x<this.boundingBox.x[0])this.boundingBox.x[0]=a.position.x;else if(a.position.x>this.boundingBox.x[1])this.boundingBox.x[1]=a.position.x;if(a.position.y<this.boundingBox.y[0])this.boundingBox.y[0]=a.position.y;else if(a.position.y>this.boundingBox.y[1])this.boundingBox.y[1]=a.position.y;if(a.position.z<this.boundingBox.z[0])this.boundingBox.z[0]=a.position.z;else if(a.position.z>
this.boundingBox.z[1])this.boundingBox.z[1]=a.position.z}}},computeBoundingSphere:function(){for(var a=this.boundingSphere===null?0:this.boundingSphere.radius,b=0,d=this.vertices.length;b<d;b++)a=Math.max(a,this.vertices[b].position.length());this.boundingSphere={radius:a}},sortFacesByMaterial:function(){function a(p){var z=[];b=0;for(d=p.length;b<d;b++)p[b]==undefined?z.push("undefined"):z.push(p[b].toString());return z.join("_")}var b,d,e,g,h,j,c,k,m={};e=0;for(g=this.faces.length;e<g;e++){h=this.faces[e];
j=h.materials;c=a(j);if(m[c]==undefined)m[c]={hash:c,counter:0};k=m[c].hash+"_"+m[c].counter;if(this.geometryChunks[k]==undefined)this.geometryChunks[k]={faces:[],materials:j,vertices:0};h=h instanceof THREE.Face3?3:4;if(this.geometryChunks[k].vertices+h>65535){m[c].counter+=1;k=m[c].hash+"_"+m[c].counter;if(this.geometryChunks[k]==undefined)this.geometryChunks[k]={faces:[],materials:j,vertices:0}}this.geometryChunks[k].faces.push(e);this.geometryChunks[k].vertices+=h}},toString:function(){return"THREE.Geometry ( vertices: "+
this.vertices+", faces: "+this.faces+", uvs: "+this.uvs+" )"}};
THREE.Camera=function(a,b,d,e){this.fov=a;this.aspect=b;this.near=d;this.far=e;this.position=new THREE.Vector3;this.target={position:new THREE.Vector3};this.autoUpdateMatrix=true;this.projectionMatrix=null;this.matrix=new THREE.Matrix4;this.up=new THREE.Vector3(0,1,0);this.tmpVec=new THREE.Vector3;this.translateX=function(g){this.tmpVec.sub(this.target.position,this.position).normalize().multiplyScalar(g);this.tmpVec.crossSelf(this.up);this.position.addSelf(this.tmpVec);this.target.position.addSelf(this.tmpVec)};
this.translateZ=function(g){this.tmpVec.sub(this.target.position,this.position).normalize().multiplyScalar(g);this.position.subSelf(this.tmpVec);this.target.position.subSelf(this.tmpVec)};this.updateMatrix=function(){this.matrix.lookAt(this.position,this.target.position,this.up)};this.updateProjectionMatrix=function(){this.projectionMatrix=THREE.Matrix4.makePerspective(this.fov,this.aspect,this.near,this.far)};this.updateProjectionMatrix()};
THREE.Camera.prototype={toString:function(){return"THREE.Camera ( "+this.position+", "+this.target.position+" )"}};THREE.Light=function(a){this.color=new THREE.Color(a)};THREE.AmbientLight=function(a){THREE.Light.call(this,a)};THREE.AmbientLight.prototype=new THREE.Light;THREE.AmbientLight.prototype.constructor=THREE.AmbientLight;THREE.DirectionalLight=function(a,b){THREE.Light.call(this,a);this.position=new THREE.Vector3(0,1,0);this.intensity=b||1};THREE.DirectionalLight.prototype=new THREE.Light;
THREE.DirectionalLight.prototype.constructor=THREE.DirectionalLight;THREE.PointLight=function(a,b){THREE.Light.call(this,a);this.position=new THREE.Vector3;this.intensity=b||1};THREE.DirectionalLight.prototype=new THREE.Light;THREE.DirectionalLight.prototype.constructor=THREE.PointLight;
THREE.Object3D=function(){this.id=THREE.Object3DCounter.value++;this.position=new THREE.Vector3;this.rotation=new THREE.Vector3;this.scale=new THREE.Vector3(1,1,1);this.matrix=new THREE.Matrix4;this.rotationMatrix=new THREE.Matrix4;this.tmpMatrix=new THREE.Matrix4;this.screen=new THREE.Vector3;this.visible=this.autoUpdateMatrix=true};
THREE.Object3D.prototype={updateMatrix:function(){var a=this.position,b=this.rotation,d=this.scale,e=this.tmpMatrix;this.matrix.setTranslation(a.x,a.y,a.z);this.rotationMatrix.setRotX(b.x);if(b.y!=0){e.setRotY(b.y);this.rotationMatrix.multiplySelf(e)}if(b.z!=0){e.setRotZ(b.z);this.rotationMatrix.multiplySelf(e)}this.matrix.multiplySelf(this.rotationMatrix);if(d.x!=0||d.y!=0||d.z!=0){e.setScale(d.x,d.y,d.z);this.matrix.multiplySelf(e)}}};THREE.Object3DCounter={value:0};
THREE.Particle=function(a){THREE.Object3D.call(this);this.materials=a instanceof Array?a:[a];this.autoUpdateMatrix=false};THREE.Particle.prototype=new THREE.Object3D;THREE.Particle.prototype.constructor=THREE.Particle;THREE.ParticleSystem=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.materials=b instanceof Array?b:[b];this.autoUpdateMatrix=false};THREE.ParticleSystem.prototype=new THREE.Object3D;THREE.ParticleSystem.prototype.constructor=THREE.ParticleSystem;
THREE.Line=function(a,b,d){THREE.Object3D.call(this);this.geometry=a;this.materials=b instanceof Array?b:[b];this.type=d!=undefined?d:THREE.LineStrip};THREE.LineStrip=0;THREE.LinePieces=1;THREE.Line.prototype=new THREE.Object3D;THREE.Line.prototype.constructor=THREE.Line;THREE.Mesh=function(a,b){THREE.Object3D.call(this);this.geometry=a;this.materials=b instanceof Array?b:[b];this.overdraw=this.doubleSided=this.flipSided=false;this.geometry.boundingSphere||this.geometry.computeBoundingSphere()};
THREE.Mesh.prototype=new THREE.Object3D;THREE.Mesh.prototype.constructor=THREE.Mesh;THREE.FlatShading=0;THREE.SmoothShading=1;THREE.NormalBlending=0;THREE.AdditiveBlending=1;THREE.SubtractiveBlending=2;
THREE.LineBasicMaterial=function(a){this.color=new THREE.Color(16777215);this.opacity=1;this.blending=THREE.NormalBlending;this.linewidth=1;this.linejoin=this.linecap="round";if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending;if(a.linewidth!==undefined)this.linewidth=a.linewidth;if(a.linecap!==undefined)this.linecap=a.linecap;if(a.linejoin!==undefined)this.linejoin=a.linejoin}};
THREE.LineBasicMaterial.prototype={toString:function(){return"THREE.LineBasicMaterial (<br/>color: "+this.color+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>linewidth: "+this.linewidth+"<br/>linecap: "+this.linecap+"<br/>linejoin: "+this.linejoin+"<br/>)"}};
THREE.MeshBasicMaterial=function(a){this.id=THREE.MeshBasicMaterialCounter.value++;this.color=new THREE.Color(16777215);this.env_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.fog=true;this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.map!==undefined)this.map=
a.map;if(a.env_map!==undefined)this.env_map=a.env_map;if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.fog!==undefined)this.fog=a.fog;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==
undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshBasicMaterial.prototype={toString:function(){return"THREE.MeshBasicMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>map: "+this.map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+this.wireframe_linecap+
"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>)"}};THREE.MeshBasicMaterialCounter={value:0};
THREE.MeshLambertMaterial=function(a){this.id=THREE.MeshLambertMaterialCounter.value++;this.color=new THREE.Color(16777215);this.env_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.fog=true;this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.map!==undefined)this.map=
a.map;if(a.env_map!==undefined)this.env_map=a.env_map;if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.fog!==undefined)this.fog=a.fog;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==
undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshLambertMaterial.prototype={toString:function(){return"THREE.MeshLambertMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>map: "+this.map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>opacity: "+this.opacity+"<br/>shading: "+this.shading+"<br/>blending: "+this.blending+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+
this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/> )"}};THREE.MeshLambertMaterialCounter={value:0};
THREE.MeshPhongMaterial=function(a){this.id=THREE.MeshPhongMaterialCounter.value++;this.color=new THREE.Color(16777215);this.ambient=new THREE.Color(328965);this.specular=new THREE.Color(1118481);this.shininess=30;this.env_map=this.specular_map=this.map=null;this.combine=THREE.MultiplyOperation;this.reflectivity=1;this.refraction_ratio=0.98;this.fog=true;this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=
this.wireframe_linecap="round";if(a){if(a.color!==undefined)this.color=new THREE.Color(a.color);if(a.ambient!==undefined)this.ambient=new THREE.Color(a.ambient);if(a.specular!==undefined)this.specular=new THREE.Color(a.specular);if(a.shininess!==undefined)this.shininess=a.shininess;if(a.map!==undefined)this.map=a.map;if(a.specular_map!==undefined)this.specular_map=a.specular_map;if(a.env_map!==undefined)this.env_map=a.env_map;if(a.combine!==undefined)this.combine=a.combine;if(a.reflectivity!==undefined)this.reflectivity=
a.reflectivity;if(a.refraction_ratio!==undefined)this.refraction_ratio=a.refraction_ratio;if(a.fog!==undefined)this.fog=a.fog;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==
undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshPhongMaterial.prototype={toString:function(){return"THREE.MeshPhongMaterial (<br/>id: "+this.id+"<br/>color: "+this.color+"<br/>ambient: "+this.ambient+"<br/>specular: "+this.specular+"<br/>shininess: "+this.shininess+"<br/>map: "+this.map+"<br/>specular_map: "+this.specular_map+"<br/>env_map: "+this.env_map+"<br/>combine: "+this.combine+"<br/>reflectivity: "+this.reflectivity+"<br/>refraction_ratio: "+this.refraction_ratio+"<br/>opacity: "+this.opacity+"<br/>shading: "+this.shading+"<br/>wireframe: "+
this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>)"}};THREE.MeshPhongMaterialCounter={value:0};
THREE.MeshDepthMaterial=function(a){this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending}};THREE.MeshDepthMaterial.prototype={toString:function(){return"THREE.MeshDepthMaterial"}};
THREE.MeshNormalMaterial=function(a){this.opacity=1;this.shading=THREE.FlatShading;this.blending=THREE.NormalBlending;if(a){if(a.opacity!==undefined)this.opacity=a.opacity;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending}};THREE.MeshNormalMaterial.prototype={toString:function(){return"THREE.MeshNormalMaterial"}};THREE.MeshFaceMaterial=function(){};THREE.MeshFaceMaterial.prototype={toString:function(){return"THREE.MeshFaceMaterial"}};
THREE.MeshShaderMaterial=function(a){this.id=THREE.MeshShaderMaterialCounter.value++;this.vertex_shader=this.fragment_shader="void main() {}";this.uniforms={};this.opacity=1;this.shading=THREE.SmoothShading;this.blending=THREE.NormalBlending;this.wireframe=false;this.wireframe_linewidth=1;this.wireframe_linejoin=this.wireframe_linecap="round";if(a){if(a.fragment_shader!==undefined)this.fragment_shader=a.fragment_shader;if(a.vertex_shader!==undefined)this.vertex_shader=a.vertex_shader;if(a.uniforms!==
undefined)this.uniforms=a.uniforms;if(a.shading!==undefined)this.shading=a.shading;if(a.blending!==undefined)this.blending=a.blending;if(a.wireframe!==undefined)this.wireframe=a.wireframe;if(a.wireframe_linewidth!==undefined)this.wireframe_linewidth=a.wireframe_linewidth;if(a.wireframe_linecap!==undefined)this.wireframe_linecap=a.wireframe_linecap;if(a.wireframe_linejoin!==undefined)this.wireframe_linejoin=a.wireframe_linejoin}};
THREE.MeshShaderMaterial.prototype={toString:function(){return"THREE.MeshShaderMaterial (<br/>id: "+this.id+"<br/>blending: "+this.blending+"<br/>wireframe: "+this.wireframe+"<br/>wireframe_linewidth: "+this.wireframe_linewidth+"<br/>wireframe_linecap: "+this.wireframe_linecap+"<br/>wireframe_linejoin: "+this.wireframe_linejoin+"<br/>)"}};THREE.MeshShaderMaterialCounter={value:0};
THREE.ParticleBasicMaterial=function(a){this.color=new THREE.Color(16777215);this.map=null;this.opacity=1;this.blending=THREE.NormalBlending;this.offset=new THREE.Vector2;if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.map!==undefined)this.map=a.map;if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending}};
THREE.ParticleBasicMaterial.prototype={toString:function(){return"THREE.ParticleBasicMaterial (<br/>color: "+this.color+"<br/>map: "+this.map+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>)"}};THREE.ParticleCircleMaterial=function(a){this.color=new THREE.Color(16777215);this.opacity=1;this.blending=THREE.NormalBlending;if(a){a.color!==undefined&&this.color.setHex(a.color);if(a.opacity!==undefined)this.opacity=a.opacity;if(a.blending!==undefined)this.blending=a.blending}};
THREE.ParticleCircleMaterial.prototype={toString:function(){return"THREE.ParticleCircleMaterial (<br/>color: "+this.color+"<br/>opacity: "+this.opacity+"<br/>blending: "+this.blending+"<br/>)"}};THREE.ParticleDOMMaterial=function(a){this.domElement=a};THREE.ParticleDOMMaterial.prototype={toString:function(){return"THREE.ParticleDOMMaterial ( domElement: "+this.domElement+" )"}};
THREE.Texture=function(a,b,d,e,g,h){this.image=a;this.mapping=b!==undefined?b:new THREE.UVMapping;this.wrap_s=d!==undefined?d:THREE.ClampToEdgeWrapping;this.wrap_t=e!==undefined?e:THREE.ClampToEdgeWrapping;this.mag_filter=g!==undefined?g:THREE.LinearFilter;this.min_filter=h!==undefined?h:THREE.LinearMipMapLinearFilter};
THREE.Texture.prototype={clone:function(){return new THREE.Texture(this.image,this.mapping,this.wrap_s,this.wrap_t,this.mag_filter,this.min_filter)},toString:function(){return"THREE.Texture (<br/>image: "+this.image+"<br/>wrap_s: "+this.wrap_s+"<br/>wrap_t: "+this.wrap_t+"<br/>mag_filter: "+this.mag_filter+"<br/>min_filter: "+this.min_filter+"<br/>)"}};THREE.MultiplyOperation=0;THREE.MixOperation=1;THREE.RepeatWrapping=0;THREE.ClampToEdgeWrapping=1;THREE.MirroredRepeatWrapping=2;
THREE.NearestFilter=3;THREE.NearestMipMapNearestFilter=4;THREE.NearestMipMapLinearFilter=5;THREE.LinearFilter=6;THREE.LinearMipMapNearestFilter=7;THREE.LinearMipMapLinearFilter=8;THREE.ByteType=9;THREE.UnsignedByteType=10;THREE.ShortType=11;THREE.UnsignedShortType=12;THREE.IntType=13;THREE.UnsignedIntType=14;THREE.FloatType=15;THREE.AlphaFormat=16;THREE.RGBFormat=17;THREE.RGBAFormat=18;THREE.LuminanceFormat=19;THREE.LuminanceAlphaFormat=20;
THREE.RenderTarget=function(a,b,d){this.width=a;this.height=b;d=d||{};this.wrap_s=d.wrap_s!==undefined?d.wrap_s:THREE.ClampToEdgeWrapping;this.wrap_t=d.wrap_t!==undefined?d.wrap_t:THREE.ClampToEdgeWrapping;this.mag_filter=d.mag_filter!==undefined?d.mag_filter:THREE.LinearFilter;this.min_filter=d.min_filter!==undefined?d.min_filter:THREE.LinearMipMapLinearFilter;this.format=d.format!==undefined?d.format:THREE.RGBFormat;this.type=d.type!==undefined?d.type:THREE.UnsignedByteType};
var Uniforms={clone:function(a){var b,d,e,g={};for(b in a){g[b]={};for(d in a[b]){e=a[b][d];g[b][d]=e instanceof THREE.Color||e instanceof THREE.Vector3||e instanceof THREE.Texture?e.clone():e}}return g},merge:function(a){var b,d,e,g={};for(b=0;b<a.length;b++){e=this.clone(a[b]);for(d in e)g[d]=e[d]}return g}};THREE.CubeReflectionMapping=function(){};THREE.CubeRefractionMapping=function(){};THREE.LatitudeReflectionMapping=function(){};THREE.LatitudeRefractionMapping=function(){};
THREE.SphericalReflectionMapping=function(){};THREE.SphericalRefractionMapping=function(){};THREE.UVMapping=function(){};
THREE.Scene=function(){this.objects=[];this.lights=[];this.fog=null;this.addObject=function(a){this.objects.indexOf(a)===-1&&this.objects.push(a)};this.removeObject=function(a){a=this.objects.indexOf(a);a!==-1&&this.objects.splice(a,1)};this.addLight=function(a){this.lights.indexOf(a)===-1&&this.lights.push(a)};this.removeLight=function(a){a=this.lights.indexOf(a);a!==-1&&this.lights.splice(a,1)};this.toString=function(){return"THREE.Scene ( "+this.objects+" )"}};
THREE.Fog=function(a,b,d){this.color=new THREE.Color(a);this.near=b||1;this.far=d||1E3};THREE.FogExp2=function(a,b){this.color=new THREE.Color(a);this.density=b||2.5E-4};
THREE.Projector=function(){function a(r,x){return x.z-r.z}function b(r,x){var L=0,u=1,C=r.z+r.w,E=x.z+x.w,D=-r.z+r.w,w=-x.z+x.w;if(C>=0&&E>=0&&D>=0&&w>=0)return true;else if(C<0&&E<0||D<0&&w<0)return false;else{if(C<0)L=Math.max(L,C/(C-E));else if(E<0)u=Math.min(u,C/(C-E));if(D<0)L=Math.max(L,D/(D-w));else if(w<0)u=Math.min(u,D/(D-w));if(u<L)return false;else{r.lerpSelf(x,L);x.lerpSelf(r,1-u);return true}}}var d,e,g=[],h,j,c,k=[],m,p,z=[],q,v,A=[],B=new THREE.Vector4,H=new THREE.Vector4,s=new THREE.Matrix4,
K=new THREE.Matrix4,o=[],f=new THREE.Vector4,n=new THREE.Vector4,y;this.projectObjects=function(r,x,L){var u=[],C,E;e=0;s.multiply(x.projectionMatrix,x.matrix);o[0]=new THREE.Vector4(s.n41-s.n11,s.n42-s.n12,s.n43-s.n13,s.n44-s.n14);o[1]=new THREE.Vector4(s.n41+s.n11,s.n42+s.n12,s.n43+s.n13,s.n44+s.n14);o[2]=new THREE.Vector4(s.n41+s.n21,s.n42+s.n22,s.n43+s.n23,s.n44+s.n24);o[3]=new THREE.Vector4(s.n41-s.n21,s.n42-s.n22,s.n43-s.n23,s.n44-s.n24);o[4]=new THREE.Vector4(s.n41-s.n31,s.n42-s.n32,s.n43-
s.n33,s.n44-s.n34);o[5]=new THREE.Vector4(s.n41+s.n31,s.n42+s.n32,s.n43+s.n33,s.n44+s.n34);x=0;for(C=o.length;x<C;x++){E=o[x];E.divideScalar(Math.sqrt(E.x*E.x+E.y*E.y+E.z*E.z))}C=r.objects;r=0;for(x=C.length;r<x;r++){E=C[r];var D;if(!(D=!E.visible)){if(D=E instanceof THREE.Mesh){a:{D=void 0;for(var w=E.position,N=-E.geometry.boundingSphere.radius*Math.max(E.scale.x,Math.max(E.scale.y,E.scale.z)),I=0;I<6;I++){D=o[I].x*w.x+o[I].y*w.y+o[I].z*w.z+o[I].w;if(D<=N){D=false;break a}}D=true}D=!D}D=D}if(!D){d=
g[e]=g[e]||new THREE.RenderableObject;B.copy(E.position);s.multiplyVector3(B);d.object=E;d.z=B.z;u.push(d);e++}}L&&u.sort(a);return u};this.projectScene=function(r,x,L){var u=[],C=x.near,E=x.far,D,w,N,I,T,V,O,ca,W,Q,S,aa,X,F,R,U;c=p=v=0;x.autoUpdateMatrix&&x.updateMatrix();s.multiply(x.projectionMatrix,x.matrix);V=this.projectObjects(r,x,true);r=0;for(D=V.length;r<D;r++){O=V[r].object;if(O.visible){O.autoUpdateMatrix&&O.updateMatrix();ca=O.matrix;W=O.rotationMatrix;Q=O.materials;S=O.overdraw;if(O instanceof
THREE.Mesh){aa=O.geometry;X=aa.vertices;w=0;for(N=X.length;w<N;w++){F=X[w];F.positionWorld.copy(F.position);ca.multiplyVector3(F.positionWorld);I=F.positionScreen;I.copy(F.positionWorld);s.multiplyVector4(I);I.x/=I.w;I.y/=I.w;F.__visible=I.z>C&&I.z<E}aa=aa.faces;w=0;for(N=aa.length;w<N;w++){F=aa[w];if(F instanceof THREE.Face3){I=X[F.a];T=X[F.b];R=X[F.c];if(I.__visible&&T.__visible&&R.__visible)if(O.doubleSided||O.flipSided!=(R.positionScreen.x-I.positionScreen.x)*(T.positionScreen.y-I.positionScreen.y)-
(R.positionScreen.y-I.positionScreen.y)*(T.positionScreen.x-I.positionScreen.x)<0){h=k[c]=k[c]||new THREE.RenderableFace3;h.v1.positionWorld.copy(I.positionWorld);h.v2.positionWorld.copy(T.positionWorld);h.v3.positionWorld.copy(R.positionWorld);h.v1.positionScreen.copy(I.positionScreen);h.v2.positionScreen.copy(T.positionScreen);h.v3.positionScreen.copy(R.positionScreen);h.normalWorld.copy(F.normal);W.multiplyVector3(h.normalWorld);h.centroidWorld.copy(F.centroid);ca.multiplyVector3(h.centroidWorld);
h.centroidScreen.copy(h.centroidWorld);s.multiplyVector3(h.centroidScreen);R=F.vertexNormals;y=h.vertexNormalsWorld;I=0;for(T=R.length;I<T;I++){U=y[I]=y[I]||new THREE.Vector3;U.copy(R[I]);W.multiplyVector3(U)}h.z=h.centroidScreen.z;h.meshMaterials=Q;h.faceMaterials=F.materials;h.overdraw=S;if(O.geometry.uvs[w]){h.uvs[0]=O.geometry.uvs[w][0];h.uvs[1]=O.geometry.uvs[w][1];h.uvs[2]=O.geometry.uvs[w][2]}u.push(h);c++}}else if(F instanceof THREE.Face4){I=X[F.a];T=X[F.b];R=X[F.c];U=X[F.d];if(I.__visible&&
T.__visible&&R.__visible&&U.__visible)if(O.doubleSided||O.flipSided!=((U.positionScreen.x-I.positionScreen.x)*(T.positionScreen.y-I.positionScreen.y)-(U.positionScreen.y-I.positionScreen.y)*(T.positionScreen.x-I.positionScreen.x)<0||(T.positionScreen.x-R.positionScreen.x)*(U.positionScreen.y-R.positionScreen.y)-(T.positionScreen.y-R.positionScreen.y)*(U.positionScreen.x-R.positionScreen.x)<0)){h=k[c]=k[c]||new THREE.RenderableFace3;h.v1.positionWorld.copy(I.positionWorld);h.v2.positionWorld.copy(T.positionWorld);
h.v3.positionWorld.copy(U.positionWorld);h.v1.positionScreen.copy(I.positionScreen);h.v2.positionScreen.copy(T.positionScreen);h.v3.positionScreen.copy(U.positionScreen);h.normalWorld.copy(F.normal);W.multiplyVector3(h.normalWorld);h.centroidWorld.copy(F.centroid);ca.multiplyVector3(h.centroidWorld);h.centroidScreen.copy(h.centroidWorld);s.multiplyVector3(h.centroidScreen);h.z=h.centroidScreen.z;h.meshMaterials=Q;h.faceMaterials=F.materials;h.overdraw=S;if(O.geometry.uvs[w]){h.uvs[0]=O.geometry.uvs[w][0];
h.uvs[1]=O.geometry.uvs[w][1];h.uvs[2]=O.geometry.uvs[w][3]}u.push(h);c++;j=k[c]=k[c]||new THREE.RenderableFace3;j.v1.positionWorld.copy(T.positionWorld);j.v2.positionWorld.copy(R.positionWorld);j.v3.positionWorld.copy(U.positionWorld);j.v1.positionScreen.copy(T.positionScreen);j.v2.positionScreen.copy(R.positionScreen);j.v3.positionScreen.copy(U.positionScreen);j.normalWorld.copy(h.normalWorld);j.centroidWorld.copy(h.centroidWorld);j.centroidScreen.copy(h.centroidScreen);j.z=j.centroidScreen.z;j.meshMaterials=
Q;j.faceMaterials=F.materials;j.overdraw=S;if(O.geometry.uvs[w]){j.uvs[0]=O.geometry.uvs[w][1];j.uvs[1]=O.geometry.uvs[w][2];j.uvs[2]=O.geometry.uvs[w][3]}u.push(j);c++}}}}else if(O instanceof THREE.Line){K.multiply(s,ca);X=O.geometry.vertices;F=X[0];F.positionScreen.copy(F.position);K.multiplyVector4(F.positionScreen);w=1;for(N=X.length;w<N;w++){I=X[w];I.positionScreen.copy(I.position);K.multiplyVector4(I.positionScreen);T=X[w-1];f.copy(I.positionScreen);n.copy(T.positionScreen);if(b(f,n)){f.multiplyScalar(1/
f.w);n.multiplyScalar(1/n.w);m=z[p]=z[p]||new THREE.RenderableLine;m.v1.positionScreen.copy(f);m.v2.positionScreen.copy(n);m.z=Math.max(f.z,n.z);m.materials=O.materials;u.push(m);p++}}}else if(O instanceof THREE.Particle){H.set(O.position.x,O.position.y,O.position.z,1);s.multiplyVector4(H);H.z/=H.w;if(H.z>0&&H.z<1){q=A[v]=A[v]||new THREE.RenderableParticle;q.x=H.x/H.w;q.y=H.y/H.w;q.z=H.z;q.rotation=O.rotation.z;q.scale.x=O.scale.x*Math.abs(q.x-(H.x+x.projectionMatrix.n11)/(H.w+x.projectionMatrix.n14));
q.scale.y=O.scale.y*Math.abs(q.y-(H.y+x.projectionMatrix.n22)/(H.w+x.projectionMatrix.n24));q.materials=O.materials;u.push(q);v++}}}}L&&u.sort(a);return u};this.unprojectVector=function(r,x){var L=THREE.Matrix4.makeInvert(x.matrix);L.multiplySelf(THREE.Matrix4.makeInvert(x.projectionMatrix));L.multiplyVector3(r);return r}};
THREE.DOMRenderer=function(){THREE.Renderer.call(this);var a=null,b=new THREE.Projector,d,e,g,h;this.domElement=document.createElement("div");this.setSize=function(j,c){d=j;e=c;g=d/2;h=e/2};this.render=function(j,c){var k,m,p,z,q,v,A,B;a=b.projectScene(j,c);k=0;for(m=a.length;k<m;k++){q=a[k];if(q instanceof THREE.RenderableParticle){A=q.x*g+g;B=q.y*h+h;p=0;for(z=q.material.length;p<z;p++){v=q.material[p];if(v instanceof THREE.ParticleDOMMaterial){v=v.domElement;v.style.left=A+"px";v.style.top=B+"px"}}}}}};
THREE.CanvasRenderer=function(){function a(la){if(q!=la)m.globalAlpha=q=la}function b(la){if(v!=la){switch(la){case THREE.NormalBlending:m.globalCompositeOperation="source-over";break;case THREE.AdditiveBlending:m.globalCompositeOperation="lighter";break;case THREE.SubtractiveBlending:m.globalCompositeOperation="darker"}v=la}}var d=null,e=new THREE.Projector,g=document.createElement("canvas"),h,j,c,k,m=g.getContext("2d"),p=null,z=null,q=1,v=0,A=null,B=null,H=1,s,K,o,f,n,y,r,x,L,u=new THREE.Color,
C=new THREE.Color,E=new THREE.Color,D=new THREE.Color,w=new THREE.Color,N,I,T,V,O,ca,W,Q,S,aa=new THREE.Rectangle,X=new THREE.Rectangle,F=new THREE.Rectangle,R=false,U=new THREE.Color,ha=new THREE.Color,ga=new THREE.Color,t=new THREE.Color,J=Math.PI*2,G=new THREE.Vector3,Y,ba,fa,ia,pa,ra,xa=16;Y=document.createElement("canvas");Y.width=Y.height=2;ba=Y.getContext("2d");ba.fillStyle="rgba(0,0,0,1)";ba.fillRect(0,0,2,2);fa=ba.getImageData(0,0,2,2);ia=fa.data;pa=document.createElement("canvas");pa.width=
pa.height=xa;ra=pa.getContext("2d");ra.translate(-xa/2,-xa/2);ra.scale(xa,xa);xa--;this.domElement=g;this.sortElements=this.sortObjects=this.autoClear=true;this.setSize=function(la,va){h=la;j=va;c=h/2;k=j/2;g.width=h;g.height=j;aa.set(-c,-k,c,k);q=1;v=0;B=A=null;H=1};this.setClearColor=function(la,va){p=la!==null?new THREE.Color(la):null;z=va;X.set(-c,-k,c,k);m.setTransform(1,0,0,-1,c,k);this.clear()};this.clear=function(){if(!X.isEmpty()){X.inflate(1);X.minSelf(aa);if(p!==null){b(THREE.NormalBlending);
a(1);m.fillStyle="rgba("+Math.floor(p.r*255)+","+Math.floor(p.g*255)+","+Math.floor(p.b*255)+","+z+")";m.fillRect(X.getX(),X.getY(),X.getWidth(),X.getHeight())}else m.clearRect(X.getX(),X.getY(),X.getWidth(),X.getHeight());X.empty()}};this.render=function(la,va){function Oa(M){var da,$,P,Z=M.lights;ha.setRGB(0,0,0);ga.setRGB(0,0,0);t.setRGB(0,0,0);M=0;for(da=Z.length;M<da;M++){$=Z[M];P=$.color;if($ instanceof THREE.AmbientLight){ha.r+=P.r;ha.g+=P.g;ha.b+=P.b}else if($ instanceof THREE.DirectionalLight){ga.r+=
P.r;ga.g+=P.g;ga.b+=P.b}else if($ instanceof THREE.PointLight){t.r+=P.r;t.g+=P.g;t.b+=P.b}}}function Ca(M,da,$,P){var Z,ea,ka,ma,na=M.lights;M=0;for(Z=na.length;M<Z;M++){ea=na[M];ka=ea.color;ma=ea.intensity;if(ea instanceof THREE.DirectionalLight){ea=$.dot(ea.position)*ma;if(ea>0){P.r+=ka.r*ea;P.g+=ka.g*ea;P.b+=ka.b*ea}}else if(ea instanceof THREE.PointLight){G.sub(ea.position,da);G.normalize();ea=$.dot(G)*ma;if(ea>0){P.r+=ka.r*ea;P.g+=ka.g*ea;P.b+=ka.b*ea}}}}function Pa(M,da,$){if($.opacity!=0){a($.opacity);
b($.blending);var P,Z,ea,ka,ma,na;if($ instanceof THREE.ParticleBasicMaterial){if($.map){ka=$.map;ma=ka.width>>1;na=ka.height>>1;Z=da.scale.x*c;ea=da.scale.y*k;$=Z*ma;P=ea*na;F.set(M.x-$,M.y-P,M.x+$,M.y+P);if(aa.instersects(F)){m.save();m.translate(M.x,M.y);m.rotate(-da.rotation);m.scale(Z,-ea);m.translate(-ma,-na);m.drawImage(ka,0,0);m.restore()}}}else if($ instanceof THREE.ParticleCircleMaterial){if(R){U.r=ha.r+ga.r+t.r;U.g=ha.g+ga.g+t.g;U.b=ha.b+ga.b+t.b;u.r=$.color.r*U.r;u.g=$.color.g*U.g;u.b=
$.color.b*U.b;u.updateStyleString()}else u.__styleString=$.color.__styleString;$=da.scale.x*c;P=da.scale.y*k;F.set(M.x-$,M.y-P,M.x+$,M.y+P);if(aa.instersects(F)){Z=u.__styleString;if(B!=Z)m.fillStyle=B=Z;m.save();m.translate(M.x,M.y);m.rotate(-da.rotation);m.scale($,P);m.beginPath();m.arc(0,0,1,0,J,true);m.closePath();m.fill();m.restore()}}}}function Qa(M,da,$,P){if(P.opacity!=0){a(P.opacity);b(P.blending);m.beginPath();m.moveTo(M.positionScreen.x,M.positionScreen.y);m.lineTo(da.positionScreen.x,
da.positionScreen.y);m.closePath();if(P instanceof THREE.LineBasicMaterial){u.__styleString=P.color.__styleString;M=P.linewidth;if(H!=M)m.lineWidth=H=M;M=u.__styleString;if(A!=M)m.strokeStyle=A=M;m.stroke();F.inflate(P.linewidth*2)}}}function Ka(M,da,$,P,Z,ea){if(Z.opacity!=0){a(Z.opacity);b(Z.blending);f=M.positionScreen.x;n=M.positionScreen.y;y=da.positionScreen.x;r=da.positionScreen.y;x=$.positionScreen.x;L=$.positionScreen.y;m.beginPath();m.moveTo(f,n);m.lineTo(y,r);m.lineTo(x,L);m.lineTo(f,n);
m.closePath();if(Z instanceof THREE.MeshBasicMaterial)if(Z.map)Z.map.image.loaded&&Z.map.mapping instanceof THREE.UVMapping&&za(f,n,y,r,x,L,Z.map.image,P.uvs[0].u,P.uvs[0].v,P.uvs[1].u,P.uvs[1].v,P.uvs[2].u,P.uvs[2].v);else if(Z.env_map){if(Z.env_map.image.loaded)if(Z.env_map.mapping instanceof THREE.SphericalReflectionMapping){M=va.matrix;G.copy(P.vertexNormalsWorld[0]);V=(G.x*M.n11+G.y*M.n12+G.z*M.n13)*0.5+0.5;O=-(G.x*M.n21+G.y*M.n22+G.z*M.n23)*0.5+0.5;G.copy(P.vertexNormalsWorld[1]);ca=(G.x*M.n11+
G.y*M.n12+G.z*M.n13)*0.5+0.5;W=-(G.x*M.n21+G.y*M.n22+G.z*M.n23)*0.5+0.5;G.copy(P.vertexNormalsWorld[2]);Q=(G.x*M.n11+G.y*M.n12+G.z*M.n13)*0.5+0.5;S=-(G.x*M.n21+G.y*M.n22+G.z*M.n23)*0.5+0.5;za(f,n,y,r,x,L,Z.env_map.image,V,O,ca,W,Q,S)}}else Z.wireframe?Da(Z.color.__styleString,Z.wireframe_linewidth):Ea(Z.color.__styleString);else if(Z instanceof THREE.MeshLambertMaterial){if(Z.map&&!Z.wireframe){Z.map.mapping instanceof THREE.UVMapping&&za(f,n,y,r,x,L,Z.map.image,P.uvs[0].u,P.uvs[0].v,P.uvs[1].u,P.uvs[1].v,
P.uvs[2].u,P.uvs[2].v);b(THREE.SubtractiveBlending)}if(R)if(!Z.wireframe&&Z.shading==THREE.SmoothShading&&P.vertexNormalsWorld.length==3){C.r=E.r=D.r=ha.r;C.g=E.g=D.g=ha.g;C.b=E.b=D.b=ha.b;Ca(ea,P.v1.positionWorld,P.vertexNormalsWorld[0],C);Ca(ea,P.v2.positionWorld,P.vertexNormalsWorld[1],E);Ca(ea,P.v3.positionWorld,P.vertexNormalsWorld[2],D);w.r=(E.r+D.r)*0.5;w.g=(E.g+D.g)*0.5;w.b=(E.b+D.b)*0.5;T=La(C,E,D,w);za(f,n,y,r,x,L,T,0,0,1,0,0,1)}else{U.r=ha.r;U.g=ha.g;U.b=ha.b;Ca(ea,P.centroidWorld,P.normalWorld,
U);u.r=Z.color.r*U.r;u.g=Z.color.g*U.g;u.b=Z.color.b*U.b;u.updateStyleString();Z.wireframe?Da(u.__styleString,Z.wireframe_linewidth):Ea(u.__styleString)}else Z.wireframe?Da(Z.color.__styleString,Z.wireframe_linewidth):Ea(Z.color.__styleString)}else if(Z instanceof THREE.MeshDepthMaterial){N=va.near;I=va.far;C.r=C.g=C.b=1-Ga(M.positionScreen.z,N,I);E.r=E.g=E.b=1-Ga(da.positionScreen.z,N,I);D.r=D.g=D.b=1-Ga($.positionScreen.z,N,I);w.r=(E.r+D.r)*0.5;w.g=(E.g+D.g)*0.5;w.b=(E.b+D.b)*0.5;T=La(C,E,D,w);
za(f,n,y,r,x,L,T,0,0,1,0,0,1)}else if(Z instanceof THREE.MeshNormalMaterial){u.r=Ha(P.normalWorld.x);u.g=Ha(P.normalWorld.y);u.b=Ha(P.normalWorld.z);u.updateStyleString();Z.wireframe?Da(u.__styleString,Z.wireframe_linewidth):Ea(u.__styleString)}}}function Da(M,da){if(A!=M)m.strokeStyle=A=M;if(H!=da)m.lineWidth=H=da;m.stroke();F.inflate(da*2)}function Ea(M){if(B!=M)m.fillStyle=B=M;m.fill()}function za(M,da,$,P,Z,ea,ka,ma,na,sa,oa,ta,Aa){var wa,ua;wa=ka.width-1;ua=ka.height-1;ma*=wa;na*=ua;sa*=wa;oa*=
ua;ta*=wa;Aa*=ua;$-=M;P-=da;Z-=M;ea-=da;sa-=ma;oa-=na;ta-=ma;Aa-=na;ua=1/(sa*Aa-ta*oa);wa=(Aa*$-oa*Z)*ua;oa=(Aa*P-oa*ea)*ua;$=(sa*Z-ta*$)*ua;P=(sa*ea-ta*P)*ua;M=M-wa*ma-$*na;da=da-oa*ma-P*na;m.save();m.transform(wa,oa,$,P,M,da);m.clip();m.drawImage(ka,0,0);m.restore()}function La(M,da,$,P){var Z=~~(M.r*255),ea=~~(M.g*255);M=~~(M.b*255);var ka=~~(da.r*255),ma=~~(da.g*255);da=~~(da.b*255);var na=~~($.r*255),sa=~~($.g*255);$=~~($.b*255);var oa=~~(P.r*255),ta=~~(P.g*255);P=~~(P.b*255);ia[0]=Z<0?0:Z>255?
255:Z;ia[1]=ea<0?0:ea>255?255:ea;ia[2]=M<0?0:M>255?255:M;ia[4]=ka<0?0:ka>255?255:ka;ia[5]=ma<0?0:ma>255?255:ma;ia[6]=da<0?0:da>255?255:da;ia[8]=na<0?0:na>255?255:na;ia[9]=sa<0?0:sa>255?255:sa;ia[10]=$<0?0:$>255?255:$;ia[12]=oa<0?0:oa>255?255:oa;ia[13]=ta<0?0:ta>255?255:ta;ia[14]=P<0?0:P>255?255:P;ba.putImageData(fa,0,0);ra.drawImage(Y,0,0);return pa}function Ga(M,da,$){M=(M-da)/($-da);return M*M*(3-2*M)}function Ha(M){M=(M+1)*0.5;return M<0?0:M>1?1:M}function Ia(M,da){var $=da.x-M.x,P=da.y-M.y,Z=
1/Math.sqrt($*$+P*P);$*=Z;P*=Z;da.x+=$;da.y+=P;M.x-=$;M.y-=P}var Fa,Ma,ja,qa,ya,Ja,Na,Ba;m.setTransform(1,0,0,-1,c,k);this.autoClear&&this.clear();d=e.projectScene(la,va,this.sortElements);(R=la.lights.length>0)&&Oa(la);Fa=0;for(Ma=d.length;Fa<Ma;Fa++){ja=d[Fa];F.empty();if(ja instanceof THREE.RenderableParticle){s=ja;s.x*=c;s.y*=k;qa=0;for(ya=ja.materials.length;qa<ya;qa++)Pa(s,ja,ja.materials[qa],la)}else if(ja instanceof THREE.RenderableLine){s=ja.v1;K=ja.v2;s.positionScreen.x*=c;s.positionScreen.y*=
k;K.positionScreen.x*=c;K.positionScreen.y*=k;F.addPoint(s.positionScreen.x,s.positionScreen.y);F.addPoint(K.positionScreen.x,K.positionScreen.y);if(aa.instersects(F)){qa=0;for(ya=ja.materials.length;qa<ya;)Qa(s,K,ja,ja.materials[qa++],la)}}else if(ja instanceof THREE.RenderableFace3){s=ja.v1;K=ja.v2;o=ja.v3;s.positionScreen.x*=c;s.positionScreen.y*=k;K.positionScreen.x*=c;K.positionScreen.y*=k;o.positionScreen.x*=c;o.positionScreen.y*=k;if(ja.overdraw){Ia(s.positionScreen,K.positionScreen);Ia(K.positionScreen,
o.positionScreen);Ia(o.positionScreen,s.positionScreen)}F.add3Points(s.positionScreen.x,s.positionScreen.y,K.positionScreen.x,K.positionScreen.y,o.positionScreen.x,o.positionScreen.y);if(aa.instersects(F)){qa=0;for(ya=ja.meshMaterials.length;qa<ya;){Ba=ja.meshMaterials[qa++];if(Ba instanceof THREE.MeshFaceMaterial){Ja=0;for(Na=ja.faceMaterials.length;Ja<Na;)(Ba=ja.faceMaterials[Ja++])&&Ka(s,K,o,ja,Ba,la)}else Ka(s,K,o,ja,Ba,la)}}}X.addRectangle(F)}m.setTransform(1,0,0,1,0,0)}};
THREE.SVGRenderer=function(){function a(V,O,ca){var W,Q,S,aa;W=0;for(Q=V.lights.length;W<Q;W++){S=V.lights[W];if(S instanceof THREE.DirectionalLight){aa=O.normalWorld.dot(S.position)*S.intensity;if(aa>0){ca.r+=S.color.r*aa;ca.g+=S.color.g*aa;ca.b+=S.color.b*aa}}else if(S instanceof THREE.PointLight){L.sub(S.position,O.centroidWorld);L.normalize();aa=O.normalWorld.dot(L)*S.intensity;if(aa>0){ca.r+=S.color.r*aa;ca.g+=S.color.g*aa;ca.b+=S.color.b*aa}}}}function b(V,O,ca,W,Q,S){D=e(w++);D.setAttribute("d",
"M "+V.positionScreen.x+" "+V.positionScreen.y+" L "+O.positionScreen.x+" "+O.positionScreen.y+" L "+ca.positionScreen.x+","+ca.positionScreen.y+"z");if(Q instanceof THREE.MeshBasicMaterial)o.__styleString=Q.color.__styleString;else if(Q instanceof THREE.MeshLambertMaterial)if(K){f.r=n.r;f.g=n.g;f.b=n.b;a(S,W,f);o.r=Q.color.r*f.r;o.g=Q.color.g*f.g;o.b=Q.color.b*f.b;o.updateStyleString()}else o.__styleString=Q.color.__styleString;else if(Q instanceof THREE.MeshDepthMaterial){x=1-Q.__2near/(Q.__farPlusNear-
W.z*Q.__farMinusNear);o.setRGB(x,x,x)}else Q instanceof THREE.MeshNormalMaterial&&o.setRGB(g(W.normalWorld.x),g(W.normalWorld.y),g(W.normalWorld.z));Q.wireframe?D.setAttribute("style","fill: none; stroke: "+o.__styleString+"; stroke-width: "+Q.wireframe_linewidth+"; stroke-opacity: "+Q.opacity+"; stroke-linecap: "+Q.wireframe_linecap+"; stroke-linejoin: "+Q.wireframe_linejoin):D.setAttribute("style","fill: "+o.__styleString+"; fill-opacity: "+Q.opacity);c.appendChild(D)}function d(V,O,ca,W,Q,S,aa){D=
e(w++);D.setAttribute("d","M "+V.positionScreen.x+" "+V.positionScreen.y+" L "+O.positionScreen.x+" "+O.positionScreen.y+" L "+ca.positionScreen.x+","+ca.positionScreen.y+" L "+W.positionScreen.x+","+W.positionScreen.y+"z");if(S instanceof THREE.MeshBasicMaterial)o.__styleString=S.color.__styleString;else if(S instanceof THREE.MeshLambertMaterial)if(K){f.r=n.r;f.g=n.g;f.b=n.b;a(aa,Q,f);o.r=S.color.r*f.r;o.g=S.color.g*f.g;o.b=S.color.b*f.b;o.updateStyleString()}else o.__styleString=S.color.__styleString;
else if(S instanceof THREE.MeshDepthMaterial){x=1-S.__2near/(S.__farPlusNear-Q.z*S.__farMinusNear);o.setRGB(x,x,x)}else S instanceof THREE.MeshNormalMaterial&&o.setRGB(g(Q.normalWorld.x),g(Q.normalWorld.y),g(Q.normalWorld.z));S.wireframe?D.setAttribute("style","fill: none; stroke: "+o.__styleString+"; stroke-width: "+S.wireframe_linewidth+"; stroke-opacity: "+S.opacity+"; stroke-linecap: "+S.wireframe_linecap+"; stroke-linejoin: "+S.wireframe_linejoin):D.setAttribute("style","fill: "+o.__styleString+
"; fill-opacity: "+S.opacity);c.appendChild(D)}function e(V){if(u[V]==null){u[V]=document.createElementNS("http://www.w3.org/2000/svg","path");T==0&&u[V].setAttribute("shape-rendering","crispEdges");return u[V]}return u[V]}function g(V){return V<0?Math.min((1+V)*0.5,0.5):0.5+Math.min(V*0.5,0.5)}var h=null,j=new THREE.Projector,c=document.createElementNS("http://www.w3.org/2000/svg","svg"),k,m,p,z,q,v,A,B,H=new THREE.Rectangle,s=new THREE.Rectangle,K=false,o=new THREE.Color(16777215),f=new THREE.Color(16777215),
n=new THREE.Color(0),y=new THREE.Color(0),r=new THREE.Color(0),x,L=new THREE.Vector3,u=[],C=[],E=[],D,w,N,I,T=1;this.domElement=c;this.sortElements=this.sortObjects=this.autoClear=true;this.setQuality=function(V){switch(V){case "high":T=1;break;case "low":T=0}};this.setSize=function(V,O){k=V;m=O;p=k/2;z=m/2;c.setAttribute("viewBox",-p+" "+-z+" "+k+" "+m);c.setAttribute("width",k);c.setAttribute("height",m);H.set(-p,-z,p,z)};this.clear=function(){for(;c.childNodes.length>0;)c.removeChild(c.childNodes[0])};
this.render=function(V,O){var ca,W,Q,S,aa,X,F,R;this.autoClear&&this.clear();h=j.projectScene(V,O,this.sortElements);I=N=w=0;if(K=V.lights.length>0){F=V.lights;n.setRGB(0,0,0);y.setRGB(0,0,0);r.setRGB(0,0,0);ca=0;for(W=F.length;ca<W;ca++){Q=F[ca];S=Q.color;if(Q instanceof THREE.AmbientLight){n.r+=S.r;n.g+=S.g;n.b+=S.b}else if(Q instanceof THREE.DirectionalLight){y.r+=S.r;y.g+=S.g;y.b+=S.b}else if(Q instanceof THREE.PointLight){r.r+=S.r;r.g+=S.g;r.b+=S.b}}}ca=0;for(W=h.length;ca<W;ca++){F=h[ca];s.empty();
if(F instanceof THREE.RenderableParticle){q=F;q.x*=p;q.y*=-z;Q=0;for(S=F.materials.length;Q<S;Q++)if(R=F.materials[Q]){aa=q;X=F;R=R;var U=N++;if(C[U]==null){C[U]=document.createElementNS("http://www.w3.org/2000/svg","circle");T==0&&C[U].setAttribute("shape-rendering","crispEdges")}D=C[U];D.setAttribute("cx",aa.x);D.setAttribute("cy",aa.y);D.setAttribute("r",X.scale.x*p);if(R instanceof THREE.ParticleCircleMaterial){if(K){f.r=n.r+y.r+r.r;f.g=n.g+y.g+r.g;f.b=n.b+y.b+r.b;o.r=R.color.r*f.r;o.g=R.color.g*
f.g;o.b=R.color.b*f.b;o.updateStyleString()}else o=R.color;D.setAttribute("style","fill: "+o.__styleString)}c.appendChild(D)}}else if(F instanceof THREE.RenderableLine){q=F.v1;v=F.v2;q.positionScreen.x*=p;q.positionScreen.y*=-z;v.positionScreen.x*=p;v.positionScreen.y*=-z;s.addPoint(q.positionScreen.x,q.positionScreen.y);s.addPoint(v.positionScreen.x,v.positionScreen.y);if(H.instersects(s)){Q=0;for(S=F.materials.length;Q<S;)if(R=F.materials[Q++]){aa=q;X=v;R=R;U=I++;if(E[U]==null){E[U]=document.createElementNS("http://www.w3.org/2000/svg",
"line");T==0&&E[U].setAttribute("shape-rendering","crispEdges")}D=E[U];D.setAttribute("x1",aa.positionScreen.x);D.setAttribute("y1",aa.positionScreen.y);D.setAttribute("x2",X.positionScreen.x);D.setAttribute("y2",X.positionScreen.y);if(R instanceof THREE.LineBasicMaterial){o.__styleString=R.color.__styleString;D.setAttribute("style","fill: none; stroke: "+o.__styleString+"; stroke-width: "+R.linewidth+"; stroke-opacity: "+R.opacity+"; stroke-linecap: "+R.linecap+"; stroke-linejoin: "+R.linejoin);
c.appendChild(D)}}}}else if(F instanceof THREE.RenderableFace3){q=F.v1;v=F.v2;A=F.v3;q.positionScreen.x*=p;q.positionScreen.y*=-z;v.positionScreen.x*=p;v.positionScreen.y*=-z;A.positionScreen.x*=p;A.positionScreen.y*=-z;s.addPoint(q.positionScreen.x,q.positionScreen.y);s.addPoint(v.positionScreen.x,v.positionScreen.y);s.addPoint(A.positionScreen.x,A.positionScreen.y);if(H.instersects(s)){Q=0;for(S=F.meshMaterials.length;Q<S;){R=F.meshMaterials[Q++];if(R instanceof THREE.MeshFaceMaterial){aa=0;for(X=
F.faceMaterials.length;aa<X;)(R=F.faceMaterials[aa++])&&b(q,v,A,F,R,V)}else R&&b(q,v,A,F,R,V)}}}else if(F instanceof THREE.RenderableFace4){q=F.v1;v=F.v2;A=F.v3;B=F.v4;q.positionScreen.x*=p;q.positionScreen.y*=-z;v.positionScreen.x*=p;v.positionScreen.y*=-z;A.positionScreen.x*=p;A.positionScreen.y*=-z;B.positionScreen.x*=p;B.positionScreen.y*=-z;s.addPoint(q.positionScreen.x,q.positionScreen.y);s.addPoint(v.positionScreen.x,v.positionScreen.y);s.addPoint(A.positionScreen.x,A.positionScreen.y);s.addPoint(B.positionScreen.x,
B.positionScreen.y);if(H.instersects(s)){Q=0;for(S=F.meshMaterials.length;Q<S;){R=F.meshMaterials[Q++];if(R instanceof THREE.MeshFaceMaterial){aa=0;for(X=F.faceMaterials.length;aa<X;)(R=F.faceMaterials[aa++])&&d(q,v,A,B,F,R,V)}else R&&d(q,v,A,B,F,R,V)}}}}}};
THREE.WebGLRenderer=function(a){function b(f,n){f.fragment_shader=n.fragment_shader;f.vertex_shader=n.vertex_shader;f.uniforms=Uniforms.clone(n.uniforms)}function d(f,n){f.uniforms.color.value.setRGB(f.color.r*f.opacity,f.color.g*f.opacity,f.color.b*f.opacity);f.uniforms.opacity.value=f.opacity;f.uniforms.map.texture=f.map;f.uniforms.env_map.texture=f.env_map;f.uniforms.reflectivity.value=f.reflectivity;f.uniforms.refraction_ratio.value=f.refraction_ratio;f.uniforms.combine.value=f.combine;f.uniforms.useRefract.value=
f.env_map&&f.env_map.mapping instanceof THREE.CubeRefractionMapping;if(n){f.uniforms.fogColor.value.setHex(n.color.hex);if(n instanceof THREE.Fog){f.uniforms.fogNear.value=n.near;f.uniforms.fogFar.value=n.far}else if(n instanceof THREE.FogExp2)f.uniforms.fogDensity.value=n.density}}function e(f,n){f.uniforms.color.value.setRGB(f.color.r*f.opacity,f.color.g*f.opacity,f.color.b*f.opacity);f.uniforms.opacity.value=f.opacity;if(n){f.uniforms.fogColor.value.setHex(n.color.hex);if(n instanceof THREE.Fog){f.uniforms.fogNear.value=
n.near;f.uniforms.fogFar.value=n.far}else if(n instanceof THREE.FogExp2)f.uniforms.fogDensity.value=n.density}}function g(f,n){var y;if(f=="fragment")y=c.createShader(c.FRAGMENT_SHADER);else if(f=="vertex")y=c.createShader(c.VERTEX_SHADER);c.shaderSource(y,n);c.compileShader(y);if(!c.getShaderParameter(y,c.COMPILE_STATUS)){alert(c.getShaderInfoLog(y));return null}return y}function h(f){switch(f){case THREE.RepeatWrapping:return c.REPEAT;case THREE.ClampToEdgeWrapping:return c.CLAMP_TO_EDGE;case THREE.MirroredRepeatWrapping:return c.MIRRORED_REPEAT;
case THREE.NearestFilter:return c.NEAREST;case THREE.NearestMipMapNearestFilter:return c.NEAREST_MIPMAP_NEAREST;case THREE.NearestMipMapLinearFilter:return c.NEAREST_MIPMAP_LINEAR;case THREE.LinearFilter:return c.LINEAR;case THREE.LinearMipMapNearestFilter:return c.LINEAR_MIPMAP_NEAREST;case THREE.LinearMipMapLinearFilter:return c.LINEAR_MIPMAP_LINEAR;case THREE.ByteType:return c.BYTE;case THREE.UnsignedByteType:return c.UNSIGNED_BYTE;case THREE.ShortType:return c.SHORT;case THREE.UnsignedShortType:return c.UNSIGNED_SHORT;
case THREE.IntType:return c.INT;case THREE.UnsignedShortType:return c.UNSIGNED_INT;case THREE.FloatType:return c.FLOAT;case THREE.AlphaFormat:return c.ALPHA;case THREE.RGBFormat:return c.RGB;case THREE.RGBAFormat:return c.RGBA;case THREE.LuminanceFormat:return c.LUMINANCE;case THREE.LuminanceAlphaFormat:return c.LUMINANCE_ALPHA}return 0}var j=document.createElement("canvas"),c,k=null,m=null,p=new THREE.Matrix4,z,q=new Float32Array(16),v=new Float32Array(16),A=new Float32Array(16),B=new Float32Array(9),
H=new Float32Array(16),s=true,K=new THREE.Color(0),o=0;if(a){if(a.antialias!==undefined)s=a.antialias;a.clearColor!==undefined&&K.setHex(a.clearColor);if(a.clearAlpha!==undefined)o=a.clearAlpha}this.domElement=j;this.autoClear=true;(function(f,n,y){try{c=j.getContext("experimental-webgl",{antialias:f})}catch(r){}if(!c){alert("WebGL not supported");throw"cannot create webgl context";}c.clearColor(0,0,0,1);c.clearDepth(1);c.enable(c.DEPTH_TEST);c.depthFunc(c.LEQUAL);c.frontFace(c.CCW);c.cullFace(c.BACK);
c.enable(c.CULL_FACE);c.enable(c.BLEND);c.blendFunc(c.ONE,c.ONE_MINUS_SRC_ALPHA);c.clearColor(n.r,n.g,n.b,y)})(s,K,o);this.context=c;this.lights={ambient:[0,0,0],directional:{length:0,colors:[],positions:[]},point:{length:0,colors:[],positions:[]}};this.setSize=function(f,n){j.width=f;j.height=n;c.viewport(0,0,j.width,j.height)};this.setClearColor=function(f,n){var y=new THREE.Color(f);c.clearColor(y.r,y.g,y.b,n)};this.clear=function(){c.clear(c.COLOR_BUFFER_BIT|c.DEPTH_BUFFER_BIT)};this.setupLights=
function(f,n){var y,r,x,L=0,u=0,C=0,E,D,w,N=this.lights,I=N.directional.colors,T=N.directional.positions,V=N.point.colors,O=N.point.positions,ca=0,W=0;y=0;for(r=n.length;y<r;y++){x=n[y];E=x.color;D=x.position;w=x.intensity;if(x instanceof THREE.AmbientLight){L+=E.r;u+=E.g;C+=E.b}else if(x instanceof THREE.DirectionalLight){I[ca*3]=E.r*w;I[ca*3+1]=E.g*w;I[ca*3+2]=E.b*w;T[ca*3]=D.x;T[ca*3+1]=D.y;T[ca*3+2]=D.z;ca+=1}else if(x instanceof THREE.PointLight){V[W*3]=E.r*w;V[W*3+1]=E.g*w;V[W*3+2]=E.b*w;O[W*
3]=D.x;O[W*3+1]=D.y;O[W*3+2]=D.z;W+=1}}N.point.length=W;N.directional.length=ca;N.ambient[0]=L;N.ambient[1]=u;N.ambient[2]=C};this.createParticleBuffers=function(f){f.__webGLVertexBuffer=c.createBuffer();f.__webGLFaceBuffer=c.createBuffer()};this.createLineBuffers=function(f){f.__webGLVertexBuffer=c.createBuffer();f.__webGLLineBuffer=c.createBuffer()};this.createMeshBuffers=function(f){f.__webGLVertexBuffer=c.createBuffer();f.__webGLNormalBuffer=c.createBuffer();f.__webGLTangentBuffer=c.createBuffer();
f.__webGLUVBuffer=c.createBuffer();f.__webGLFaceBuffer=c.createBuffer();f.__webGLLineBuffer=c.createBuffer()};this.initLineBuffers=function(f){var n=f.vertices.length;f.__vertexArray=new Float32Array(n*3);f.__lineArray=new Uint16Array(n);f.__webGLLineCount=n};this.initMeshBuffers=function(f,n){var y,r,x=0,L=0,u=0,C=n.geometry.faces,E=f.faces;y=0;for(r=E.length;y<r;y++){fi=E[y];face=C[fi];if(face instanceof THREE.Face3){x+=3;L+=1;u+=3}else if(face instanceof THREE.Face4){x+=4;L+=2;u+=4}}f.__vertexArray=
new Float32Array(x*3);f.__normalArray=new Float32Array(x*3);f.__tangentArray=new Float32Array(x*4);f.__uvArray=new Float32Array(x*2);f.__faceArray=new Uint16Array(L*3);f.__lineArray=new Uint16Array(u*2);x=false;y=0;for(r=n.materials.length;y<r;y++){C=n.materials[y];if(C instanceof THREE.MeshFaceMaterial){C=0;for(E=f.materials.length;C<E;C++)if(f.materials[C]&&f.materials[C].shading!=undefined&&f.materials[C].shading==THREE.SmoothShading){x=true;break}}else if(C&&C.shading!=undefined&&C.shading==THREE.SmoothShading){x=
true;break}if(x)break}f.__needsSmoothNormals=x;f.__webGLFaceCount=L*3;f.__webGLLineCount=u*2};this.setMeshBuffers=function(f,n,y,r,x,L,u,C){var E,D,w,N,I,T,V,O,ca,W=0,Q=0,S=0,aa=0,X=0,F=0,R=0,U=f.__vertexArray,ha=f.__uvArray,ga=f.__normalArray,t=f.__tangentArray,J=f.__faceArray,G=f.__lineArray,Y=f.__needsSmoothNormals,ba=n.geometry,fa=ba.vertices,ia=f.faces,pa=ba.faces,ra=ba.uvs;n=0;for(E=ia.length;n<E;n++){D=ia[n];w=pa[D];D=ra[D];N=w.vertexNormals;I=w.normal;if(w instanceof THREE.Face3){if(r){T=
fa[w.a].position;V=fa[w.b].position;O=fa[w.c].position;U[Q]=T.x;U[Q+1]=T.y;U[Q+2]=T.z;U[Q+3]=V.x;U[Q+4]=V.y;U[Q+5]=V.z;U[Q+6]=O.x;U[Q+7]=O.y;U[Q+8]=O.z;Q+=9}if(C&&ba.hasTangents){T=fa[w.a].tangent;V=fa[w.b].tangent;O=fa[w.c].tangent;t[F]=T.x;t[F+1]=T.y;t[F+2]=T.z;t[F+3]=T.w;t[F+4]=V.x;t[F+5]=V.y;t[F+6]=V.z;t[F+7]=V.w;t[F+8]=O.x;t[F+9]=O.y;t[F+10]=O.z;t[F+11]=O.w;F+=12}if(u)if(N.length==3&&Y)for(w=0;w<3;w++){I=N[w];ga[X]=I.x;ga[X+1]=I.y;ga[X+2]=I.z;X+=3}else for(w=0;w<3;w++){ga[X]=I.x;ga[X+1]=I.y;
ga[X+2]=I.z;X+=3}if(L&&D)for(w=0;w<3;w++){N=D[w];ha[S]=N.u;ha[S+1]=N.v;S+=2}if(x){J[aa]=W;J[aa+1]=W+1;J[aa+2]=W+2;aa+=3;G[R]=W;G[R+1]=W+1;G[R+2]=W;G[R+3]=W+2;G[R+4]=W+1;G[R+5]=W+2;R+=6;W+=3}}else if(w instanceof THREE.Face4){if(r){T=fa[w.a].position;V=fa[w.b].position;O=fa[w.c].position;ca=fa[w.d].position;U[Q]=T.x;U[Q+1]=T.y;U[Q+2]=T.z;U[Q+3]=V.x;U[Q+4]=V.y;U[Q+5]=V.z;U[Q+6]=O.x;U[Q+7]=O.y;U[Q+8]=O.z;U[Q+9]=ca.x;U[Q+10]=ca.y;U[Q+11]=ca.z;Q+=12}if(C&&ba.hasTangents){T=fa[w.a].tangent;V=fa[w.b].tangent;
O=fa[w.c].tangent;w=fa[w.d].tangent;t[F]=T.x;t[F+1]=T.y;t[F+2]=T.z;t[F+3]=T.w;t[F+4]=V.x;t[F+5]=V.y;t[F+6]=V.z;t[F+7]=V.w;t[F+8]=O.x;t[F+9]=O.y;t[F+10]=O.z;t[F+11]=O.w;t[F+12]=w.x;t[F+13]=w.y;t[F+14]=w.z;t[F+15]=w.w;F+=16}if(u)if(N.length==4&&Y)for(w=0;w<4;w++){I=N[w];ga[X]=I.x;ga[X+1]=I.y;ga[X+2]=I.z;X+=3}else for(w=0;w<4;w++){ga[X]=I.x;ga[X+1]=I.y;ga[X+2]=I.z;X+=3}if(L&&D)for(w=0;w<4;w++){N=D[w];ha[S]=N.u;ha[S+1]=N.v;S+=2}if(x){J[aa]=W;J[aa+1]=W+1;J[aa+2]=W+2;J[aa+3]=W;J[aa+4]=W+2;J[aa+5]=W+3;aa+=
6;G[R]=W;G[R+1]=W+1;G[R+2]=W;G[R+3]=W+3;G[R+4]=W+1;G[R+5]=W+2;G[R+6]=W+2;G[R+7]=W+3;R+=8;W+=4}}}if(r){c.bindBuffer(c.ARRAY_BUFFER,f.__webGLVertexBuffer);c.bufferData(c.ARRAY_BUFFER,U,y)}if(u){c.bindBuffer(c.ARRAY_BUFFER,f.__webGLNormalBuffer);c.bufferData(c.ARRAY_BUFFER,ga,y)}if(C&&ba.hasTangents){c.bindBuffer(c.ARRAY_BUFFER,f.__webGLTangentBuffer);c.bufferData(c.ARRAY_BUFFER,t,y)}if(L&&S>0){c.bindBuffer(c.ARRAY_BUFFER,f.__webGLUVBuffer);c.bufferData(c.ARRAY_BUFFER,ha,y)}if(x){c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,
f.__webGLFaceBuffer);c.bufferData(c.ELEMENT_ARRAY_BUFFER,J,y);c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,f.__webGLLineBuffer);c.bufferData(c.ELEMENT_ARRAY_BUFFER,G,y)}};this.setLineBuffers=function(f,n,y,r){var x,L,u=f.vertices,C=u.length,E=f.__vertexArray,D=f.__lineArray;if(y)for(y=0;y<C;y++){x=u[y].position;L=y*3;E[L]=x.x;E[L+1]=x.y;E[L+2]=x.z}if(r)for(y=0;y<C;y++)D[y]=y;c.bindBuffer(c.ARRAY_BUFFER,f.__webGLVertexBuffer);c.bufferData(c.ARRAY_BUFFER,E,n);c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,f.__webGLLineBuffer);
c.bufferData(c.ELEMENT_ARRAY_BUFFER,D,n)};this.setParticleBuffers=function(){};this.renderBuffer=function(f,n,y,r,x,L){var u,C,E,D;if(!r.program){if(r instanceof THREE.MeshDepthMaterial){b(r,THREE.ShaderLib.depth);r.uniforms.mNear.value=f.near;r.uniforms.mFar.value=f.far}else if(r instanceof THREE.MeshNormalMaterial)b(r,THREE.ShaderLib.normal);else if(r instanceof THREE.MeshBasicMaterial){b(r,THREE.ShaderLib.basic);d(r,y)}else if(r instanceof THREE.MeshLambertMaterial){b(r,THREE.ShaderLib.lambert);
d(r,y)}else if(r instanceof THREE.MeshPhongMaterial){b(r,THREE.ShaderLib.phong);d(r,y)}else if(r instanceof THREE.LineBasicMaterial){b(r,THREE.ShaderLib.basic);e(r,y)}var w,N,I;w=D=C=0;for(N=n.length;w<N;w++){I=n[w];I instanceof THREE.DirectionalLight&&D++;I instanceof THREE.PointLight&&C++}if(C+D<=4){w=D;C=C}else{w=Math.ceil(4*D/(C+D));C=4-w}C={directional:w,point:C};D={fog:y,map:r.map,env_map:r.env_map,maxDirLights:C.directional,maxPointLights:C.point};C=r.fragment_shader;w=r.vertex_shader;N=c.createProgram();
I=["#ifdef GL_ES\nprecision highp float;\n#endif","#define MAX_DIR_LIGHTS "+D.maxDirLights,"#define MAX_POINT_LIGHTS "+D.maxPointLights,D.fog?"#define USE_FOG":"",D.fog instanceof THREE.FogExp2?"#define FOG_EXP2":"",D.map?"#define USE_MAP":"",D.env_map?"#define USE_ENVMAP":"","uniform mat4 viewMatrix;\nuniform vec3 cameraPosition;\n"].join("\n");D=[c.getParameter(c.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0?"#define VERTEX_TEXTURES":"","#define MAX_DIR_LIGHTS "+D.maxDirLights,"#define MAX_POINT_LIGHTS "+D.maxPointLights,
D.map?"#define USE_MAP":"",D.env_map?"#define USE_ENVMAP":"","uniform mat4 objectMatrix;\nuniform mat4 modelViewMatrix;\nuniform mat4 projectionMatrix;\nuniform mat4 viewMatrix;\nuniform mat3 normalMatrix;\nuniform vec3 cameraPosition;\nattribute vec3 position;\nattribute vec3 normal;\nattribute vec2 uv;\n"].join("\n");c.attachShader(N,g("fragment",I+C));c.attachShader(N,g("vertex",D+w));c.linkProgram(N);c.getProgramParameter(N,c.LINK_STATUS)||alert("Could not initialise shaders\nVALIDATE_STATUS: "+
c.getProgramParameter(N,c.VALIDATE_STATUS)+", gl error ["+c.getError()+"]");N.uniforms={};N.attributes={};r.program=N;C=["viewMatrix","modelViewMatrix","projectionMatrix","normalMatrix","objectMatrix","cameraPosition"];for(u in r.uniforms)C.push(u);u=r.program;w=0;for(N=C.length;w<N;w++){I=C[w];u.uniforms[I]=c.getUniformLocation(u,I)}u=r.program;C=["position","normal","uv","tangent"];w=0;for(N=C.length;w<N;w++){I=C[w];u.attributes[I]=c.getAttribLocation(u,I)}}u=r.program;if(u!=k){c.useProgram(u);
k=u}this.loadCamera(u,f);this.loadMatrices(u);if(r instanceof THREE.MeshPhongMaterial||r instanceof THREE.MeshLambertMaterial){this.setupLights(u,n);f=this.lights;r.uniforms.enableLighting.value=f.directional.length+f.point.length;r.uniforms.ambientLightColor.value=f.ambient;r.uniforms.directionalLightColor.value=f.directional.colors;r.uniforms.directionalLightDirection.value=f.directional.positions;r.uniforms.pointLightColor.value=f.point.colors;r.uniforms.pointLightPosition.value=f.point.positions}if(r instanceof
THREE.MeshBasicMaterial||r instanceof THREE.MeshLambertMaterial||r instanceof THREE.MeshPhongMaterial)d(r,y);r instanceof THREE.LineBasicMaterial&&e(r,y);if(r instanceof THREE.MeshPhongMaterial){r.uniforms.ambient.value.setRGB(r.ambient.r,r.ambient.g,r.ambient.b);r.uniforms.specular.value.setRGB(r.specular.r,r.specular.g,r.specular.b);r.uniforms.shininess.value=r.shininess}y=r.uniforms;for(E in y)if(w=u.uniforms[E]){n=y[E];C=n.type;f=n.value;if(C=="i")c.uniform1i(w,f);else if(C=="f")c.uniform1f(w,
f);else if(C=="fv1")c.uniform1fv(w,f);else if(C=="fv")c.uniform3fv(w,f);else if(C=="v2")c.uniform2f(w,f.x,f.y);else if(C=="v3")c.uniform3f(w,f.x,f.y,f.z);else if(C=="c")c.uniform3f(w,f.r,f.g,f.b);else if(C=="t"){c.uniform1i(w,f);if(n=n.texture)if(n.image instanceof Array&&n.image.length==6){n=n;f=f;if(n.image.length==6){if(!n.image.__webGLTextureCube&&!n.image.__cubeMapInitialized&&n.image.loadCount==6){n.image.__webGLTextureCube=c.createTexture();c.bindTexture(c.TEXTURE_CUBE_MAP,n.image.__webGLTextureCube);
c.texParameteri(c.TEXTURE_CUBE_MAP,c.TEXTURE_WRAP_S,c.CLAMP_TO_EDGE);c.texParameteri(c.TEXTURE_CUBE_MAP,c.TEXTURE_WRAP_T,c.CLAMP_TO_EDGE);c.texParameteri(c.TEXTURE_CUBE_MAP,c.TEXTURE_MAG_FILTER,c.LINEAR);c.texParameteri(c.TEXTURE_CUBE_MAP,c.TEXTURE_MIN_FILTER,c.LINEAR_MIPMAP_LINEAR);for(C=0;C<6;++C)c.texImage2D(c.TEXTURE_CUBE_MAP_POSITIVE_X+C,0,c.RGBA,c.RGBA,c.UNSIGNED_BYTE,n.image[C]);c.generateMipmap(c.TEXTURE_CUBE_MAP);c.bindTexture(c.TEXTURE_CUBE_MAP,null);n.image.__cubeMapInitialized=true}c.activeTexture(c.TEXTURE0+
f);c.bindTexture(c.TEXTURE_CUBE_MAP,n.image.__webGLTextureCube)}}else{n=n;f=f;if(!n.__webGLTexture&&n.image.loaded){n.__webGLTexture=c.createTexture();c.bindTexture(c.TEXTURE_2D,n.__webGLTexture);c.texImage2D(c.TEXTURE_2D,0,c.RGBA,c.RGBA,c.UNSIGNED_BYTE,n.image);c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_S,h(n.wrap_s));c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_T,h(n.wrap_t));c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MAG_FILTER,h(n.mag_filter));c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MIN_FILTER,h(n.min_filter));
c.generateMipmap(c.TEXTURE_2D);c.bindTexture(c.TEXTURE_2D,null)}c.activeTexture(c.TEXTURE0+f);c.bindTexture(c.TEXTURE_2D,n.__webGLTexture)}}}E=u.attributes;c.bindBuffer(c.ARRAY_BUFFER,x.__webGLVertexBuffer);c.vertexAttribPointer(E.position,3,c.FLOAT,false,0,0);c.enableVertexAttribArray(E.position);if(E.normal>=0){c.bindBuffer(c.ARRAY_BUFFER,x.__webGLNormalBuffer);c.vertexAttribPointer(E.normal,3,c.FLOAT,false,0,0);c.enableVertexAttribArray(E.normal)}if(E.tangent>=0){c.bindBuffer(c.ARRAY_BUFFER,x.__webGLTangentBuffer);
c.vertexAttribPointer(E.tangent,4,c.FLOAT,false,0,0);c.enableVertexAttribArray(E.tangent)}if(E.uv>=0)if(x.__webGLUVBuffer){c.bindBuffer(c.ARRAY_BUFFER,x.__webGLUVBuffer);c.vertexAttribPointer(E.uv,2,c.FLOAT,false,0,0);c.enableVertexAttribArray(E.uv)}else c.disableVertexAttribArray(E.uv);if(r.wireframe||r instanceof THREE.LineBasicMaterial){E=r.wireframe_linewidth!==undefined?r.wireframe_linewidth:r.linewidth!==undefined?r.linewidth:1;r=r instanceof THREE.LineBasicMaterial&&L.type==THREE.LineStrip?
c.LINE_STRIP:c.LINES;c.lineWidth(E);c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,x.__webGLLineBuffer);c.drawElements(r,x.__webGLLineCount,c.UNSIGNED_SHORT,0)}else{c.bindBuffer(c.ELEMENT_ARRAY_BUFFER,x.__webGLFaceBuffer);c.drawElements(c.TRIANGLES,x.__webGLFaceCount,c.UNSIGNED_SHORT,0)}};this.renderPass=function(f,n,y,r,x,L,u){var C,E,D,w,N;D=0;for(w=r.materials.length;D<w;D++){C=r.materials[D];if(C instanceof THREE.MeshFaceMaterial){C=0;for(E=x.materials.length;C<E;C++)if((N=x.materials[C])&&N.blending==L&&
N.opacity<1==u){this.setBlending(N.blending);this.renderBuffer(f,n,y,N,x,r)}}else if((N=C)&&N.blending==L&&N.opacity<1==u){this.setBlending(N.blending);this.renderBuffer(f,n,y,N,x,r)}}};this.render=function(f,n,y,r){var x,L,u,C=f.lights,E=f.fog;this.initWebGLObjects(f);r=r!==undefined?r:true;if(y&&!y.__webGLFramebuffer){y.__webGLFramebuffer=c.createFramebuffer();y.__webGLRenderbuffer=c.createRenderbuffer();y.__webGLTexture=c.createTexture();c.bindRenderbuffer(c.RENDERBUFFER,y.__webGLRenderbuffer);
c.renderbufferStorage(c.RENDERBUFFER,c.DEPTH_COMPONENT16,y.width,y.height);c.bindTexture(c.TEXTURE_2D,y.__webGLTexture);c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_S,h(y.wrap_s));c.texParameteri(c.TEXTURE_2D,c.TEXTURE_WRAP_T,h(y.wrap_t));c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MAG_FILTER,h(y.mag_filter));c.texParameteri(c.TEXTURE_2D,c.TEXTURE_MIN_FILTER,h(y.min_filter));c.texImage2D(c.TEXTURE_2D,0,h(y.format),y.width,y.height,0,h(y.format),h(y.type),null);c.bindFramebuffer(c.FRAMEBUFFER,y.__webGLFramebuffer);
c.framebufferTexture2D(c.FRAMEBUFFER,c.COLOR_ATTACHMENT0,c.TEXTURE_2D,y.__webGLTexture,0);c.framebufferRenderbuffer(c.FRAMEBUFFER,c.DEPTH_ATTACHMENT,c.RENDERBUFFER,y.__webGLRenderbuffer);c.bindTexture(c.TEXTURE_2D,null);c.bindRenderbuffer(c.RENDERBUFFER,null);c.bindFramebuffer(c.FRAMEBUFFER,null)}if(y){x=y.__webGLFramebuffer;u=y.width;L=y.height}else{x=null;u=j.width;L=j.height}if(x!=m){c.bindFramebuffer(c.FRAMEBUFFER,x);c.viewport(0,0,u,L);r&&c.clear(c.COLOR_BUFFER_BIT|c.DEPTH_BUFFER_BIT);m=x}this.autoClear&&
this.clear();n.autoUpdateMatrix&&n.updateMatrix();q.set(n.matrix.flatten());A.set(n.projectionMatrix.flatten());r=0;for(x=f.__webGLObjects.length;r<x;r++){L=f.__webGLObjects[r];u=L.object;L=L.buffer;if(u.visible){this.setupMatrices(u,n);this.renderPass(n,C,E,u,L,THREE.NormalBlending,false)}}r=0;for(x=f.__webGLObjects.length;r<x;r++){L=f.__webGLObjects[r];u=L.object;L=L.buffer;if(u.visible){this.setupMatrices(u,n);if(u.doubleSided)c.disable(c.CULL_FACE);else{c.enable(c.CULL_FACE);u.flipSided?c.frontFace(c.CW):
c.frontFace(c.CCW)}this.renderPass(n,C,E,u,L,THREE.AdditiveBlending,false);this.renderPass(n,C,E,u,L,THREE.SubtractiveBlending,false);this.renderPass(n,C,E,u,L,THREE.AdditiveBlending,true);this.renderPass(n,C,E,u,L,THREE.SubtractiveBlending,true);this.renderPass(n,C,E,u,L,THREE.NormalBlending,true)}}if(y&&y.min_filter!==THREE.NearestFilter&&y.min_filter!==THREE.LinearFilter){c.bindTexture(c.TEXTURE_2D,y.__webGLTexture);c.generateMipmap(c.TEXTURE_2D);c.bindTexture(c.TEXTURE_2D,null)}};this.initWebGLObjects=
function(f){function n(D,w,N,I){if(D[w]==undefined){f.__webGLObjects.push({buffer:N,object:I});D[w]=1}}var y,r,x,L,u,C,E;if(!f.__webGLObjects){f.__webGLObjects=[];f.__webGLObjectsMap={}}y=0;for(r=f.objects.length;y<r;y++){x=f.objects[y];u=x.geometry;if(f.__webGLObjectsMap[x.id]==undefined)f.__webGLObjectsMap[x.id]={};E=f.__webGLObjectsMap[x.id];if(x instanceof THREE.Mesh){for(L in u.geometryChunks){C=u.geometryChunks[L];if(!C.__webGLVertexBuffer){this.createMeshBuffers(C);this.initMeshBuffers(C,x);
u.__dirtyVertices=true;u.__dirtyElements=true;u.__dirtyUvs=true;u.__dirtyNormals=true;u.__dirtyTangents=true}if(u.__dirtyVertices||u.__dirtyElements||u.__dirtyUvs)this.setMeshBuffers(C,x,c.DYNAMIC_DRAW,u.__dirtyVertices,u.__dirtyElements,u.__dirtyUvs,u.__dirtyNormals,u.__dirtyTangents);n(E,L,C,x)}u.__dirtyVertices=false;u.__dirtyElements=false;u.__dirtyUvs=false;u.__dirtyNormals=false;u.__dirtyTangents=false}else if(x instanceof THREE.Line){if(!u.__webGLVertexBuffer){this.createLineBuffers(u);this.initLineBuffers(u);
u.__dirtyVertices=true;u.__dirtyElements=true}u.__dirtyVertices&&this.setLineBuffers(u,c.DYNAMIC_DRAW,u.__dirtyVertices,u.__dirtyElements);n(E,0,u,x);u.__dirtyVertices=false;u.__dirtyElements=false}else if(x instanceof THREE.ParticleSystem){u.__webGLVertexBuffer||this.createParticleBuffers(u);n(E,0,u,x)}}};this.removeObject=function(f,n){var y,r;for(y=f.__webGLObjects.length-1;y>=0;y--){r=f.__webGLObjects[y].object;n==r&&f.__webGLObjects.splice(y,1)}};this.setupMatrices=function(f,n){f.autoUpdateMatrix&&
f.updateMatrix();p.multiply(n.matrix,f.matrix);v.set(p.flatten());z=THREE.Matrix4.makeInvert3x3(p).transpose();B.set(z.m);H.set(f.matrix.flatten())};this.loadMatrices=function(f){c.uniformMatrix4fv(f.uniforms.viewMatrix,false,q);c.uniformMatrix4fv(f.uniforms.modelViewMatrix,false,v);c.uniformMatrix4fv(f.uniforms.projectionMatrix,false,A);c.uniformMatrix3fv(f.uniforms.normalMatrix,false,B);c.uniformMatrix4fv(f.uniforms.objectMatrix,false,H)};this.loadCamera=function(f,n){c.uniform3f(f.uniforms.cameraPosition,
n.position.x,n.position.y,n.position.z)};this.setBlending=function(f){switch(f){case THREE.AdditiveBlending:c.blendEquation(c.FUNC_ADD);c.blendFunc(c.ONE,c.ONE);break;case THREE.SubtractiveBlending:c.blendFunc(c.DST_COLOR,c.ZERO);break;default:c.blendEquation(c.FUNC_ADD);c.blendFunc(c.ONE,c.ONE_MINUS_SRC_ALPHA)}};this.setFaceCulling=function(f,n){if(f){!n||n=="ccw"?c.frontFace(c.CCW):c.frontFace(c.CW);if(f=="back")c.cullFace(c.BACK);else f=="front"?c.cullFace(c.FRONT):c.cullFace(c.FRONT_AND_BACK);
c.enable(c.CULL_FACE)}else c.disable(c.CULL_FACE)};this.supportsVertexTextures=function(){return c.getParameter(c.MAX_VERTEX_TEXTURE_IMAGE_UNITS)>0}};
THREE.Snippets={fog_pars_fragment:"#ifdef USE_FOG\nuniform vec3 fogColor;\n#ifdef FOG_EXP2\nuniform float fogDensity;\n#else\nuniform float fogNear;\nuniform float fogFar;\n#endif\n#endif",fog_fragment:"#ifdef USE_FOG\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\n#ifdef FOG_EXP2\nconst float LOG2 = 1.442695;\nfloat fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );\nfogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );\n#else\nfloat fogFactor = smoothstep( fogNear, fogFar, depth );\n#endif\ngl_FragColor = mix( gl_FragColor, vec4( fogColor, 1.0 ), fogFactor );\n#endif",envmap_pars_fragment:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float reflectivity;\nuniform samplerCube env_map;\nuniform int combine;\n#endif",
envmap_fragment:"#ifdef USE_ENVMAP\ncubeColor = textureCube( env_map, vec3( -vReflect.x, vReflect.yz ) );\nif ( combine == 1 ) {\ngl_FragColor = mix( gl_FragColor, cubeColor, reflectivity );\n} else {\ngl_FragColor = gl_FragColor * cubeColor;\n}\n#endif",envmap_pars_vertex:"#ifdef USE_ENVMAP\nvarying vec3 vReflect;\nuniform float refraction_ratio;\nuniform bool useRefract;\n#endif",envmap_vertex:"#ifdef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = mat3( objectMatrix[0].xyz, objectMatrix[1].xyz, objectMatrix[2].xyz ) * normal;\nif ( useRefract ) {\nvReflect = refract( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ), refraction_ratio );\n} else {\nvReflect = reflect( normalize( mPosition.xyz - cameraPosition ), normalize( nWorld.xyz ) );\n}\n#endif",
map_pars_fragment:"#ifdef USE_MAP\nvarying vec2 vUv;\nuniform sampler2D map;\n#endif",map_pars_vertex:"#ifdef USE_MAP\nvarying vec2 vUv;\n#endif",map_fragment:"#ifdef USE_MAP\nmapColor = texture2D( map, vUv );\n#endif",map_vertex:"#ifdef USE_MAP\nvUv = uv;\n#endif",lights_pars_vertex:"uniform bool enableLighting;\nuniform vec3 ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\nuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\n#ifdef PHONG\nvarying vec3 vPointLightVector[ MAX_POINT_LIGHTS ];\n#endif\n#endif",
lights_vertex:"if ( !enableLighting ) {\nvLightWeighting = vec3( 1.0 );\n} else {\nvLightWeighting = ambientLightColor;\n#if MAX_DIR_LIGHTS > 0\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nfloat directionalLightWeighting = max( dot( transformedNormal, normalize( lDirection.xyz ) ), 0.0 );\nvLightWeighting += directionalLightColor[ i ] * directionalLightWeighting;\n}\n#endif\n#if MAX_POINT_LIGHTS > 0\nfor( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {\nvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\nvec3 pointLightVector = normalize( lPosition.xyz - mvPosition.xyz );\nfloat pointLightWeighting = max( dot( transformedNormal, pointLightVector ), 0.0 );\nvLightWeighting += pointLightColor[ i ] * pointLightWeighting;\n#ifdef PHONG\nvPointLightVector[ i ] = pointLightVector;\n#endif\n}\n#endif\n}",
lights_pars_fragment:"#if MAX_DIR_LIGHTS > 0\nuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\n#endif\n#if MAX_POINT_LIGHTS > 0\nvarying vec3 vPointLightVector[ MAX_POINT_LIGHTS ];\n#endif\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",lights_fragment:"vec3 normal = normalize( vNormal );\nvec3 viewPosition = normalize( vViewPosition );\nvec4 mSpecular = vec4( specular, opacity );\n#if MAX_POINT_LIGHTS > 0\nvec4 pointDiffuse  = vec4( 0.0 );\nvec4 pointSpecular = vec4( 0.0 );\nfor( int i = 0; i < MAX_POINT_LIGHTS; i++ ) {\nvec3 pointVector = normalize( vPointLightVector[ i ] );\nvec3 pointHalfVector = normalize( vPointLightVector[ i ] + vViewPosition );\nfloat pointDotNormalHalf = dot( normal, pointHalfVector );\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\nfloat pointSpecularWeight = 0.0;\nif ( pointDotNormalHalf >= 0.0 )\npointSpecularWeight = pow( pointDotNormalHalf, shininess );\npointDiffuse  += mColor * pointDiffuseWeight;\npointSpecular += mSpecular * pointSpecularWeight;\n}\n#endif\n#if MAX_DIR_LIGHTS > 0\nvec4 dirDiffuse  = vec4( 0.0 );\nvec4 dirSpecular = vec4( 0.0 );\nfor( int i = 0; i < MAX_DIR_LIGHTS; i++ ) {\nvec4 lDirection = viewMatrix * vec4( directionalLightDirection[ i ], 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nvec3 dirHalfVector = normalize( lDirection.xyz + vViewPosition );\nfloat dirDotNormalHalf = dot( normal, dirHalfVector );\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\nfloat dirSpecularWeight = 0.0;\nif ( dirDotNormalHalf >= 0.0 )\ndirSpecularWeight = pow( dirDotNormalHalf, shininess );\ndirDiffuse  += mColor * dirDiffuseWeight;\ndirSpecular += mSpecular * dirSpecularWeight;\n}\n#endif\nvec4 totalLight = vec4( ambient, opacity );\n#if MAX_DIR_LIGHTS > 0\ntotalLight += dirDiffuse + dirSpecular;\n#endif\n#if MAX_POINT_LIGHTS > 0\ntotalLight += pointDiffuse + pointSpecular;\n#endif"};
THREE.UniformsLib={common:{color:{type:"c",value:new THREE.Color(15658734)},opacity:{type:"f",value:1},map:{type:"t",value:0,texture:null},env_map:{type:"t",value:1,texture:null},useRefract:{type:"i",value:0},reflectivity:{type:"f",value:1},refraction_ratio:{type:"f",value:0.98},combine:{type:"i",value:0},fogDensity:{type:"f",value:2.5E-4},fogNear:{type:"f",value:1},fogFar:{type:"f",value:2E3},fogColor:{type:"c",value:new THREE.Color(16777215)}},lights:{enableLighting:{type:"i",value:1},ambientLightColor:{type:"fv",
value:[]},directionalLightDirection:{type:"fv",value:[]},directionalLightColor:{type:"fv",value:[]},pointLightPosition:{type:"fv",value:[]},pointLightColor:{type:"fv",value:[]}}};
THREE.ShaderLib={depth:{uniforms:{mNear:{type:"f",value:1},mFar:{type:"f",value:2E3}},fragment_shader:"uniform float mNear;\nuniform float mFar;\nvoid main() {\nfloat depth = gl_FragCoord.z / gl_FragCoord.w;\nfloat color = 1.0 - smoothstep( mNear, mFar, depth );\ngl_FragColor = vec4( vec3( color ), 1.0 );\n}",vertex_shader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}"},normal:{uniforms:{},fragment_shader:"varying vec3 vNormal;\nvoid main() {\ngl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, 1.0 );\n}",
vertex_shader:"varying vec3 vNormal;\nvoid main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\ngl_Position = projectionMatrix * mvPosition;\n}"},basic:{uniforms:THREE.UniformsLib.common,fragment_shader:["uniform vec3 color;\nuniform float opacity;",THREE.Snippets.map_pars_fragment,THREE.Snippets.envmap_pars_fragment,THREE.Snippets.fog_pars_fragment,"void main() {\nvec4 mColor = vec4( color, opacity );\nvec4 mapColor = vec4( 1.0 );\nvec4 cubeColor = vec4( 1.0 );",
THREE.Snippets.map_fragment,"gl_FragColor = mColor * mapColor;",THREE.Snippets.envmap_fragment,THREE.Snippets.fog_fragment,"}"].join("\n"),vertex_shader:[THREE.Snippets.map_pars_vertex,THREE.Snippets.envmap_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.Snippets.map_vertex,THREE.Snippets.envmap_vertex,"gl_Position = projectionMatrix * mvPosition;\n}"].join("\n")},lambert:{uniforms:Uniforms.merge([THREE.UniformsLib.common,THREE.UniformsLib.lights]),fragment_shader:["uniform vec3 color;\nuniform float opacity;\nvarying vec3 vLightWeighting;",
THREE.Snippets.map_pars_fragment,THREE.Snippets.envmap_pars_fragment,THREE.Snippets.fog_pars_fragment,"void main() {\nvec4 mColor = vec4( color, opacity );\nvec4 mapColor = vec4( 1.0 );\nvec4 cubeColor = vec4( 1.0 );",THREE.Snippets.map_fragment,"gl_FragColor =  mColor * mapColor * vec4( vLightWeighting, 1.0 );",THREE.Snippets.envmap_fragment,THREE.Snippets.fog_fragment,"}"].join("\n"),vertex_shader:["varying vec3 vLightWeighting;",THREE.Snippets.map_pars_vertex,THREE.Snippets.envmap_pars_vertex,
THREE.Snippets.lights_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.Snippets.map_vertex,THREE.Snippets.envmap_vertex,"vec3 transformedNormal = normalize( normalMatrix * normal );",THREE.Snippets.lights_vertex,"gl_Position = projectionMatrix * mvPosition;\n}"].join("\n")},phong:{uniforms:Uniforms.merge([THREE.UniformsLib.common,THREE.UniformsLib.lights,{ambient:{type:"c",value:new THREE.Color(328965)},specular:{type:"c",value:new THREE.Color(1118481)},
shininess:{type:"f",value:30}}]),fragment_shader:["uniform vec3 color;\nuniform float opacity;\nuniform vec3 ambient;\nuniform vec3 specular;\nuniform float shininess;\nvarying vec3 vLightWeighting;",THREE.Snippets.map_pars_fragment,THREE.Snippets.envmap_pars_fragment,THREE.Snippets.fog_pars_fragment,THREE.Snippets.lights_pars_fragment,"void main() {\nvec4 mColor = vec4( color, opacity );\nvec4 mapColor = vec4( 1.0 );\nvec4 cubeColor = vec4( 1.0 );",THREE.Snippets.map_fragment,THREE.Snippets.lights_fragment,
"gl_FragColor =  mapColor * totalLight * vec4( vLightWeighting, 1.0 );",THREE.Snippets.envmap_fragment,THREE.Snippets.fog_fragment,"}"].join("\n"),vertex_shader:["#define PHONG\nvarying vec3 vLightWeighting;\nvarying vec3 vViewPosition;\nvarying vec3 vNormal;",THREE.Snippets.map_pars_vertex,THREE.Snippets.envmap_pars_vertex,THREE.Snippets.lights_pars_vertex,"void main() {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );",THREE.Snippets.map_vertex,THREE.Snippets.envmap_vertex,"#ifndef USE_ENVMAP\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\n#endif\nvViewPosition = cameraPosition - mPosition.xyz;\nvec3 transformedNormal = normalize( normalMatrix * normal );\nvNormal = transformedNormal;",
THREE.Snippets.lights_vertex,"gl_Position = projectionMatrix * mvPosition;\n}"].join("\n")}};THREE.RenderableObject=function(){this.z=this.object=null};THREE.RenderableFace3=function(){this.z=null;this.v1=new THREE.Vertex;this.v2=new THREE.Vertex;this.v3=new THREE.Vertex;this.centroidWorld=new THREE.Vector3;this.centroidScreen=new THREE.Vector3;this.normalWorld=new THREE.Vector3;this.vertexNormalsWorld=[];this.faceMaterials=this.meshMaterials=null;this.overdraw=false;this.uvs=[null,null,null]};
THREE.RenderableParticle=function(){this.rotation=this.z=this.y=this.x=null;this.scale=new THREE.Vector2;this.materials=null};THREE.RenderableLine=function(){this.z=null;this.v1=new THREE.Vertex;this.v2=new THREE.Vertex;this.materials=null};
var GeometryUtils={merge:function(a,b){var d=b instanceof THREE.Mesh,e=a.vertices.length,g=d?b.geometry:b,h=a.vertices,j=g.vertices,c=a.faces,k=g.faces,m=a.uvs;g=g.uvs;d&&b.autoUpdateMatrix&&b.updateMatrix();for(var p=0,z=j.length;p<z;p++){var q=new THREE.Vertex(j[p].position.clone());d&&b.matrix.multiplyVector3(q.position);h.push(q)}p=0;for(z=k.length;p<z;p++){j=k[p];var v,A=j.vertexNormals;if(j instanceof THREE.Face3)v=new THREE.Face3(j.a+e,j.b+e,j.c+e);else if(j instanceof THREE.Face4)v=new THREE.Face4(j.a+
e,j.b+e,j.c+e,j.d+e);v.centroid.copy(j.centroid);v.normal.copy(j.normal);d=0;for(h=A.length;d<h;d++){q=A[d];v.vertexNormals.push(q.clone())}v.materials=j.materials.slice();c.push(v)}p=0;for(z=g.length;p<z;p++){e=g[p];c=[];d=0;for(h=e.length;d<h;d++)c.push(new THREE.UV(e[d].u,e[d].v));m.push(c)}}},ImageUtils={loadTexture:function(a,b){var d=new Image;d.onload=function(){this.loaded=true};d.src=a;return new THREE.Texture(d,b)},loadArray:function(a){var b,d,e=[];b=e.loadCount=0;for(d=a.length;b<d;++b){e[b]=
new Image;e[b].loaded=0;e[b].onload=function(){e.loadCount+=1;this.loaded=true};e[b].src=a[b]}return e}},SceneUtils={loadScene:function(a,b){var d,e,g,h,j,c,k,m,p,z,q,v,A,B,H,s=new Worker(a);s.onmessage=function(K){function o(){for(d in f.objects)if(!n.objects[d]){g=f.objects[d];if(z=n.geometries[g.geometry]){A=[];for(i=0;i<g.materials.length;i++)A[i]=n.materials[g.materials[i]];j=g.position;c=g.rotation;k=g.scale;object=new THREE.Mesh(z,A);object.position.set(j[0],j[1],j[2]);object.rotation.set(c[0],
c[1],c[2]);object.scale.set(k[0],k[1],k[2]);object.visible=g.visible;n.scene.addObject(object);n.objects[d]=object}}}var f=K.data;console.log(f);var n={scene:new THREE.Scene,geometries:{},materials:{},objects:{},cameras:{}};for(d in f.geometries){e=f.geometries[d];if(e.type=="cube"){z=new Cube(e.width,e.height,e.depth,e.segments_width,e.segments_height,null,e.flipped,e.sides);n.geometries[d]=z}else if(e.type=="plane"){z=new Plane(e.width,e.height,e.segments_width,e.segments_height);n.geometries[d]=
z}else if(e.type=="sphere"){z=new Sphere(e.radius,e.segments_width,e.segments_height);n.geometries[d]=z}else if(e.type=="bin_mesh"){B||(B=new THREE.Loader);H=function(y){console.log(y);n.geometries[d]=y;o()};B.loadBinary({model:"obj/male02/Male02_bin.js",callback:H})}}for(d in f.materials){h=f.materials[d];q=new THREE[h.type](h.parameters);n.materials[d]=q}o();for(d in f.lights){l=f.lights[d];if(l.type=="directional"){j=l.direction;light=new THREE.DirectionalLight;light.position.set(j[0],j[1],j[2]);
light.position.normalize()}else if(l.type=="point"){j=l.position;light=new THREE.PointLight;light.position.set(j[0],j[1],j[2])}p=l.color;light.color.setRGB(p[0],p[1],p[2]);n.scene.addLight(light)}for(d in f.cameras){p=f.cameras[d];if(p.type=="perspective")v=new THREE.Camera(p.fov,p.aspect,p.near,p.far);else if(p.type=="ortho"){v=new THREE.Camera;v.projectionMatrix=THREE.Matrix4.makeOrtho(p.left,p.right,p.top,p.bottom,p.near,p.far)}j=p.position;m=p.target;v.position.set(j[0],j[1],j[2]);v.target.position.set(m[0],
m[1],m[2]);n.cameras[d]=v}n.currentCamera=n.cameras[f.defaults.camera];b(n)};s.postMessage(0)},addMesh:function(a,b,d,e,g,h,j,c,k,m){b=new THREE.Mesh(b,m);b.scale.x=b.scale.y=b.scale.z=d;b.position.x=e;b.position.y=g;b.position.z=h;b.rotation.x=j;b.rotation.y=c;b.rotation.z=k;a.addObject(b);return b},addPanoramaCubeWebGL:function(a,b,d){var e=ShaderUtils.lib.cube;e.uniforms.tCube.texture=d;d=new THREE.MeshShaderMaterial({fragment_shader:e.fragment_shader,vertex_shader:e.vertex_shader,uniforms:e.uniforms});
b=new THREE.Mesh(new Cube(b,b,b,1,1,null,true),d);a.addObject(b);return b},addPanoramaCube:function(a,b,d){var e=[];e.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(d[0])}));e.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(d[1])}));e.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(d[2])}));e.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(d[3])}));e.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(d[4])}));e.push(new THREE.MeshBasicMaterial({map:new THREE.Texture(d[5])}));
b=new THREE.Mesh(new Cube(b,b,b,1,1,e,true),new THREE.MeshFaceMaterial);a.addObject(b);return b},addPanoramaCubePlanes:function(a,b,d){var e=b/2;b=new Plane(b,b);var g=Math.PI/2,h=Math.PI;SceneUtils.addMesh(a,b,1,0,0,-e,0,0,0,new THREE.MeshBasicMaterial({map:new THREE.Texture(d[5])}));SceneUtils.addMesh(a,b,1,-e,0,0,0,g,0,new THREE.MeshBasicMaterial({map:new THREE.Texture(d[0])}));SceneUtils.addMesh(a,b,1,e,0,0,0,-g,0,new THREE.MeshBasicMaterial({map:new THREE.Texture(d[1])}));SceneUtils.addMesh(a,
b,1,0,e,0,g,0,h,new THREE.MeshBasicMaterial({map:new THREE.Texture(d[2])}));SceneUtils.addMesh(a,b,1,0,-e,0,-g,0,h,new THREE.MeshBasicMaterial({map:new THREE.Texture(d[3])}))}},ShaderUtils={lib:{fresnel:{uniforms:{mRefractionRatio:{type:"f",value:1.02},mFresnelBias:{type:"f",value:0.1},mFresnelPower:{type:"f",value:2},mFresnelScale:{type:"f",value:1},tCube:{type:"t",value:1,texture:null}},fragment_shader:"uniform samplerCube tCube;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main() {\nvec4 reflectedColor = textureCube( tCube, vec3( -vReflect.x, vReflect.yz ) );\nvec4 refractedColor = vec4( 1.0, 1.0, 1.0, 1.0 );\nrefractedColor.r = textureCube( tCube, vec3( -vRefract[0].x, vRefract[0].yz ) ).r;\nrefractedColor.g = textureCube( tCube, vec3( -vRefract[1].x, vRefract[1].yz ) ).g;\nrefractedColor.b = textureCube( tCube, vec3( -vRefract[2].x, vRefract[2].yz ) ).b;\nrefractedColor.a = 1.0;\ngl_FragColor = mix( refractedColor, reflectedColor, clamp( vReflectionFactor, 0.0, 1.0 ) );\n}",
vertex_shader:"uniform float mRefractionRatio;\nuniform float mFresnelBias;\nuniform float mFresnelScale;\nuniform float mFresnelPower;\nvarying vec3 vReflect;\nvarying vec3 vRefract[3];\nvarying float vReflectionFactor;\nvoid main(void) {\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvec3 nWorld = normalize ( mat3( objectMatrix[0].xyz, objectMatrix[1].xyz, objectMatrix[2].xyz ) * normal );\nvec3 I = mPosition.xyz - cameraPosition;\nvReflect = reflect( I, nWorld );\nvRefract[0] = refract( normalize( I ), nWorld, mRefractionRatio );\nvRefract[1] = refract( normalize( I ), nWorld, mRefractionRatio * 0.99 );\nvRefract[2] = refract( normalize( I ), nWorld, mRefractionRatio * 0.98 );\nvReflectionFactor = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( I ), nWorld ), mFresnelPower );\ngl_Position = projectionMatrix * mvPosition;\n}"},
normal:{uniforms:{enableAO:{type:"i",value:0},enableDiffuse:{type:"i",value:0},tDiffuse:{type:"t",value:0,texture:null},tNormal:{type:"t",value:2,texture:null},tAO:{type:"t",value:3,texture:null},uNormalScale:{type:"f",value:1},tDisplacement:{type:"t",value:4,texture:null},uDisplacementBias:{type:"f",value:-0.5},uDisplacementScale:{type:"f",value:2.5},uPointLightPos:{type:"v3",value:new THREE.Vector3},uPointLightColor:{type:"c",value:new THREE.Color(15658734)},uDirLightPos:{type:"v3",value:new THREE.Vector3},
uDirLightColor:{type:"c",value:new THREE.Color(15658734)},uAmbientLightColor:{type:"c",value:new THREE.Color(328965)},uDiffuseColor:{type:"c",value:new THREE.Color(15658734)},uSpecularColor:{type:"c",value:new THREE.Color(1118481)},uAmbientColor:{type:"c",value:new THREE.Color(328965)},uShininess:{type:"f",value:30}},fragment_shader:"uniform vec3 uDirLightPos;\nuniform vec3 uAmbientLightColor;\nuniform vec3 uDirLightColor;\nuniform vec3 uPointLightColor;\nuniform vec3 uAmbientColor;\nuniform vec3 uDiffuseColor;\nuniform vec3 uSpecularColor;\nuniform float uShininess;\nuniform bool enableDiffuse;\nuniform bool enableAO;\nuniform sampler2D tDiffuse;\nuniform sampler2D tNormal;\nuniform sampler2D tAO;\nuniform float uNormalScale;\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vPointLightVector;\nvarying vec3 vViewPosition;\nvoid main() {\nvec3 diffuseTex = vec3( 1.0, 1.0, 1.0 );\nvec3 aoTex = vec3( 1.0, 1.0, 1.0 );\nvec3 normalTex = texture2D( tNormal, vUv ).xyz * 2.0 - 1.0;\nnormalTex.xy *= uNormalScale;\nnormalTex = normalize( normalTex );\nif( enableDiffuse )\ndiffuseTex = texture2D( tDiffuse, vUv ).xyz;\nif( enableAO )\naoTex = texture2D( tAO, vUv ).xyz;\nmat3 tsb = mat3( vTangent, vBinormal, vNormal );\nvec3 finalNormal = tsb * normalTex;\nvec3 normal = normalize( finalNormal );\nvec3 viewPosition = normalize( vViewPosition );\nvec4 pointDiffuse  = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec4 pointSpecular = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec3 pointVector = normalize( vPointLightVector );\nvec3 pointHalfVector = normalize( vPointLightVector + vViewPosition );\nfloat pointDotNormalHalf = dot( normal, pointHalfVector );\nfloat pointDiffuseWeight = max( dot( normal, pointVector ), 0.0 );\nfloat pointSpecularWeight = 0.0;\nif ( pointDotNormalHalf >= 0.0 )\npointSpecularWeight = pow( pointDotNormalHalf, uShininess );\npointDiffuse  += vec4( uDiffuseColor, 1.0 ) * pointDiffuseWeight;\npointSpecular += vec4( uSpecularColor, 1.0 ) * pointSpecularWeight;\nvec4 dirDiffuse  = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec4 dirSpecular = vec4( 0.0, 0.0, 0.0, 0.0 );\nvec4 lDirection = viewMatrix * vec4( uDirLightPos, 0.0 );\nvec3 dirVector = normalize( lDirection.xyz );\nvec3 dirHalfVector = normalize( lDirection.xyz + vViewPosition );\nfloat dirDotNormalHalf = dot( normal, dirHalfVector );\nfloat dirDiffuseWeight = max( dot( normal, dirVector ), 0.0 );\nfloat dirSpecularWeight = 0.0;\nif ( dirDotNormalHalf >= 0.0 )\ndirSpecularWeight = pow( dirDotNormalHalf, uShininess );\ndirDiffuse  += vec4( uDiffuseColor, 1.0 ) * dirDiffuseWeight;\ndirSpecular += vec4( uSpecularColor, 1.0 ) * dirSpecularWeight;\nvec4 totalLight = vec4( uAmbientLightColor * uAmbientColor, 1.0 );\ntotalLight += vec4( uDirLightColor, 1.0 ) * ( dirDiffuse + dirSpecular );\ntotalLight += vec4( uPointLightColor, 1.0 ) * ( pointDiffuse + pointSpecular );\ngl_FragColor = vec4( totalLight.xyz * aoTex * diffuseTex, 1.0 );\n}",
vertex_shader:"attribute vec4 tangent;\nuniform vec3 uPointLightPos;\n#ifdef VERTEX_TEXTURES\nuniform sampler2D tDisplacement;\nuniform float uDisplacementScale;\nuniform float uDisplacementBias;\n#endif\nvarying vec3 vTangent;\nvarying vec3 vBinormal;\nvarying vec3 vNormal;\nvarying vec2 vUv;\nvarying vec3 vPointLightVector;\nvarying vec3 vViewPosition;\nvoid main() {\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvViewPosition = cameraPosition - mPosition.xyz;\nvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\nvNormal = normalize( normalMatrix * normal );\nvTangent = normalize( normalMatrix * tangent.xyz );\nvBinormal = cross( vNormal, vTangent ) * tangent.w;\nvBinormal = normalize( vBinormal );\nvUv = uv;\nvec4 lPosition = viewMatrix * vec4( uPointLightPos, 1.0 );\nvPointLightVector = normalize( lPosition.xyz - mvPosition.xyz );\n#ifdef VERTEX_TEXTURES\nvec3 dv = texture2D( tDisplacement, uv ).xyz;\nfloat df = uDisplacementScale * dv.x + uDisplacementBias;\nvec4 displacedPosition = vec4( vNormal.xyz * df, 0.0 ) + mvPosition;\ngl_Position = projectionMatrix * displacedPosition;\n#else\ngl_Position = projectionMatrix * mvPosition;\n#endif\n}"},
cube:{uniforms:{tCube:{type:"t",value:1,texture:null}},vertex_shader:"varying vec3 vViewPosition;\nvoid main() {\nvec4 mPosition = objectMatrix * vec4( position, 1.0 );\nvViewPosition = cameraPosition - mPosition.xyz;\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragment_shader:"uniform samplerCube tCube;\nvarying vec3 vViewPosition;\nvoid main() {\nvec3 wPos = cameraPosition - vViewPosition;\ngl_FragColor = textureCube( tCube, vec3( - wPos.x, wPos.yz ) );\n}"},basic:{uniforms:{},
vertex_shader:"void main() {\ngl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\n}",fragment_shader:"void main() {\ngl_FragColor = vec4(1.0, 0.0, 0.0, 0.5);\n}"}}},Cube=function(a,b,d,e,g,h,j,c){function k(B,H,s,K,o,f,n,y){var r,x,L=e||1,u=g||1,C=L+1,E=u+1,D=o/2,w=f/2;o=o/L;var N=f/u,I=m.vertices.length;if(B=="x"&&H=="y"||B=="y"&&H=="x")r="z";else if(B=="x"&&H=="z"||B=="z"&&H=="x")r="y";else if(B=="z"&&H=="y"||B=="y"&&H=="z")r="x";for(x=0;x<E;x++)for(f=0;f<C;f++){var T=new THREE.Vector3;
T[B]=(f*o-D)*s;T[H]=(x*N-w)*K;T[r]=n;m.vertices.push(new THREE.Vertex(T))}for(x=0;x<u;x++)for(f=0;f<L;f++){m.faces.push(new THREE.Face4(f+C*x+I,f+C*(x+1)+I,f+1+C*(x+1)+I,f+1+C*x+I,null,y));m.uvs.push([new THREE.UV(f/L,x/u),new THREE.UV(f/L,(x+1)/u),new THREE.UV((f+1)/L,(x+1)/u),new THREE.UV((f+1)/L,x/u)])}}THREE.Geometry.call(this);var m=this,p=a/2,z=b/2,q=d/2;j=j?-1:1;if(h!==undefined)if(h instanceof Array)this.materials=h;else{this.materials=[];for(var v=0;v<6;v++)this.materials.push([h])}else this.materials=
[];this.sides={px:true,nx:true,py:true,ny:true,pz:true,nz:true};if(c!=undefined)for(var A in c)if(this.sides[A]!=undefined)this.sides[A]=c[A];this.sides.px&&k("z","y",1*j,-1,d,b,-p,this.materials[0]);this.sides.nx&&k("z","y",-1*j,-1,d,b,p,this.materials[1]);this.sides.py&&k("x","z",1*j,1,a,d,z,this.materials[2]);this.sides.ny&&k("x","z",1*j,-1,a,d,-z,this.materials[3]);this.sides.pz&&k("x","y",1*j,-1,a,b,q,this.materials[4]);this.sides.nz&&k("x","y",-1*j,-1,a,b,-q,this.materials[5]);(function(){for(var B=
[],H=[],s=0,K=m.vertices.length;s<K;s++){for(var o=m.vertices[s],f=false,n=0,y=B.length;n<y;n++){var r=B[n];if(o.position.x==r.position.x&&o.position.y==r.position.y&&o.position.z==r.position.z){H[s]=n;f=true;break}}if(!f){H[s]=B.length;B.push(new THREE.Vertex(o.position.clone()))}}s=0;for(K=m.faces.length;s<K;s++){o=m.faces[s];o.a=H[o.a];o.b=H[o.b];o.c=H[o.c];o.d=H[o.d]}m.vertices=B})();this.computeCentroids();this.computeFaceNormals();this.sortFacesByMaterial()};Cube.prototype=new THREE.Geometry;
Cube.prototype.constructor=Cube;
var Cylinder=function(a,b,d,e,g){function h(m,p,z){j.vertices.push(new THREE.Vertex(new THREE.Vector3(m,p,z)))}THREE.Geometry.call(this);var j=this,c=Math.PI,k;for(k=0;k<a;k++)h(Math.sin(2*c*k/a)*b,Math.cos(2*c*k/a)*b,0);for(k=0;k<a;k++)h(Math.sin(2*c*k/a)*d,Math.cos(2*c*k/a)*d,e);for(k=0;k<a;k++)j.faces.push(new THREE.Face4(k,k+a,a+(k+1)%a,(k+1)%a));if(d!=0){h(0,0,-g);for(k=a;k<a+a/2;k++)j.faces.push(new THREE.Face4(2*a,(2*k-2*a)%a,(2*k-2*a+1)%a,(2*k-2*a+2)%a))}if(b!=0){h(0,0,e+g);for(k=a+a/2;k<
2*a;k++)j.faces.push(new THREE.Face4((2*k-2*a+2)%a+a,(2*k-2*a+1)%a+a,(2*k-2*a)%a+a,2*a+1))}this.computeCentroids();this.computeFaceNormals();this.sortFacesByMaterial()};Cylinder.prototype=new THREE.Geometry;Cylinder.prototype.constructor=Cylinder;
var Plane=function(a,b,d,e){THREE.Geometry.call(this);var g,h=a/2,j=b/2;d=d||1;e=e||1;var c=d+1,k=e+1;a=a/d;var m=b/e;for(g=0;g<k;g++)for(b=0;b<c;b++)this.vertices.push(new THREE.Vertex(new THREE.Vector3(b*a-h,-(g*m-j),0)));for(g=0;g<e;g++)for(b=0;b<d;b++){this.faces.push(new THREE.Face4(b+c*g,b+c*(g+1),b+1+c*(g+1),b+1+c*g));this.uvs.push([new THREE.UV(b/d,g/e),new THREE.UV(b/d,(g+1)/e),new THREE.UV((b+1)/d,(g+1)/e),new THREE.UV((b+1)/d,g/e)])}this.computeCentroids();this.computeFaceNormals();this.sortFacesByMaterial()};
Plane.prototype=new THREE.Geometry;Plane.prototype.constructor=Plane;
var Sphere=function(a,b,d){THREE.Geometry.call(this);var e,g=Math.PI,h=Math.max(3,b||8),j=Math.max(2,d||6);b=[];for(d=0;d<j+1;d++){e=d/j;var c=a*Math.cos(e*g),k=a*Math.sin(e*g),m=[],p=0;for(e=0;e<h;e++){var z=2*e/h,q=k*Math.sin(z*g);z=k*Math.cos(z*g);(d==0||d==j)&&e>0||(p=this.vertices.push(new THREE.Vertex(new THREE.Vector3(z,c,q)))-1);m.push(p)}b.push(m)}var v,A,B;g=b.length;for(d=0;d<g;d++){h=b[d].length;if(d>0)for(e=0;e<h;e++){m=e==h-1;j=b[d][m?0:e+1];c=b[d][m?h-1:e];k=b[d-1][m?h-1:e];m=b[d-1][m?
0:e+1];q=d/(g-1);v=(d-1)/(g-1);A=(e+1)/h;z=e/h;p=new THREE.UV(1-A,q);q=new THREE.UV(1-z,q);z=new THREE.UV(1-z,v);var H=new THREE.UV(1-A,v);if(d<b.length-1){v=this.vertices[j].position.clone();A=this.vertices[c].position.clone();B=this.vertices[k].position.clone();v.normalize();A.normalize();B.normalize();this.faces.push(new THREE.Face3(j,c,k,[new THREE.Vector3(v.x,v.y,v.z),new THREE.Vector3(A.x,A.y,A.z),new THREE.Vector3(B.x,B.y,B.z)]));this.uvs.push([p,q,z])}if(d>1){v=this.vertices[j].position.clone();
A=this.vertices[k].position.clone();B=this.vertices[m].position.clone();v.normalize();A.normalize();B.normalize();this.faces.push(new THREE.Face3(j,k,m,[new THREE.Vector3(v.x,v.y,v.z),new THREE.Vector3(A.x,A.y,A.z),new THREE.Vector3(B.x,B.y,B.z)]));this.uvs.push([p,z,H])}}}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals();this.sortFacesByMaterial();this.boundingSphere={radius:a}};Sphere.prototype=new THREE.Geometry;Sphere.prototype.constructor=Sphere;
function LathedObject(a,b,d){THREE.Geometry.call(this);b=b||12;d=d||2*Math.PI;b=d/b;for(var e=[],g=[],h=[],j=[],c=0;c<a.length;c++){this.vertices.push(new THREE.Vertex(a[c]));g[c]=this.vertices.length-1;e[c]=new THREE.Vector3(a[c].x,a[c].y,a[c].z)}for(var k=THREE.Matrix4.rotationZMatrix(b),m=0;m<=d+0.0010;m+=b){for(c=0;c<e.length;c++)if(m<d){e[c]=k.multiplyVector3(e[c].clone());this.vertices.push(new THREE.Vertex(e[c]));h[c]=this.vertices.length-1}else h=j;if(m==0)j=g;for(c=0;c<g.length-1;c++){this.faces.push(new THREE.Face4(h[c],
h[c+1],g[c+1],g[c]));this.uvs.push([new THREE.UV(m/d,c/a.length),new THREE.UV(m/d,(c+1)/a.length),new THREE.UV((m-b)/d,(c+1)/a.length),new THREE.UV((m-b)/d,c/a.length)])}g=h;h=[]}this.computeCentroids();this.computeFaceNormals();this.computeVertexNormals();this.sortFacesByMaterial()}LathedObject.prototype=new THREE.Geometry;LathedObject.prototype.constructor=LathedObject;THREE.Loader=function(a){this.statusDomElement=(this.showStatus=a)?this.addStatusElement():null};
THREE.Loader.prototype={addStatusElement:function(){var a=document.createElement("div");a.style.fontSize="0.8em";a.style.textAlign="left";a.style.background="#b00";a.style.color="#fff";a.style.width="140px";a.style.padding="0.25em 0.25em 0.25em 0.5em";a.style.position="absolute";a.style.right="0px";a.style.top="0px";a.style.zIndex=1E3;a.innerHTML="Loading ...";return a},updateProgress:function(a){var b="Loaded ";b+=a.total?(100*a.loaded/a.total).toFixed(0)+"%":(a.loaded/1E3).toFixed(2)+" KB";this.statusDomElement.innerHTML=
b},loadAsciiOld:function(a,b){var d=document.createElement("script");d.type="text/javascript";d.onload=b;d.src=a;document.getElementsByTagName("head")[0].appendChild(d)},loadAscii:function(a){var b=a.model,d=a.callback,e=a.texture_path?a.texture_path:THREE.Loader.prototype.extractUrlbase(b);a=(new Date).getTime();b=new Worker(b);b.onmessage=function(g){THREE.Loader.prototype.createModel(g.data,d,e)};b.postMessage(a)},loadBinary:function(a){var b=a.model,d=a.callback,e=a.texture_path?a.texture_path:
THREE.Loader.prototype.extractUrlbase(b),g=a.bin_path?a.bin_path:THREE.Loader.prototype.extractUrlbase(b);a=(new Date).getTime();b=new Worker(b);var h=this.showProgress?THREE.Loader.prototype.updateProgress:null;b.onmessage=function(j){THREE.Loader.prototype.loadAjaxBuffers(j.data.buffers,j.data.materials,d,g,e,h)};b.onerror=function(j){alert("worker.onerror: "+j.message+"\n"+j.data);j.preventDefault()};b.postMessage(a)},loadAjaxBuffers:function(a,b,d,e,g,h){var j=new XMLHttpRequest,c=e+"/"+a,k=0;
j.onreadystatechange=function(){if(j.readyState==4)j.status==200||j.status==0?THREE.Loader.prototype.createBinModel(j.responseText,d,g,b):alert("Couldn't load ["+c+"] ["+j.status+"]");else if(j.readyState==3){if(h){if(k==0)k=j.getResponseHeader("Content-Length");h({total:k,loaded:j.responseText.length})}}else if(j.readyState==2)k=j.getResponseHeader("Content-Length")};j.open("GET",c,true);j.overrideMimeType("text/plain; charset=x-user-defined");j.setRequestHeader("Content-Type","text/plain");j.send(null)},
createBinModel:function(a,b,d,e){var g=function(h){function j(t,J){var G=p(t,J),Y=p(t,J+1),ba=p(t,J+2),fa=p(t,J+3),ia=(fa<<1&255|ba>>7)-127;G=(ba&127)<<16|Y<<8|G;if(G==0&&ia==-127)return 0;return(1-2*(fa>>7))*(1+G*Math.pow(2,-23))*Math.pow(2,ia)}function c(t,J){var G=p(t,J),Y=p(t,J+1),ba=p(t,J+2);return(p(t,J+3)<<24)+(ba<<16)+(Y<<8)+G}function k(t,J){var G=p(t,J);return(p(t,J+1)<<8)+G}function m(t,J){var G=p(t,J);return G>127?G-256:G}function p(t,J){return t.charCodeAt(J)&255}function z(t){var J,
G,Y;J=c(a,t);G=c(a,t+y);Y=c(a,t+r);t=k(a,t+x);THREE.Loader.prototype.f3(s,J,G,Y,t)}function q(t){var J,G,Y,ba,fa,ia;J=c(a,t);G=c(a,t+y);Y=c(a,t+r);ba=k(a,t+x);fa=c(a,t+L);ia=c(a,t+u);t=c(a,t+C);THREE.Loader.prototype.f3n(s,f,J,G,Y,ba,fa,ia,t)}function v(t){var J,G,Y,ba;J=c(a,t);G=c(a,t+E);Y=c(a,t+D);ba=c(a,t+w);t=k(a,t+N);THREE.Loader.prototype.f4(s,J,G,Y,ba,t)}function A(t){var J,G,Y,ba,fa,ia,pa,ra;J=c(a,t);G=c(a,t+E);Y=c(a,t+D);ba=c(a,t+w);fa=k(a,t+N);ia=c(a,t+I);pa=c(a,t+T);ra=c(a,t+V);t=c(a,t+
O);THREE.Loader.prototype.f4n(s,f,J,G,Y,ba,fa,ia,pa,ra,t)}function B(t){var J,G;J=c(a,t);G=c(a,t+ca);t=c(a,t+W);THREE.Loader.prototype.uv3(s,n[J*2],n[J*2+1],n[G*2],n[G*2+1],n[t*2],n[t*2+1])}function H(t){var J,G,Y;J=c(a,t);G=c(a,t+Q);Y=c(a,t+S);t=c(a,t+aa);THREE.Loader.prototype.uv4(s,n[J*2],n[J*2+1],n[G*2],n[G*2+1],n[Y*2],n[Y*2+1],n[t*2],n[t*2+1])}var s=this,K=0,o,f=[],n=[],y,r,x,L,u,C,E,D,w,N,I,T,V,O,ca,W,Q,S,aa,X,F,R,U,ha,ga;THREE.Geometry.call(this);THREE.Loader.prototype.init_materials(s,e,h);
o={signature:a.substr(K,8),header_bytes:p(a,K+8),vertex_coordinate_bytes:p(a,K+9),normal_coordinate_bytes:p(a,K+10),uv_coordinate_bytes:p(a,K+11),vertex_index_bytes:p(a,K+12),normal_index_bytes:p(a,K+13),uv_index_bytes:p(a,K+14),material_index_bytes:p(a,K+15),nvertices:c(a,K+16),nnormals:c(a,K+16+4),nuvs:c(a,K+16+8),ntri_flat:c(a,K+16+12),ntri_smooth:c(a,K+16+16),ntri_flat_uv:c(a,K+16+20),ntri_smooth_uv:c(a,K+16+24),nquad_flat:c(a,K+16+28),nquad_smooth:c(a,K+16+32),nquad_flat_uv:c(a,K+16+36),nquad_smooth_uv:c(a,
K+16+40)};K+=o.header_bytes;y=o.vertex_index_bytes;r=o.vertex_index_bytes*2;x=o.vertex_index_bytes*3;L=o.vertex_index_bytes*3+o.material_index_bytes;u=o.vertex_index_bytes*3+o.material_index_bytes+o.normal_index_bytes;C=o.vertex_index_bytes*3+o.material_index_bytes+o.normal_index_bytes*2;E=o.vertex_index_bytes;D=o.vertex_index_bytes*2;w=o.vertex_index_bytes*3;N=o.vertex_index_bytes*4;I=o.vertex_index_bytes*4+o.material_index_bytes;T=o.vertex_index_bytes*4+o.material_index_bytes+o.normal_index_bytes;
V=o.vertex_index_bytes*4+o.material_index_bytes+o.normal_index_bytes*2;O=o.vertex_index_bytes*4+o.material_index_bytes+o.normal_index_bytes*3;ca=o.uv_index_bytes;W=o.uv_index_bytes*2;Q=o.uv_index_bytes;S=o.uv_index_bytes*2;aa=o.uv_index_bytes*3;h=o.vertex_index_bytes*3+o.material_index_bytes;ga=o.vertex_index_bytes*4+o.material_index_bytes;X=o.ntri_flat*h;F=o.ntri_smooth*(h+o.normal_index_bytes*3);R=o.ntri_flat_uv*(h+o.uv_index_bytes*3);U=o.ntri_smooth_uv*(h+o.normal_index_bytes*3+o.uv_index_bytes*
3);ha=o.nquad_flat*ga;h=o.nquad_smooth*(ga+o.normal_index_bytes*4);ga=o.nquad_flat_uv*(ga+o.uv_index_bytes*4);K+=function(t){var J,G,Y,ba=o.vertex_coordinate_bytes*3,fa=t+o.nvertices*ba;for(t=t;t<fa;t+=ba){J=j(a,t);G=j(a,t+o.vertex_coordinate_bytes);Y=j(a,t+o.vertex_coordinate_bytes*2);THREE.Loader.prototype.v(s,J,G,Y)}return o.nvertices*ba}(K);K+=function(t){var J,G,Y,ba=o.normal_coordinate_bytes*3,fa=t+o.nnormals*ba;for(t=t;t<fa;t+=ba){J=m(a,t);G=m(a,t+o.normal_coordinate_bytes);Y=m(a,t+o.normal_coordinate_bytes*
2);f.push(J/127,G/127,Y/127)}return o.nnormals*ba}(K);K+=function(t){var J,G,Y=o.uv_coordinate_bytes*2,ba=t+o.nuvs*Y;for(t=t;t<ba;t+=Y){J=j(a,t);G=j(a,t+o.uv_coordinate_bytes);n.push(J,G)}return o.nuvs*Y}(K);K=K;X=K+X;F=X+F;R=F+R;U=R+U;ha=U+ha;h=ha+h;ga=h+ga;(function(t){var J,G=o.vertex_index_bytes*3+o.material_index_bytes,Y=G+o.uv_index_bytes*3,ba=t+o.ntri_flat_uv*Y;for(J=t;J<ba;J+=Y){z(J);B(J+G)}return ba-t})(F);(function(t){var J,G=o.vertex_index_bytes*3+o.material_index_bytes+o.normal_index_bytes*
3,Y=G+o.uv_index_bytes*3,ba=t+o.ntri_smooth_uv*Y;for(J=t;J<ba;J+=Y){q(J);B(J+G)}return ba-t})(R);(function(t){var J,G=o.vertex_index_bytes*4+o.material_index_bytes,Y=G+o.uv_index_bytes*4,ba=t+o.nquad_flat_uv*Y;for(J=t;J<ba;J+=Y){v(J);H(J+G)}return ba-t})(h);(function(t){var J,G=o.vertex_index_bytes*4+o.material_index_bytes+o.normal_index_bytes*4,Y=G+o.uv_index_bytes*4,ba=t+o.nquad_smooth_uv*Y;for(J=t;J<ba;J+=Y){A(J);H(J+G)}return ba-t})(ga);(function(t){var J,G=o.vertex_index_bytes*3+o.material_index_bytes,
Y=t+o.ntri_flat*G;for(J=t;J<Y;J+=G)z(J);return Y-t})(K);(function(t){var J,G=o.vertex_index_bytes*3+o.material_index_bytes+o.normal_index_bytes*3,Y=t+o.ntri_smooth*G;for(J=t;J<Y;J+=G)q(J);return Y-t})(X);(function(t){var J,G=o.vertex_index_bytes*4+o.material_index_bytes,Y=t+o.nquad_flat*G;for(J=t;J<Y;J+=G)v(J);return Y-t})(U);(function(t){var J,G=o.vertex_index_bytes*4+o.material_index_bytes+o.normal_index_bytes*4,Y=t+o.nquad_smooth*G;for(J=t;J<Y;J+=G)A(J);return Y-t})(ha);this.computeCentroids();
this.computeFaceNormals();this.sortFacesByMaterial()};g.prototype=new THREE.Geometry;g.prototype.constructor=g;b(new g(d))},createModel:function(a,b,d){var e=function(g){var h=this;THREE.Geometry.call(this);THREE.Loader.prototype.init_materials(h,a.materials,g);(function(){var j,c,k,m,p;j=0;for(c=a.vertices.length;j<c;j+=3){k=a.vertices[j];m=a.vertices[j+1];p=a.vertices[j+2];THREE.Loader.prototype.v(h,k,m,p)}})();(function(){function j(A,B){THREE.Loader.prototype.f3(h,A[B],A[B+1],A[B+2],A[B+3])}function c(A,
B){THREE.Loader.prototype.f3n(h,a.normals,A[B],A[B+1],A[B+2],A[B+3],A[B+4],A[B+5],A[B+6])}function k(A,B){THREE.Loader.prototype.f4(h,A[B],A[B+1],A[B+2],A[B+3],A[B+4])}function m(A,B){THREE.Loader.prototype.f4n(h,a.normals,A[B],A[B+1],A[B+2],A[B+3],A[B+4],A[B+5],A[B+6],A[B+7],A[B+8])}function p(A,B){var H,s,K;H=A[B];s=A[B+1];K=A[B+2];THREE.Loader.prototype.uv3(h,a.uvs[H*2],a.uvs[H*2+1],a.uvs[s*2],a.uvs[s*2+1],a.uvs[K*2],a.uvs[K*2+1])}function z(A,B){var H,s,K,o;H=A[B];s=A[B+1];K=A[B+2];o=A[B+3];THREE.Loader.prototype.uv4(h,
a.uvs[H*2],a.uvs[H*2+1],a.uvs[s*2],a.uvs[s*2+1],a.uvs[K*2],a.uvs[K*2+1],a.uvs[o*2],a.uvs[o*2+1])}var q,v;q=0;for(v=a.triangles_uv.length;q<v;q+=7){j(a.triangles_uv,q);p(a.triangles_uv,q+4)}q=0;for(v=a.triangles_n_uv.length;q<v;q+=10){c(a.triangles_n_uv,q);p(a.triangles_n_uv,q+7)}q=0;for(v=a.quads_uv.length;q<v;q+=9){k(a.quads_uv,q);z(a.quads_uv,q+5)}q=0;for(v=a.quads_n_uv.length;q<v;q+=13){m(a.quads_n_uv,q);z(a.quads_n_uv,q+9)}q=0;for(v=a.triangles.length;q<v;q+=4)j(a.triangles,q);q=0;for(v=a.triangles_n.length;q<
v;q+=7)c(a.triangles_n,q);q=0;for(v=a.quads.length;q<v;q+=5)k(a.quads,q);q=0;for(v=a.quads_n.length;q<v;q+=9)m(a.quads_n,q)})();this.computeCentroids();this.computeFaceNormals();this.sortFacesByMaterial()};e.prototype=new THREE.Geometry;e.prototype.constructor=e;b(new e(d))},v:function(a,b,d,e){a.vertices.push(new THREE.Vertex(new THREE.Vector3(b,d,e)))},f3:function(a,b,d,e,g){a.faces.push(new THREE.Face3(b,d,e,null,a.materials[g]))},f4:function(a,b,d,e,g,h){a.faces.push(new THREE.Face4(b,d,e,g,null,
a.materials[h]))},f3n:function(a,b,d,e,g,h,j,c,k){h=a.materials[h];var m=b[c*3],p=b[c*3+1];c=b[c*3+2];var z=b[k*3],q=b[k*3+1];k=b[k*3+2];a.faces.push(new THREE.Face3(d,e,g,[new THREE.Vector3(b[j*3],b[j*3+1],b[j*3+2]),new THREE.Vector3(m,p,c),new THREE.Vector3(z,q,k)],h))},f4n:function(a,b,d,e,g,h,j,c,k,m,p){j=a.materials[j];var z=b[k*3],q=b[k*3+1];k=b[k*3+2];var v=b[m*3],A=b[m*3+1];m=b[m*3+2];var B=b[p*3],H=b[p*3+1];p=b[p*3+2];a.faces.push(new THREE.Face4(d,e,g,h,[new THREE.Vector3(b[c*3],b[c*3+1],
b[c*3+2]),new THREE.Vector3(z,q,k),new THREE.Vector3(v,A,m),new THREE.Vector3(B,H,p)],j))},uv3:function(a,b,d,e,g,h,j){var c=[];c.push(new THREE.UV(b,d));c.push(new THREE.UV(e,g));c.push(new THREE.UV(h,j));a.uvs.push(c)},uv4:function(a,b,d,e,g,h,j,c,k){var m=[];m.push(new THREE.UV(b,d));m.push(new THREE.UV(e,g));m.push(new THREE.UV(h,j));m.push(new THREE.UV(c,k));a.uvs.push(m)},init_materials:function(a,b,d){a.materials=[];for(var e=0;e<b.length;++e)a.materials[e]=[THREE.Loader.prototype.createMaterial(b[e],
d)]},createMaterial:function(a,b){function d(h){h=Math.log(h)/Math.LN2;return Math.floor(h)==h}var e,g;if(a.map_diffuse&&b){g=document.createElement("canvas");e=new THREE.MeshLambertMaterial({map:new THREE.Texture(g)});g=new Image;g.onload=function(){if(!d(this.width)||!d(this.height)){var h=Math.pow(2,Math.round(Math.log(this.width)/Math.LN2)),j=Math.pow(2,Math.round(Math.log(this.height)/Math.LN2));e.map.image.width=h;e.map.image.height=j;e.map.image.getContext("2d").drawImage(this,0,0,h,j)}else e.map.image=
this;e.map.image.loaded=1};g.src=b+"/"+a.map_diffuse}else if(a.col_diffuse){g=(a.col_diffuse[0]*255<<16)+(a.col_diffuse[1]*255<<8)+a.col_diffuse[2]*255;e=new THREE.MeshLambertMaterial({color:g,opacity:a.transparency})}else e=a.a_dbg_color?new THREE.MeshLambertMaterial({color:a.a_dbg_color}):new THREE.MeshLambertMaterial({color:15658734});return e},extractUrlbase:function(a){a=a.split("/");a.pop();return a.join("/")}};
